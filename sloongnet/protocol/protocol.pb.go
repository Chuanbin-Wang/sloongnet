// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package Protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Type
type ModuleType int32

const (
	ModuleType_Unconfigured ModuleType = 0
	ModuleType_Control      ModuleType = 1
	ModuleType_Firewall     ModuleType = 2
	ModuleType_Gateway      ModuleType = 3
	ModuleType_Data         ModuleType = 4
	ModuleType_Process      ModuleType = 5
	ModuleType_DB           ModuleType = 6
)

var ModuleType_name = map[int32]string{
	0: "Unconfigured",
	1: "Control",
	2: "Firewall",
	3: "Gateway",
	4: "Data",
	5: "Process",
	6: "DB",
}

var ModuleType_value = map[string]int32{
	"Unconfigured": 0,
	"Control":      1,
	"Firewall":     2,
	"Gateway":      3,
	"Data":         4,
	"Process":      5,
	"DB":           6,
}

func (x ModuleType) String() string {
	return proto.EnumName(ModuleType_name, int32(x))
}

func (ModuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

// Result
type ResultType int32

const (
	ResultType_Succeed ResultType = 0
	ResultType_Error   ResultType = 1
	ResultType_Warning ResultType = 2
)

var ResultType_name = map[int32]string{
	0: "Succeed",
	1: "Error",
	2: "Warning",
}

var ResultType_value = map[string]int32{
	"Succeed": 0,
	"Error":   1,
	"Warning": 2,
}

func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}

func (ResultType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

type Functions int32

const (
	// Flow: ContrulUI -> Control
	//Response: Content(string) - the uuid for sender.
	Functions_RegisteServer Functions = 0
	// Flow: ContrulUI -> Control
	//Response: Content(JSON) - wait config list.
	//Format:
	//{
	//"WaitConfigList": [
	//{
	//"UUID": "",
	//"IP": ""
	//}
	//]
	//}
	Functions_GetWaitConfigList Functions = 1
	// Flow: ControlUI -> Control
	//Response: Content(JSON) - Config template  list.
	//Format:
	//{
	//"ConfigTemplateList": [
	//{
	//"ID": "",
	//"Config": "" //Base64
	//}
	//]
	//}
	Functions_GetConfigTemplateList Functions = 2
	// Flow: ControlUI -> Control
	//Request: Content - Config template ID
	//Extend - Target template config
	//Response: Result
	Functions_SetServerConfigTemplate Functions = 3
	// Flow: ControlUI -> Control
	//Request: Content(JSON) - config info.
	//Format:
	//{
	//"ServerUUID":"",
	//"TemplateID":"",
	//}
	//Response: Result
	Functions_SetServerToTemplate Functions = 4
	// Flow: ControlUI -> Control
	//Request: Content - Target server UUID
	//Extend - Target server config
	//Response: Result
	Functions_SetServerConfig Functions = 5
	// Sender: All
	//Processer: Control
	//Response: ExtendData(bytes) - config data is not UTF8 string. cannot save in context field.
	//Note: Get the general server config data. the data type is GLOBAL_CONFIG.
	Functions_GetServerConfig Functions = 6
	// Sender: Process
	// Processer: Control
	// Response: No
	// Note: if the socket uuid is registed, the control will send error message
	Functions_UserLogin Functions = 7
	// Sender: Procxy
	//Processer : Process
	//Response data: Content - result with JSON string.
	Functions_ProcessMessage Functions = 8
)

var Functions_name = map[int32]string{
	0: "RegisteServer",
	1: "GetWaitConfigList",
	2: "GetConfigTemplateList",
	3: "SetServerConfigTemplate",
	4: "SetServerToTemplate",
	5: "SetServerConfig",
	6: "GetServerConfig",
	7: "UserLogin",
	8: "ProcessMessage",
}

var Functions_value = map[string]int32{
	"RegisteServer":           0,
	"GetWaitConfigList":       1,
	"GetConfigTemplateList":   2,
	"SetServerConfigTemplate": 3,
	"SetServerToTemplate":     4,
	"SetServerConfig":         5,
	"GetServerConfig":         6,
	"UserLogin":               7,
	"ProcessMessage":          8,
}

func (x Functions) String() string {
	return proto.EnumName(Functions_name, int32(x))
}

func (Functions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

type DataPackage struct {
	// 功能
	Function Functions `protobuf:"varint,1,opt,name=Function,json=function,proto3,enum=Protocol.Functions" json:"Function,omitempty"`
	// 优先级
	PriorityLevel int32 `protobuf:"varint,2,opt,name=PriorityLevel,json=priorityLevel,proto3" json:"PriorityLevel,omitempty"`
	// 流水号
	SerialNumber int64 `protobuf:"varint,3,opt,name=SerialNumber,json=serialNumber,proto3" json:"SerialNumber,omitempty"`
	// 校验串
	CheckString string `protobuf:"bytes,4,opt,name=CheckString,json=checkString,proto3" json:"CheckString,omitempty"`
	// 发送者的唯一标识符
	Sender string `protobuf:"bytes,5,opt,name=Sender,json=sender,proto3" json:"Sender,omitempty"`
	// 指定接收者为指定类型的所有成员
	Receiver int32 `protobuf:"varint,6,opt,name=Receiver,json=receiver,proto3" json:"Receiver,omitempty"`
	// 结果代码
	Result ResultType `protobuf:"varint,7,opt,name=Result,json=result,proto3,enum=Protocol.ResultType" json:"Result,omitempty"`
	// 消息内容
	Content string `protobuf:"bytes,8,opt,name=Content,json=content,proto3" json:"Content,omitempty"`
	// 扩展数据
	Extend               []byte   `protobuf:"bytes,9,opt,name=Extend,json=extend,proto3" json:"Extend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPackage) Reset()         { *m = DataPackage{} }
func (m *DataPackage) String() string { return proto.CompactTextString(m) }
func (*DataPackage) ProtoMessage()    {}
func (*DataPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *DataPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPackage.Unmarshal(m, b)
}
func (m *DataPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPackage.Marshal(b, m, deterministic)
}
func (m *DataPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPackage.Merge(m, src)
}
func (m *DataPackage) XXX_Size() int {
	return xxx_messageInfo_DataPackage.Size(m)
}
func (m *DataPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPackage.DiscardUnknown(m)
}

var xxx_messageInfo_DataPackage proto.InternalMessageInfo

func (m *DataPackage) GetFunction() Functions {
	if m != nil {
		return m.Function
	}
	return Functions_RegisteServer
}

func (m *DataPackage) GetPriorityLevel() int32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *DataPackage) GetSerialNumber() int64 {
	if m != nil {
		return m.SerialNumber
	}
	return 0
}

func (m *DataPackage) GetCheckString() string {
	if m != nil {
		return m.CheckString
	}
	return ""
}

func (m *DataPackage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *DataPackage) GetReceiver() int32 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *DataPackage) GetResult() ResultType {
	if m != nil {
		return m.Result
	}
	return ResultType_Succeed
}

func (m *DataPackage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DataPackage) GetExtend() []byte {
	if m != nil {
		return m.Extend
	}
	return nil
}

type GLOBAL_CONFIG struct {
	// Network
	ListenPort   int32  `protobuf:"varint,1,opt,name=ListenPort,json=listenPort,proto3" json:"ListenPort,omitempty"`
	EnableSSL    bool   `protobuf:"varint,2,opt,name=EnableSSL,json=enableSSL,proto3" json:"EnableSSL,omitempty"`
	CertFilePath string `protobuf:"bytes,3,opt,name=CertFilePath,json=certFilePath,proto3" json:"CertFilePath,omitempty"`
	KeyFilePath  string `protobuf:"bytes,4,opt,name=KeyFilePath,json=keyFilePath,proto3" json:"KeyFilePath,omitempty"`
	CertPasswd   string `protobuf:"bytes,5,opt,name=CertPasswd,json=certPasswd,proto3" json:"CertPasswd,omitempty"`
	ConnectTime  int32  `protobuf:"varint,6,opt,name=ConnectTime,json=connectTime,proto3" json:"ConnectTime,omitempty"`
	ReceiveTime  int32  `protobuf:"varint,7,opt,name=ReceiveTime,json=receiveTime,proto3" json:"ReceiveTime,omitempty"`
	// Log
	LogPath   string `protobuf:"bytes,8,opt,name=LogPath,json=logPath,proto3" json:"LogPath,omitempty"`
	LogLevel  int32  `protobuf:"varint,9,opt,name=LogLevel,json=logLevel,proto3" json:"LogLevel,omitempty"`
	DebugMode bool   `protobuf:"varint,10,opt,name=DebugMode,json=debugMode,proto3" json:"DebugMode,omitempty"`
	// Performance
	MQThreadQuantity      int32      `protobuf:"varint,11,opt,name=MQThreadQuantity,json=mQThreadQuantity,proto3" json:"MQThreadQuantity,omitempty"`
	EPollThreadQuantity   int32      `protobuf:"varint,12,opt,name=EPollThreadQuantity,json=ePollThreadQuantity,proto3" json:"EPollThreadQuantity,omitempty"`
	ProcessThreadQuantity int32      `protobuf:"varint,13,opt,name=ProcessThreadQuantity,json=processThreadQuantity,proto3" json:"ProcessThreadQuantity,omitempty"`
	PrioritySize          int32      `protobuf:"varint,14,opt,name=PrioritySize,json=prioritySize,proto3" json:"PrioritySize,omitempty"`
	Type                  ModuleType `protobuf:"varint,15,opt,name=Type,json=type,proto3,enum=Protocol.ModuleType" json:"Type,omitempty"`
	ExConfig              []byte     `protobuf:"bytes,16,opt,name=ExConfig,json=exConfig,proto3" json:"ExConfig,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *GLOBAL_CONFIG) Reset()         { *m = GLOBAL_CONFIG{} }
func (m *GLOBAL_CONFIG) String() string { return proto.CompactTextString(m) }
func (*GLOBAL_CONFIG) ProtoMessage()    {}
func (*GLOBAL_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

func (m *GLOBAL_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GLOBAL_CONFIG.Unmarshal(m, b)
}
func (m *GLOBAL_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GLOBAL_CONFIG.Marshal(b, m, deterministic)
}
func (m *GLOBAL_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GLOBAL_CONFIG.Merge(m, src)
}
func (m *GLOBAL_CONFIG) XXX_Size() int {
	return xxx_messageInfo_GLOBAL_CONFIG.Size(m)
}
func (m *GLOBAL_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_GLOBAL_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_GLOBAL_CONFIG proto.InternalMessageInfo

func (m *GLOBAL_CONFIG) GetListenPort() int32 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetEnableSSL() bool {
	if m != nil {
		return m.EnableSSL
	}
	return false
}

func (m *GLOBAL_CONFIG) GetCertFilePath() string {
	if m != nil {
		return m.CertFilePath
	}
	return ""
}

func (m *GLOBAL_CONFIG) GetKeyFilePath() string {
	if m != nil {
		return m.KeyFilePath
	}
	return ""
}

func (m *GLOBAL_CONFIG) GetCertPasswd() string {
	if m != nil {
		return m.CertPasswd
	}
	return ""
}

func (m *GLOBAL_CONFIG) GetConnectTime() int32 {
	if m != nil {
		return m.ConnectTime
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetReceiveTime() int32 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *GLOBAL_CONFIG) GetLogLevel() int32 {
	if m != nil {
		return m.LogLevel
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetDebugMode() bool {
	if m != nil {
		return m.DebugMode
	}
	return false
}

func (m *GLOBAL_CONFIG) GetMQThreadQuantity() int32 {
	if m != nil {
		return m.MQThreadQuantity
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetEPollThreadQuantity() int32 {
	if m != nil {
		return m.EPollThreadQuantity
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetProcessThreadQuantity() int32 {
	if m != nil {
		return m.ProcessThreadQuantity
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetPrioritySize() int32 {
	if m != nil {
		return m.PrioritySize
	}
	return 0
}

func (m *GLOBAL_CONFIG) GetType() ModuleType {
	if m != nil {
		return m.Type
	}
	return ModuleType_Unconfigured
}

func (m *GLOBAL_CONFIG) GetExConfig() []byte {
	if m != nil {
		return m.ExConfig
	}
	return nil
}

type CONTROL_CONFIG struct {
	BlockTime            int32    `protobuf:"varint,1,opt,name=BlockTime,json=blockTime,proto3" json:"BlockTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CONTROL_CONFIG) Reset()         { *m = CONTROL_CONFIG{} }
func (m *CONTROL_CONFIG) String() string { return proto.CompactTextString(m) }
func (*CONTROL_CONFIG) ProtoMessage()    {}
func (*CONTROL_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

func (m *CONTROL_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CONTROL_CONFIG.Unmarshal(m, b)
}
func (m *CONTROL_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CONTROL_CONFIG.Marshal(b, m, deterministic)
}
func (m *CONTROL_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CONTROL_CONFIG.Merge(m, src)
}
func (m *CONTROL_CONFIG) XXX_Size() int {
	return xxx_messageInfo_CONTROL_CONFIG.Size(m)
}
func (m *CONTROL_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_CONTROL_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_CONTROL_CONFIG proto.InternalMessageInfo

func (m *CONTROL_CONFIG) GetBlockTime() int32 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

type DB_CONFIG struct {
	ServerAddress        string   `protobuf:"bytes,1,opt,name=ServerAddress,json=serverAddress,proto3" json:"ServerAddress,omitempty"`
	ServerPort           int32    `protobuf:"varint,2,opt,name=ServerPort,json=serverPort,proto3" json:"ServerPort,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=User,json=user,proto3" json:"User,omitempty"`
	Passwd               string   `protobuf:"bytes,4,opt,name=Passwd,json=passwd,proto3" json:"Passwd,omitempty"`
	Database             string   `protobuf:"bytes,5,opt,name=Database,json=database,proto3" json:"Database,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DB_CONFIG) Reset()         { *m = DB_CONFIG{} }
func (m *DB_CONFIG) String() string { return proto.CompactTextString(m) }
func (*DB_CONFIG) ProtoMessage()    {}
func (*DB_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{3}
}

func (m *DB_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DB_CONFIG.Unmarshal(m, b)
}
func (m *DB_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DB_CONFIG.Marshal(b, m, deterministic)
}
func (m *DB_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DB_CONFIG.Merge(m, src)
}
func (m *DB_CONFIG) XXX_Size() int {
	return xxx_messageInfo_DB_CONFIG.Size(m)
}
func (m *DB_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_DB_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_DB_CONFIG proto.InternalMessageInfo

func (m *DB_CONFIG) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *DB_CONFIG) GetServerPort() int32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

func (m *DB_CONFIG) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DB_CONFIG) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *DB_CONFIG) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

type DATA_CONFIG struct {
	DataReceivePort      int32    `protobuf:"varint,1,opt,name=DataReceivePort,json=dataReceivePort,proto3" json:"DataReceivePort,omitempty"`
	DataRecvTime         int32    `protobuf:"varint,2,opt,name=DataRecvTime,json=dataRecvTime,proto3" json:"DataRecvTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DATA_CONFIG) Reset()         { *m = DATA_CONFIG{} }
func (m *DATA_CONFIG) String() string { return proto.CompactTextString(m) }
func (*DATA_CONFIG) ProtoMessage()    {}
func (*DATA_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{4}
}

func (m *DATA_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DATA_CONFIG.Unmarshal(m, b)
}
func (m *DATA_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DATA_CONFIG.Marshal(b, m, deterministic)
}
func (m *DATA_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DATA_CONFIG.Merge(m, src)
}
func (m *DATA_CONFIG) XXX_Size() int {
	return xxx_messageInfo_DATA_CONFIG.Size(m)
}
func (m *DATA_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_DATA_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_DATA_CONFIG proto.InternalMessageInfo

func (m *DATA_CONFIG) GetDataReceivePort() int32 {
	if m != nil {
		return m.DataReceivePort
	}
	return 0
}

func (m *DATA_CONFIG) GetDataRecvTime() int32 {
	if m != nil {
		return m.DataRecvTime
	}
	return 0
}

type GATEWAY_CONFIG struct {
	ClientCheckTime      int32    `protobuf:"varint,1,opt,name=ClientCheckTime,json=clientCheckTime,proto3" json:"ClientCheckTime,omitempty"`
	ClientCheckKey       string   `protobuf:"bytes,2,opt,name=ClientCheckKey,json=clientCheckKey,proto3" json:"ClientCheckKey,omitempty"`
	TimeoutCheckInterval int32    `protobuf:"varint,3,opt,name=TimeoutCheckInterval,json=timeoutCheckInterval,proto3" json:"TimeoutCheckInterval,omitempty"`
	TimeoutTime          int32    `protobuf:"varint,4,opt,name=TimeoutTime,json=timeoutTime,proto3" json:"TimeoutTime,omitempty"`
	ProcessAddress       string   `protobuf:"bytes,5,opt,name=ProcessAddress,json=processAddress,proto3" json:"ProcessAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GATEWAY_CONFIG) Reset()         { *m = GATEWAY_CONFIG{} }
func (m *GATEWAY_CONFIG) String() string { return proto.CompactTextString(m) }
func (*GATEWAY_CONFIG) ProtoMessage()    {}
func (*GATEWAY_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{5}
}

func (m *GATEWAY_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GATEWAY_CONFIG.Unmarshal(m, b)
}
func (m *GATEWAY_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GATEWAY_CONFIG.Marshal(b, m, deterministic)
}
func (m *GATEWAY_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GATEWAY_CONFIG.Merge(m, src)
}
func (m *GATEWAY_CONFIG) XXX_Size() int {
	return xxx_messageInfo_GATEWAY_CONFIG.Size(m)
}
func (m *GATEWAY_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_GATEWAY_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_GATEWAY_CONFIG proto.InternalMessageInfo

func (m *GATEWAY_CONFIG) GetClientCheckTime() int32 {
	if m != nil {
		return m.ClientCheckTime
	}
	return 0
}

func (m *GATEWAY_CONFIG) GetClientCheckKey() string {
	if m != nil {
		return m.ClientCheckKey
	}
	return ""
}

func (m *GATEWAY_CONFIG) GetTimeoutCheckInterval() int32 {
	if m != nil {
		return m.TimeoutCheckInterval
	}
	return 0
}

func (m *GATEWAY_CONFIG) GetTimeoutTime() int32 {
	if m != nil {
		return m.TimeoutTime
	}
	return 0
}

func (m *GATEWAY_CONFIG) GetProcessAddress() string {
	if m != nil {
		return m.ProcessAddress
	}
	return ""
}

type FIREWALL_CONFIG struct {
	BlockTime            int32    `protobuf:"varint,1,opt,name=BlockTime,json=blockTime,proto3" json:"BlockTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FIREWALL_CONFIG) Reset()         { *m = FIREWALL_CONFIG{} }
func (m *FIREWALL_CONFIG) String() string { return proto.CompactTextString(m) }
func (*FIREWALL_CONFIG) ProtoMessage()    {}
func (*FIREWALL_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{6}
}

func (m *FIREWALL_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FIREWALL_CONFIG.Unmarshal(m, b)
}
func (m *FIREWALL_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FIREWALL_CONFIG.Marshal(b, m, deterministic)
}
func (m *FIREWALL_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FIREWALL_CONFIG.Merge(m, src)
}
func (m *FIREWALL_CONFIG) XXX_Size() int {
	return xxx_messageInfo_FIREWALL_CONFIG.Size(m)
}
func (m *FIREWALL_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_FIREWALL_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_FIREWALL_CONFIG proto.InternalMessageInfo

func (m *FIREWALL_CONFIG) GetBlockTime() int32 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

type PROCESS_CONFIG struct {
	LuaContextQuantity     int32    `protobuf:"varint,1,opt,name=LuaContextQuantity,json=luaContextQuantity,proto3" json:"LuaContextQuantity,omitempty"`
	LuaScriptFolder        string   `protobuf:"bytes,2,opt,name=LuaScriptFolder,json=luaScriptFolder,proto3" json:"LuaScriptFolder,omitempty"`
	LuaEntryFile           string   `protobuf:"bytes,3,opt,name=LuaEntryFile,json=luaEntryFile,proto3" json:"LuaEntryFile,omitempty"`
	LuaEntryFunction       string   `protobuf:"bytes,4,opt,name=LuaEntryFunction,json=luaEntryFunction,proto3" json:"LuaEntryFunction,omitempty"`
	LuaProcessFunction     string   `protobuf:"bytes,5,opt,name=LuaProcessFunction,json=luaProcessFunction,proto3" json:"LuaProcessFunction,omitempty"`
	LuaSocketCloseFunction string   `protobuf:"bytes,6,opt,name=LuaSocketCloseFunction,json=luaSocketCloseFunction,proto3" json:"LuaSocketCloseFunction,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *PROCESS_CONFIG) Reset()         { *m = PROCESS_CONFIG{} }
func (m *PROCESS_CONFIG) String() string { return proto.CompactTextString(m) }
func (*PROCESS_CONFIG) ProtoMessage()    {}
func (*PROCESS_CONFIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{7}
}

func (m *PROCESS_CONFIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PROCESS_CONFIG.Unmarshal(m, b)
}
func (m *PROCESS_CONFIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PROCESS_CONFIG.Marshal(b, m, deterministic)
}
func (m *PROCESS_CONFIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PROCESS_CONFIG.Merge(m, src)
}
func (m *PROCESS_CONFIG) XXX_Size() int {
	return xxx_messageInfo_PROCESS_CONFIG.Size(m)
}
func (m *PROCESS_CONFIG) XXX_DiscardUnknown() {
	xxx_messageInfo_PROCESS_CONFIG.DiscardUnknown(m)
}

var xxx_messageInfo_PROCESS_CONFIG proto.InternalMessageInfo

func (m *PROCESS_CONFIG) GetLuaContextQuantity() int32 {
	if m != nil {
		return m.LuaContextQuantity
	}
	return 0
}

func (m *PROCESS_CONFIG) GetLuaScriptFolder() string {
	if m != nil {
		return m.LuaScriptFolder
	}
	return ""
}

func (m *PROCESS_CONFIG) GetLuaEntryFile() string {
	if m != nil {
		return m.LuaEntryFile
	}
	return ""
}

func (m *PROCESS_CONFIG) GetLuaEntryFunction() string {
	if m != nil {
		return m.LuaEntryFunction
	}
	return ""
}

func (m *PROCESS_CONFIG) GetLuaProcessFunction() string {
	if m != nil {
		return m.LuaProcessFunction
	}
	return ""
}

func (m *PROCESS_CONFIG) GetLuaSocketCloseFunction() string {
	if m != nil {
		return m.LuaSocketCloseFunction
	}
	return ""
}

func init() {
	proto.RegisterEnum("Protocol.ModuleType", ModuleType_name, ModuleType_value)
	proto.RegisterEnum("Protocol.ResultType", ResultType_name, ResultType_value)
	proto.RegisterEnum("Protocol.Functions", Functions_name, Functions_value)
	proto.RegisterType((*DataPackage)(nil), "Protocol.DataPackage")
	proto.RegisterType((*GLOBAL_CONFIG)(nil), "Protocol.GLOBAL_CONFIG")
	proto.RegisterType((*CONTROL_CONFIG)(nil), "Protocol.CONTROL_CONFIG")
	proto.RegisterType((*DB_CONFIG)(nil), "Protocol.DB_CONFIG")
	proto.RegisterType((*DATA_CONFIG)(nil), "Protocol.DATA_CONFIG")
	proto.RegisterType((*GATEWAY_CONFIG)(nil), "Protocol.GATEWAY_CONFIG")
	proto.RegisterType((*FIREWALL_CONFIG)(nil), "Protocol.FIREWALL_CONFIG")
	proto.RegisterType((*PROCESS_CONFIG)(nil), "Protocol.PROCESS_CONFIG")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 1068 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x0e, 0x65, 0x89, 0x26, 0x47, 0x7f, 0xcc, 0x3a, 0x4e, 0xd8, 0x34, 0x28, 0x04, 0x21, 0x28,
	0x04, 0xa3, 0x70, 0xda, 0xb4, 0xe8, 0x5d, 0x96, 0x25, 0x21, 0x08, 0x1d, 0x2b, 0xa4, 0x02, 0xa3,
	0xe8, 0xa1, 0xa0, 0xc8, 0x89, 0x4c, 0x78, 0xcd, 0x15, 0x96, 0x4b, 0xdb, 0xea, 0x9b, 0xf4, 0xda,
	0x07, 0xe9, 0xbd, 0xe7, 0xbe, 0x40, 0x1f, 0xa5, 0xd8, 0x5d, 0x92, 0xfa, 0x89, 0x0f, 0xbd, 0x69,
	0xbe, 0xf9, 0x96, 0x3b, 0xfb, 0xed, 0x37, 0xb3, 0x82, 0xce, 0x8a, 0x33, 0xc1, 0x22, 0x46, 0x4f,
	0xd5, 0x0f, 0x62, 0xcd, 0x8a, 0xb8, 0xff, 0x57, 0x0d, 0x9a, 0xe7, 0xa1, 0x08, 0x67, 0x61, 0x74,
	0x13, 0x2e, 0x91, 0xbc, 0x01, 0x6b, 0x92, 0xa7, 0x91, 0x48, 0x58, 0xea, 0x1a, 0x3d, 0x63, 0xd0,
	0x79, 0x7b, 0x74, 0x5a, 0x92, 0x4f, 0xcb, 0x4c, 0xe6, 0x5b, 0x9f, 0x8b, 0x9f, 0xe4, 0x35, 0xb4,
	0x67, 0x3c, 0x61, 0x3c, 0x11, 0x6b, 0x0f, 0xef, 0x90, 0xba, 0xb5, 0x9e, 0x31, 0x68, 0xf8, 0xed,
	0xd5, 0x36, 0x48, 0xfa, 0xd0, 0x0a, 0x90, 0x27, 0x21, 0xfd, 0x90, 0xdf, 0x2e, 0x90, 0xbb, 0x07,
	0x3d, 0x63, 0x70, 0xe0, 0xb7, 0xb2, 0x2d, 0x8c, 0xf4, 0xa0, 0x39, 0xba, 0xc6, 0xe8, 0x26, 0x10,
	0x3c, 0x49, 0x97, 0x6e, 0xbd, 0x67, 0x0c, 0x6c, 0xbf, 0x19, 0x6d, 0x20, 0xf2, 0x1c, 0xcc, 0x00,
	0xd3, 0x18, 0xb9, 0xdb, 0x50, 0x49, 0x33, 0x53, 0x11, 0x79, 0x09, 0x96, 0x8f, 0x11, 0x26, 0x77,
	0xc8, 0x5d, 0x53, 0x6d, 0x6f, 0xf1, 0x22, 0x26, 0xdf, 0x81, 0xe9, 0x63, 0x96, 0x53, 0xe1, 0x1e,
	0xaa, 0xe3, 0x3c, 0xdb, 0x1c, 0x47, 0xe3, 0xf3, 0xf5, 0x0a, 0x7d, 0x93, 0xab, 0xdf, 0xc4, 0x85,
	0xc3, 0x11, 0x4b, 0x05, 0xa6, 0xc2, 0xb5, 0xd4, 0x16, 0x87, 0x91, 0x0e, 0xe5, 0xde, 0xe3, 0x07,
	0x81, 0x69, 0xec, 0xda, 0x3d, 0x63, 0xd0, 0xf2, 0x4d, 0x54, 0x51, 0xff, 0xef, 0x3a, 0xb4, 0xa7,
	0xde, 0xe5, 0xd9, 0xd0, 0xfb, 0x6d, 0x74, 0xf9, 0x61, 0xf2, 0x6e, 0x4a, 0xbe, 0x01, 0xf0, 0x92,
	0x4c, 0x60, 0x3a, 0x63, 0x5c, 0x28, 0x11, 0x1b, 0x3e, 0xd0, 0x0a, 0x21, 0xaf, 0xc0, 0x1e, 0xa7,
	0xe1, 0x82, 0x62, 0x10, 0x78, 0x4a, 0x2d, 0xcb, 0xb7, 0xb1, 0x04, 0xa4, 0x52, 0x23, 0xe4, 0x62,
	0x92, 0x50, 0x9c, 0x85, 0xe2, 0x5a, 0x29, 0x65, 0xfb, 0xad, 0x68, 0x0b, 0x93, 0x4a, 0xbd, 0xc7,
	0x75, 0x45, 0x29, 0x94, 0xba, 0xd9, 0x40, 0xb2, 0x06, 0xf9, 0x95, 0x59, 0x98, 0x65, 0xf7, 0x71,
	0xa1, 0x16, 0x44, 0x15, 0xa2, 0xb4, 0x66, 0x69, 0x8a, 0x91, 0x98, 0x27, 0xb7, 0x58, 0x88, 0xd6,
	0x8c, 0x36, 0x90, 0x64, 0x14, 0x9a, 0x2a, 0xc6, 0xa1, 0x66, 0xf0, 0x0d, 0x24, 0xb5, 0xf2, 0xd8,
	0x52, 0x55, 0x50, 0x68, 0x45, 0x75, 0x28, 0xef, 0xc3, 0x63, 0x4b, 0x6d, 0x07, 0x5b, 0xdf, 0x07,
	0x2d, 0x62, 0x79, 0xfa, 0x73, 0x5c, 0xe4, 0xcb, 0x0b, 0x16, 0xa3, 0x0b, 0xfa, 0xf4, 0x71, 0x09,
	0x90, 0x13, 0x70, 0x2e, 0x3e, 0xce, 0xaf, 0x39, 0x86, 0xf1, 0xc7, 0x3c, 0x4c, 0x45, 0x22, 0xd6,
	0x6e, 0x53, 0x7d, 0xc1, 0xb9, 0xdd, 0xc3, 0xc9, 0xf7, 0x70, 0x34, 0x9e, 0x31, 0x4a, 0xf7, 0xe8,
	0x2d, 0x45, 0x3f, 0xc2, 0x2f, 0x53, 0xe4, 0x27, 0x38, 0x9e, 0x71, 0x16, 0x61, 0x96, 0xed, 0xad,
	0x69, 0xab, 0x35, 0xc7, 0xab, 0xc7, 0x92, 0xf2, 0x46, 0x4a, 0x87, 0x07, 0xc9, 0xef, 0xe8, 0x76,
	0x14, 0xb9, 0xb5, 0xda, 0xc2, 0xc8, 0x00, 0xea, 0xd2, 0x47, 0x6e, 0x77, 0xdf, 0x63, 0x17, 0x2c,
	0xce, 0x29, 0x2a, 0x8f, 0xd5, 0xc5, 0x7a, 0x85, 0x52, 0x9b, 0xf1, 0xc3, 0x88, 0xa5, 0x9f, 0x93,
	0xa5, 0xeb, 0x28, 0x27, 0x59, 0x58, 0xc4, 0xfd, 0x53, 0xe8, 0x8c, 0x2e, 0x3f, 0xcc, 0xfd, 0xcb,
	0xca, 0x4b, 0xaf, 0xc0, 0x3e, 0xa3, 0x2c, 0xba, 0x51, 0x77, 0xa0, 0xad, 0x64, 0x2f, 0x4a, 0xa0,
	0xff, 0x87, 0x01, 0xf6, 0xf9, 0x59, 0xc9, 0x7d, 0x0d, 0xed, 0x00, 0xf9, 0x1d, 0xf2, 0x61, 0x1c,
	0x73, 0xcc, 0x32, 0xc5, 0xb7, 0xfd, 0x76, 0xb6, 0x0d, 0x4a, 0x67, 0x68, 0x96, 0x72, 0xa7, 0x6e,
	0x56, 0xc8, 0x2a, 0x84, 0x10, 0xa8, 0x7f, 0xca, 0x8a, 0x0e, 0xb5, 0xfd, 0x7a, 0x9e, 0x21, 0x97,
	0xde, 0x2f, 0x9c, 0xa4, 0xad, 0x66, 0xae, 0xb4, 0x8b, 0x5e, 0x82, 0x25, 0x67, 0xc7, 0x22, 0xcc,
	0xb0, 0xf0, 0x98, 0x15, 0x17, 0x71, 0xff, 0x57, 0x68, 0x9e, 0x0f, 0xe7, 0xc3, 0xb2, 0xb8, 0x01,
	0x74, 0x25, 0xb5, 0xb0, 0xd4, 0x56, 0x67, 0x74, 0xe3, 0x5d, 0x58, 0xca, 0x5d, 0x30, 0xef, 0xd4,
	0xa9, 0x75, 0x89, 0xad, 0x78, 0x0b, 0xeb, 0xff, 0x6b, 0x40, 0x67, 0x3a, 0x9c, 0x8f, 0xaf, 0x86,
	0xbf, 0x6c, 0x6d, 0x30, 0xa2, 0x09, 0xa6, 0x42, 0xcd, 0x90, 0x2d, 0xbd, 0xba, 0xd1, 0x2e, 0x4c,
	0xbe, 0x85, 0xce, 0x16, 0xf3, 0x3d, 0xae, 0xd5, 0x16, 0xb6, 0xdf, 0x89, 0x76, 0x50, 0xf2, 0x16,
	0x9e, 0x49, 0x3e, 0xcb, 0x35, 0xf4, 0x2e, 0x15, 0xc8, 0xef, 0x42, 0xaa, 0x94, 0x69, 0xf8, 0xcf,
	0xc4, 0x23, 0x39, 0xd9, 0x35, 0xc5, 0x1a, 0x55, 0x41, 0x5d, 0x77, 0x8d, 0xd8, 0x40, 0x72, 0xf7,
	0xc2, 0x83, 0xe5, 0x35, 0x69, 0xe5, 0x3a, 0xab, 0x1d, 0xb4, 0xff, 0x06, 0xba, 0x93, 0x77, 0xfe,
	0xf8, 0x6a, 0xe8, 0xfd, 0x4f, 0x33, 0xfc, 0x59, 0x83, 0xce, 0xcc, 0xbf, 0x1c, 0x8d, 0x83, 0xa0,
	0x5c, 0x70, 0x0a, 0xc4, 0xcb, 0x43, 0x35, 0xd0, 0x1e, 0x44, 0x65, 0x76, 0xbd, 0x92, 0xd0, 0x2f,
	0x32, 0x52, 0x43, 0x2f, 0x0f, 0x83, 0x88, 0x27, 0x2b, 0x31, 0x61, 0x54, 0x0e, 0x5a, 0x2d, 0x4d,
	0x97, 0xee, 0xc2, 0xf2, 0x92, 0xbc, 0x3c, 0x1c, 0xa7, 0x82, 0xab, 0x99, 0x53, 0x4e, 0x29, 0xba,
	0x85, 0xc9, 0x5e, 0xae, 0x38, 0xe5, 0x93, 0xa2, 0xfd, 0xe3, 0xd0, 0x3d, 0xbc, 0xa8, 0xb4, 0x10,
	0xa6, 0x62, 0x6b, 0x65, 0x64, 0xa5, 0x7b, 0x19, 0xf2, 0x33, 0x3c, 0x97, 0x95, 0xb2, 0xe8, 0x06,
	0xc5, 0x88, 0xb2, 0x0c, 0xab, 0x35, 0xa6, 0x5a, 0xf3, 0x9c, 0x3e, 0x9a, 0x3d, 0x41, 0x80, 0x4d,
	0x47, 0x12, 0x07, 0x5a, 0x9f, 0xd2, 0x48, 0xf5, 0x5e, 0xce, 0x31, 0x76, 0x9e, 0x90, 0xa6, 0x9e,
	0xff, 0x9c, 0x51, 0xc7, 0x20, 0x2d, 0xb0, 0x26, 0x09, 0xc7, 0xfb, 0x90, 0x52, 0xa7, 0x26, 0x53,
	0xd3, 0x50, 0xe0, 0x7d, 0xb8, 0x76, 0x0e, 0x88, 0x05, 0x75, 0x69, 0x52, 0xa7, 0x2e, 0xe1, 0xa2,
	0x38, 0xa7, 0x41, 0x4c, 0xa8, 0x9d, 0x9f, 0x39, 0xe6, 0xc9, 0x0f, 0x00, 0x9b, 0xc7, 0x45, 0x52,
	0x82, 0x3c, 0x8a, 0x50, 0xed, 0x60, 0x43, 0x63, 0xcc, 0x39, 0xe3, 0x8e, 0x21, 0xf1, 0xab, 0x90,
	0xa7, 0x49, 0xba, 0x74, 0x6a, 0x27, 0xff, 0x18, 0x60, 0x57, 0xef, 0x2b, 0x79, 0x0a, 0x6d, 0x1f,
	0x97, 0xf2, 0xcd, 0xd0, 0xcd, 0xea, 0x3c, 0x21, 0xc7, 0xf0, 0x74, 0x8a, 0xe2, 0x2a, 0x4c, 0x84,
	0x9e, 0x16, 0xf2, 0x8d, 0x71, 0x0c, 0xf2, 0x15, 0x1c, 0x4f, 0xb1, 0x80, 0xe6, 0x78, 0xbb, 0xa2,
	0xa1, 0x40, 0x95, 0xaa, 0x91, 0xaf, 0xe1, 0x45, 0x80, 0x42, 0x7f, 0x60, 0x97, 0xe0, 0x1c, 0x90,
	0x17, 0x70, 0x54, 0x25, 0xe7, 0xac, 0x4a, 0xd4, 0xc9, 0x11, 0x74, 0xf7, 0x56, 0x39, 0x0d, 0x09,
	0x4e, 0xf7, 0x40, 0x93, 0xb4, 0xc1, 0x96, 0xa3, 0xc2, 0x63, 0xcb, 0x24, 0x75, 0x0e, 0x09, 0xa9,
	0x9c, 0x7d, 0x81, 0x59, 0x16, 0x2e, 0xd1, 0xb1, 0x16, 0xa6, 0xfa, 0xbf, 0xf1, 0xe3, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xb6, 0x34, 0x75, 0xd5, 0x81, 0x08, 0x00, 0x00,
}
