// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace Protocol {
class DataPackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataPackage>
      _instance;
} _DataPackage_default_instance_;
class GLOBAL_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GLOBAL_CONFIG>
      _instance;
} _GLOBAL_CONFIG_default_instance_;
}  // namespace Protocol
namespace protobuf_protocol_2eproto {
static void InitDefaultsDataPackage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_DataPackage_default_instance_;
    new (ptr) ::Protocol::DataPackage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::DataPackage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataPackage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataPackage}, {}};

static void InitDefaultsGLOBAL_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_GLOBAL_CONFIG_default_instance_;
    new (ptr) ::Protocol::GLOBAL_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::GLOBAL_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GLOBAL_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGLOBAL_CONFIG}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DataPackage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GLOBAL_CONFIG.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, prioritylevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, serialnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, checkstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::DataPackage, extend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, listenport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, enablessl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, certfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, keyfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, certpasswd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, connecttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, receivetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, logpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, loglevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, debugmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, mqthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, epollthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, processthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, prioritysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, modulename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, modulepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, moduleconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Protocol::GLOBAL_CONFIG, modulereference_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::DataPackage)},
  { 13, -1, sizeof(::Protocol::GLOBAL_CONFIG)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::_DataPackage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Protocol::_GLOBAL_CONFIG_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016protocol.proto\022\010Protocol\"\315\001\n\013DataPacka"
      "ge\022%\n\010Function\030\001 \001(\0162\023.Protocol.Function"
      "s\022\025\n\rPriorityLevel\030\002 \001(\005\022\024\n\014SerialNumber"
      "\030\003 \001(\003\022\023\n\013CheckString\030\004 \001(\t\022\016\n\006Sender\030\005 "
      "\001(\t\022$\n\006Result\030\007 \001(\0162\024.Protocol.ResultTyp"
      "e\022\017\n\007Content\030\010 \001(\t\022\016\n\006Extend\030\t \001(\014\"\254\003\n\rG"
      "LOBAL_CONFIG\022\022\n\nListenPort\030\001 \001(\005\022\021\n\tEnab"
      "leSSL\030\002 \001(\010\022\024\n\014CertFilePath\030\003 \001(\t\022\023\n\013Key"
      "FilePath\030\004 \001(\t\022\022\n\nCertPasswd\030\005 \001(\t\022\023\n\013Co"
      "nnectTime\030\006 \001(\005\022\023\n\013ReceiveTime\030\007 \001(\005\022\017\n\007"
      "LogPath\030\010 \001(\t\022$\n\010LogLevel\030\t \001(\0162\022.Protoc"
      "ol.LogLevel\022\021\n\tDebugMode\030\n \001(\010\022\030\n\020MQThre"
      "adQuantity\030\013 \001(\005\022\033\n\023EPollThreadQuantity\030"
      "\014 \001(\005\022\035\n\025ProcessThreadQuantity\030\r \001(\005\022\024\n\014"
      "PrioritySize\030\016 \001(\005\022\022\n\nModuleName\030\020 \001(\t\022\022"
      "\n\nModulePath\030\021 \001(\t\022\024\n\014ModuleConfig\030\022 \001(\014"
      "\022\027\n\017ModuleReference\030\023 \001(\t*I\n\nResultType\022"
      "\013\n\007Succeed\020\000\022\t\n\005Error\020\001\022\013\n\007Warning\020\002\022\t\n\005"
      "Retry\020\003\022\013\n\007Invalid\020\004*^\n\010LogLevel\022\007\n\003All\020"
      "\000\022\n\n\006Verbos\020\001\022\t\n\005Debug\020\002\022\010\n\004Info\020\003\022\010\n\004Wa"
      "rn\020\004\022\007\n\003Err\020\005\022\n\n\006Assert\020\006\022\t\n\005Fatal\020\007*0\n\t"
      "Functions\022\022\n\016ProcessMessage\020\000\022\017\n\013Restart"
      "Node\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 894);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protocol_2eproto
namespace Protocol {
const ::google::protobuf::EnumDescriptor* ResultType_descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_enum_descriptors[0];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LogLevel_descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_enum_descriptors[1];
}
bool LogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Functions_descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_enum_descriptors[2];
}
bool Functions_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DataPackage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataPackage::kFunctionFieldNumber;
const int DataPackage::kPriorityLevelFieldNumber;
const int DataPackage::kSerialNumberFieldNumber;
const int DataPackage::kCheckStringFieldNumber;
const int DataPackage::kSenderFieldNumber;
const int DataPackage::kResultFieldNumber;
const int DataPackage::kContentFieldNumber;
const int DataPackage::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataPackage::DataPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_DataPackage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.DataPackage)
}
DataPackage::DataPackage(const DataPackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  checkstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checkstring().size() > 0) {
    checkstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkstring_);
  }
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&function_, &from.function_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&function_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:Protocol.DataPackage)
}

void DataPackage::SharedCtor() {
  checkstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&function_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&function_)) + sizeof(result_));
}

DataPackage::~DataPackage() {
  // @@protoc_insertion_point(destructor:Protocol.DataPackage)
  SharedDtor();
}

void DataPackage::SharedDtor() {
  checkstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataPackage::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataPackage& DataPackage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_DataPackage.base);
  return *internal_default_instance();
}


void DataPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.DataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checkstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&function_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&function_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool DataPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.DataPackage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Protocol.Functions Function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_function(static_cast< ::Protocol::Functions >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PriorityLevel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prioritylevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SerialNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CheckString = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checkstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checkstring().data(), static_cast<int>(this->checkstring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.DataPackage.CheckString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Sender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.DataPackage.Sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Protocol.ResultType Result = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::Protocol::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.DataPackage.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.DataPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.DataPackage)
  return false;
#undef DO_
}

void DataPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.DataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.Functions Function = 1;
  if (this->function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->function(), output);
  }

  // int32 PriorityLevel = 2;
  if (this->prioritylevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->prioritylevel(), output);
  }

  // int64 SerialNumber = 3;
  if (this->serialnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->serialnumber(), output);
  }

  // string CheckString = 4;
  if (this->checkstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkstring().data(), static_cast<int>(this->checkstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.CheckString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->checkstring(), output);
  }

  // string Sender = 5;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.Sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sender(), output);
  }

  // .Protocol.ResultType Result = 7;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->result(), output);
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // bytes Extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->extend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.DataPackage)
}

::google::protobuf::uint8* DataPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.DataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.Functions Function = 1;
  if (this->function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->function(), target);
  }

  // int32 PriorityLevel = 2;
  if (this->prioritylevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->prioritylevel(), target);
  }

  // int64 SerialNumber = 3;
  if (this->serialnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->serialnumber(), target);
  }

  // string CheckString = 4;
  if (this->checkstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkstring().data(), static_cast<int>(this->checkstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.CheckString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->checkstring(), target);
  }

  // string Sender = 5;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.Sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sender(), target);
  }

  // .Protocol.ResultType Result = 7;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->result(), target);
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.DataPackage.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // bytes Extend = 9;
  if (this->extend().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->extend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.DataPackage)
  return target;
}

size_t DataPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.DataPackage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string CheckString = 4;
  if (this->checkstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checkstring());
  }

  // string Sender = 5;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // string Content = 8;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // bytes Extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extend());
  }

  // .Protocol.Functions Function = 1;
  if (this->function() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->function());
  }

  // int32 PriorityLevel = 2;
  if (this->prioritylevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prioritylevel());
  }

  // int64 SerialNumber = 3;
  if (this->serialnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->serialnumber());
  }

  // .Protocol.ResultType Result = 7;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.DataPackage)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPackage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.DataPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.DataPackage)
    MergeFrom(*source);
  }
}

void DataPackage::MergeFrom(const DataPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.DataPackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checkstring().size() > 0) {

    checkstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkstring_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.function() != 0) {
    set_function(from.function());
  }
  if (from.prioritylevel() != 0) {
    set_prioritylevel(from.prioritylevel());
  }
  if (from.serialnumber() != 0) {
    set_serialnumber(from.serialnumber());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void DataPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.DataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPackage::CopyFrom(const DataPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.DataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPackage::IsInitialized() const {
  return true;
}

void DataPackage::Swap(DataPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataPackage::InternalSwap(DataPackage* other) {
  using std::swap;
  checkstring_.Swap(&other->checkstring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(function_, other->function_);
  swap(prioritylevel_, other->prioritylevel_);
  swap(serialnumber_, other->serialnumber_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataPackage::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GLOBAL_CONFIG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLOBAL_CONFIG::kListenPortFieldNumber;
const int GLOBAL_CONFIG::kEnableSSLFieldNumber;
const int GLOBAL_CONFIG::kCertFilePathFieldNumber;
const int GLOBAL_CONFIG::kKeyFilePathFieldNumber;
const int GLOBAL_CONFIG::kCertPasswdFieldNumber;
const int GLOBAL_CONFIG::kConnectTimeFieldNumber;
const int GLOBAL_CONFIG::kReceiveTimeFieldNumber;
const int GLOBAL_CONFIG::kLogPathFieldNumber;
const int GLOBAL_CONFIG::kLogLevelFieldNumber;
const int GLOBAL_CONFIG::kDebugModeFieldNumber;
const int GLOBAL_CONFIG::kMQThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kEPollThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kProcessThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kPrioritySizeFieldNumber;
const int GLOBAL_CONFIG::kModuleNameFieldNumber;
const int GLOBAL_CONFIG::kModulePathFieldNumber;
const int GLOBAL_CONFIG::kModuleConfigFieldNumber;
const int GLOBAL_CONFIG::kModuleReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLOBAL_CONFIG::GLOBAL_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_GLOBAL_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.GLOBAL_CONFIG)
}
GLOBAL_CONFIG::GLOBAL_CONFIG(const GLOBAL_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certfilepath().size() > 0) {
    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyfilepath().size() > 0) {
    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certpasswd().size() > 0) {
    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logpath().size() > 0) {
    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  modulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulename().size() > 0) {
    modulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulename_);
  }
  modulepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulepath().size() > 0) {
    modulepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulepath_);
  }
  moduleconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.moduleconfig().size() > 0) {
    moduleconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleconfig_);
  }
  modulereference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulereference().size() > 0) {
    modulereference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulereference_);
  }
  ::memcpy(&listenport_, &from.listenport_,
    static_cast<size_t>(reinterpret_cast<char*>(&prioritysize_) -
    reinterpret_cast<char*>(&listenport_)) + sizeof(prioritysize_));
  // @@protoc_insertion_point(copy_constructor:Protocol.GLOBAL_CONFIG)
}

void GLOBAL_CONFIG::SharedCtor() {
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prioritysize_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(prioritysize_));
}

GLOBAL_CONFIG::~GLOBAL_CONFIG() {
  // @@protoc_insertion_point(destructor:Protocol.GLOBAL_CONFIG)
  SharedDtor();
}

void GLOBAL_CONFIG::SharedDtor() {
  certfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GLOBAL_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GLOBAL_CONFIG::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GLOBAL_CONFIG& GLOBAL_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_GLOBAL_CONFIG.base);
  return *internal_default_instance();
}


void GLOBAL_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  certfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prioritysize_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(prioritysize_));
  _internal_metadata_.Clear();
}

bool GLOBAL_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protocol.GLOBAL_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ListenPort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listenport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool EnableSSL = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablessl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertFilePath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.CertFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyFilePath = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.KeyFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertPasswd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.CertPasswd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ConnectTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connecttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ReceiveTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LogPath = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logpath().data(), static_cast<int>(this->logpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.LogPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Protocol.LogLevel LogLevel = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loglevel(static_cast< ::Protocol::LogLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DebugMode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debugmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MQThreadQuantity = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EPollThreadQuantity = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epollthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ProcessThreadQuantity = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PrioritySize = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prioritysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModuleName = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulename().data(), static_cast<int>(this->modulename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.ModuleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModulePath = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulepath().data(), static_cast<int>(this->modulepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.ModulePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ModuleConfig = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_moduleconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModuleReference = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulereference()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulereference().data(), static_cast<int>(this->modulereference().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Protocol.GLOBAL_CONFIG.ModuleReference"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protocol.GLOBAL_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protocol.GLOBAL_CONFIG)
  return false;
#undef DO_
}

void GLOBAL_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protocol.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->listenport(), output);
  }

  // bool EnableSSL = 2;
  if (this->enablessl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enablessl(), output);
  }

  // string CertFilePath = 3;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.CertFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->certfilepath(), output);
  }

  // string KeyFilePath = 4;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.KeyFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyfilepath(), output);
  }

  // string CertPasswd = 5;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.CertPasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->certpasswd(), output);
  }

  // int32 ConnectTime = 6;
  if (this->connecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->connecttime(), output);
  }

  // int32 ReceiveTime = 7;
  if (this->receivetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->receivetime(), output);
  }

  // string LogPath = 8;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.LogPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->logpath(), output);
  }

  // .Protocol.LogLevel LogLevel = 9;
  if (this->loglevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->loglevel(), output);
  }

  // bool DebugMode = 10;
  if (this->debugmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->debugmode(), output);
  }

  // int32 MQThreadQuantity = 11;
  if (this->mqthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mqthreadquantity(), output);
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->epollthreadquantity(), output);
  }

  // int32 ProcessThreadQuantity = 13;
  if (this->processthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->processthreadquantity(), output);
  }

  // int32 PrioritySize = 14;
  if (this->prioritysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->prioritysize(), output);
  }

  // string ModuleName = 16;
  if (this->modulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulename().data(), static_cast<int>(this->modulename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModuleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->modulename(), output);
  }

  // string ModulePath = 17;
  if (this->modulepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulepath().data(), static_cast<int>(this->modulepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModulePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->modulepath(), output);
  }

  // bytes ModuleConfig = 18;
  if (this->moduleconfig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->moduleconfig(), output);
  }

  // string ModuleReference = 19;
  if (this->modulereference().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulereference().data(), static_cast<int>(this->modulereference().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModuleReference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->modulereference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Protocol.GLOBAL_CONFIG)
}

::google::protobuf::uint8* GLOBAL_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->listenport(), target);
  }

  // bool EnableSSL = 2;
  if (this->enablessl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enablessl(), target);
  }

  // string CertFilePath = 3;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.CertFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->certfilepath(), target);
  }

  // string KeyFilePath = 4;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.KeyFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyfilepath(), target);
  }

  // string CertPasswd = 5;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.CertPasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->certpasswd(), target);
  }

  // int32 ConnectTime = 6;
  if (this->connecttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->connecttime(), target);
  }

  // int32 ReceiveTime = 7;
  if (this->receivetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->receivetime(), target);
  }

  // string LogPath = 8;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.LogPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->logpath(), target);
  }

  // .Protocol.LogLevel LogLevel = 9;
  if (this->loglevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->loglevel(), target);
  }

  // bool DebugMode = 10;
  if (this->debugmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->debugmode(), target);
  }

  // int32 MQThreadQuantity = 11;
  if (this->mqthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mqthreadquantity(), target);
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->epollthreadquantity(), target);
  }

  // int32 ProcessThreadQuantity = 13;
  if (this->processthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->processthreadquantity(), target);
  }

  // int32 PrioritySize = 14;
  if (this->prioritysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->prioritysize(), target);
  }

  // string ModuleName = 16;
  if (this->modulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulename().data(), static_cast<int>(this->modulename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModuleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->modulename(), target);
  }

  // string ModulePath = 17;
  if (this->modulepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulepath().data(), static_cast<int>(this->modulepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModulePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->modulepath(), target);
  }

  // bytes ModuleConfig = 18;
  if (this->moduleconfig().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->moduleconfig(), target);
  }

  // string ModuleReference = 19;
  if (this->modulereference().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulereference().data(), static_cast<int>(this->modulereference().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Protocol.GLOBAL_CONFIG.ModuleReference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->modulereference(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.GLOBAL_CONFIG)
  return target;
}

size_t GLOBAL_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.GLOBAL_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string CertFilePath = 3;
  if (this->certfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certfilepath());
  }

  // string KeyFilePath = 4;
  if (this->keyfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyfilepath());
  }

  // string CertPasswd = 5;
  if (this->certpasswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certpasswd());
  }

  // string LogPath = 8;
  if (this->logpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logpath());
  }

  // string ModuleName = 16;
  if (this->modulename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulename());
  }

  // string ModulePath = 17;
  if (this->modulepath().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulepath());
  }

  // bytes ModuleConfig = 18;
  if (this->moduleconfig().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->moduleconfig());
  }

  // string ModuleReference = 19;
  if (this->modulereference().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulereference());
  }

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listenport());
  }

  // int32 ConnectTime = 6;
  if (this->connecttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connecttime());
  }

  // bool EnableSSL = 2;
  if (this->enablessl() != 0) {
    total_size += 1 + 1;
  }

  // bool DebugMode = 10;
  if (this->debugmode() != 0) {
    total_size += 1 + 1;
  }

  // int32 ReceiveTime = 7;
  if (this->receivetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivetime());
  }

  // .Protocol.LogLevel LogLevel = 9;
  if (this->loglevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loglevel());
  }

  // int32 MQThreadQuantity = 11;
  if (this->mqthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqthreadquantity());
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epollthreadquantity());
  }

  // int32 ProcessThreadQuantity = 13;
  if (this->processthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->processthreadquantity());
  }

  // int32 PrioritySize = 14;
  if (this->prioritysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prioritysize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GLOBAL_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const GLOBAL_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GLOBAL_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.GLOBAL_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.GLOBAL_CONFIG)
    MergeFrom(*source);
  }
}

void GLOBAL_CONFIG::MergeFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.certfilepath().size() > 0) {

    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  if (from.keyfilepath().size() > 0) {

    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  if (from.certpasswd().size() > 0) {

    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  if (from.logpath().size() > 0) {

    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  if (from.modulename().size() > 0) {

    modulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulename_);
  }
  if (from.modulepath().size() > 0) {

    modulepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulepath_);
  }
  if (from.moduleconfig().size() > 0) {

    moduleconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleconfig_);
  }
  if (from.modulereference().size() > 0) {

    modulereference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulereference_);
  }
  if (from.listenport() != 0) {
    set_listenport(from.listenport());
  }
  if (from.connecttime() != 0) {
    set_connecttime(from.connecttime());
  }
  if (from.enablessl() != 0) {
    set_enablessl(from.enablessl());
  }
  if (from.debugmode() != 0) {
    set_debugmode(from.debugmode());
  }
  if (from.receivetime() != 0) {
    set_receivetime(from.receivetime());
  }
  if (from.loglevel() != 0) {
    set_loglevel(from.loglevel());
  }
  if (from.mqthreadquantity() != 0) {
    set_mqthreadquantity(from.mqthreadquantity());
  }
  if (from.epollthreadquantity() != 0) {
    set_epollthreadquantity(from.epollthreadquantity());
  }
  if (from.processthreadquantity() != 0) {
    set_processthreadquantity(from.processthreadquantity());
  }
  if (from.prioritysize() != 0) {
    set_prioritysize(from.prioritysize());
  }
}

void GLOBAL_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GLOBAL_CONFIG::CopyFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GLOBAL_CONFIG::IsInitialized() const {
  return true;
}

void GLOBAL_CONFIG::Swap(GLOBAL_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLOBAL_CONFIG::InternalSwap(GLOBAL_CONFIG* other) {
  using std::swap;
  certfilepath_.Swap(&other->certfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  keyfilepath_.Swap(&other->keyfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certpasswd_.Swap(&other->certpasswd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logpath_.Swap(&other->logpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulename_.Swap(&other->modulename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulepath_.Swap(&other->modulepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  moduleconfig_.Swap(&other->moduleconfig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulereference_.Swap(&other->modulereference_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(listenport_, other->listenport_);
  swap(connecttime_, other->connecttime_);
  swap(enablessl_, other->enablessl_);
  swap(debugmode_, other->debugmode_);
  swap(receivetime_, other->receivetime_);
  swap(loglevel_, other->loglevel_);
  swap(mqthreadquantity_, other->mqthreadquantity_);
  swap(epollthreadquantity_, other->epollthreadquantity_);
  swap(processthreadquantity_, other->processthreadquantity_);
  swap(prioritysize_, other->prioritysize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GLOBAL_CONFIG::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Protocol::DataPackage* Arena::CreateMaybeMessage< ::Protocol::DataPackage >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::DataPackage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Protocol::GLOBAL_CONFIG* Arena::CreateMaybeMessage< ::Protocol::GLOBAL_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::GLOBAL_CONFIG >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
