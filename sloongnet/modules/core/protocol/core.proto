syntax = "proto3";
package Protocol;

// Result
enum ResultType{    
    Succeed = 0;
    Error = 1;
    Warning = 2;
    Retry = 3;
    Invalid = 4;
}

// LogLevel
enum LogLevel{
    All = 0;
    Verbos = 1;
    Debug = 2;
    Info = 3;
    Warn = 4;
    Err = 5;
    Assert = 6;
    Fatal = 7;  
}


enum Functions{
    ProcessMessage=0;
    ProcessEvent=1;
    RestartNode=2;
}

enum DATA_ITEM
{
    ServerConfiguation=0;
	ModuleConfiguation=1;
	Logger=2;
	RuntimeData=3;
}

message DataPackage
{
    // 功能
    Functions Function = 1;
    // 优先级
    int32 PriorityLevel = 2;
    // 流水号
    int64 SerialNumber = 3;
    // 校验串
    string CheckString = 4;
    // 发送者的唯一标识符
    string Sender = 5;
    // 结果代码
    ResultType Result = 7;
    // 消息内容
    string Content = 8;
    // 扩展数据
    bytes Extend = 9;
}

message GLOBAL_CONFIG
{
    // Network 
    int32   ListenPort = 1;
    bool    EnableSSL=2;
    string  CertFilePath=3;
    string  KeyFilePath=4;
    string  CertPasswd=5;
    int32   ConnectTime=6;
    int32   ReceiveTime=7;

    // Log 
    string  LogPath = 8;
    LogLevel   LogLevel =9 ;
    bool    DebugMode = 10;

    // Performance
    int32   MQThreadQuantity =11;// Message queue work thread quantity 
    int32   EPollThreadQuantity=12;// EPoll event process thread quantity
    int32   ProcessThreadQuantity=13;// work thread for DataPackage process quantity
    int32   PrioritySize=14;// Priority Size for the list. the priority level cannot bigger than this value.

    // Module
    string  ModuleName = 16;
    string  ModulePath = 17;
    bytes   ModuleConfig = 18;
    string  ModuleReference = 19;
};

message RuntimeDataPackage
{
    string ManagerAddress=1;
	int32 ManagerPort=2;
	int32 TemplateID=3;
    string NodeUUID=4;
	GLOBAL_CONFIG TemplateConfig=5;
}