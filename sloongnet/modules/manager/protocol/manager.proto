syntax = "proto3";
import "core.proto";
package Manager;

enum Events{
   RestartNode=0;
   StopNode=1;
   ReferenceModuleOnline=2;
   ReferenceModuleOffline=3;
}

message EventReferenceModuleOnline{
   string Address=1;
   int32 Port=2;
}

message EventReferenceModuleOffline{
   string Address=1;
   int32 Port=2;
}

message EventPackage{
   Events Event=1;
   bytes EventObject=2;
}

enum Functions{
    /* Flow: All -> All
       Response: Content - result with JSON string. 
    */
    RegisteWorker=0;
    /* Flow: All -> Control
       Response: post log message to control
    */
    PostLog=1;
    /* Flow:  All -> Control
       Response: Content(string) - the uuid for sender.
                 Extend: config data
    */
    RegisteNode=2;

    QueryNode=3;

    AddTemplate=4;
    DeleteTemplate=5;
    SetTemplate =6;
    QueryTemplate=7;
}

message PostLogMessageRequest
{
   enum PostLogType
   {
      Request=0;
      Response=1;
   }
   PostLogType Type=1;// Request or Response
   Core.ResultType Result=2;// Succeed or Error
   string Sender=3;// Message sender
   string Receiver=4;// Message receiver
   string Function=5;
   int32 Time=6;// Current time
   bytes Content =7;// For succeed is message content; For other is message
}

message RegisteWorkerResponse
{
   int32 TemplateID=1;
   bytes Configuation=2;
}

message RegisteNodeRequest{
   int32 TemplateID=1;
}

message AddTemplateRequest{
   TemplateItem AddInfo=1;
}
message DeleteTemplateRequest{
   int32 TemplateID=1;
}
message SetTemplateRequest{
   TemplateItem SetInfo=1;
}
message QueryTemplateRequest{
   // No set for query all
   repeated int32 TemplateID=1;
}

message TemplateItem{
   int32 ID=1;
   string Name=2;
   string Note=3;
   int32 Replicas=4;
   int32 Created=5;
   bytes Configuation=6;
}
message QueryTemplateResponse{
   repeated TemplateItem TemplateInfos=1;
}

message QueryNodeRequest
{
   repeated int32 TemplateID=1;
}

message NodeInfoItem{
   string UUID=1;
   string TemplateName=2;
   int32 TemplateID=3;
   string Address = 4;
   int32 Port=5;
   int32 ActiveTime=6;
}

message QueryNodeResponse
{
   repeated NodeInfoItem NodeInfos=1;
}


