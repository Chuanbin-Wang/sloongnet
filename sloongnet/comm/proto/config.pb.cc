// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/config.proto

#include "proto/config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GLOBAL_CONFIG;
}  // namespace protobuf_proto_2fconfig_2eproto
namespace MessageConfig {
class GLOBAL_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GLOBAL_CONFIG>
      _instance;
} _GLOBAL_CONFIG_default_instance_;
class DB_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DB_CONFIG>
      _instance;
} _DB_CONFIG_default_instance_;
class DATA_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DATA_CONFIG>
      _instance;
} _DATA_CONFIG_default_instance_;
class PROXY_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PROXY_CONFIG>
      _instance;
} _PROXY_CONFIG_default_instance_;
class PROCESS_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PROCESS_CONFIG>
      _instance;
} _PROCESS_CONFIG_default_instance_;
}  // namespace MessageConfig
namespace protobuf_proto_2fconfig_2eproto {
static void InitDefaultsGLOBAL_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageConfig::_GLOBAL_CONFIG_default_instance_;
    new (ptr) ::MessageConfig::GLOBAL_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageConfig::GLOBAL_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GLOBAL_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGLOBAL_CONFIG}, {}};

static void InitDefaultsDB_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageConfig::_DB_CONFIG_default_instance_;
    new (ptr) ::MessageConfig::DB_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageConfig::DB_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DB_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDB_CONFIG}, {
      &protobuf_proto_2fconfig_2eproto::scc_info_GLOBAL_CONFIG.base,}};

static void InitDefaultsDATA_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageConfig::_DATA_CONFIG_default_instance_;
    new (ptr) ::MessageConfig::DATA_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageConfig::DATA_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DATA_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDATA_CONFIG}, {}};

static void InitDefaultsPROXY_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageConfig::_PROXY_CONFIG_default_instance_;
    new (ptr) ::MessageConfig::PROXY_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageConfig::PROXY_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PROXY_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPROXY_CONFIG}, {
      &protobuf_proto_2fconfig_2eproto::scc_info_GLOBAL_CONFIG.base,}};

static void InitDefaultsPROCESS_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageConfig::_PROCESS_CONFIG_default_instance_;
    new (ptr) ::MessageConfig::PROCESS_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageConfig::PROCESS_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PROCESS_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPROCESS_CONFIG}, {
      &protobuf_proto_2fconfig_2eproto::scc_info_GLOBAL_CONFIG.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GLOBAL_CONFIG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DB_CONFIG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DATA_CONFIG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PROXY_CONFIG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PROCESS_CONFIG.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, listenport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, logpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, loglevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, debugmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, mqthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, enablessl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, certfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, keyfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, certpasswd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, connecttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, receivetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::GLOBAL_CONFIG, epollthreadquantity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, serveraddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, passwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, database_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DB_CONFIG, serverconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DATA_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DATA_CONFIG, datareceiveport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::DATA_CONFIG, datarecvtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROXY_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROXY_CONFIG, clientchecktime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROXY_CONFIG, clientcheckkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROXY_CONFIG, timeoutcheckinterval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROXY_CONFIG, serverconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luacontextquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luascriptfolder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luaentryfile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luaentryfunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luaprocessfunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, luasocketclosefunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageConfig::PROCESS_CONFIG, serverconfig_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MessageConfig::GLOBAL_CONFIG)},
  { 17, -1, sizeof(::MessageConfig::DB_CONFIG)},
  { 28, -1, sizeof(::MessageConfig::DATA_CONFIG)},
  { 35, -1, sizeof(::MessageConfig::PROXY_CONFIG)},
  { 44, -1, sizeof(::MessageConfig::PROCESS_CONFIG)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageConfig::_GLOBAL_CONFIG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageConfig::_DB_CONFIG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageConfig::_DATA_CONFIG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageConfig::_PROXY_CONFIG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageConfig::_PROCESS_CONFIG_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022proto/config.proto\022\rMessageConfig\"\214\002\n\r"
      "GLOBAL_CONFIG\022\022\n\nListenPort\030\001 \001(\005\022\017\n\007Log"
      "Path\030\002 \001(\t\022\020\n\010LogLevel\030\003 \001(\005\022\021\n\tDebugMod"
      "e\030\004 \001(\010\022\030\n\020MQThreadQuantity\030\005 \001(\005\022\021\n\tEna"
      "bleSSL\030\006 \001(\010\022\024\n\014CertFilePath\030\007 \001(\t\022\023\n\013Ke"
      "yFilePath\030\010 \001(\t\022\022\n\nCertPasswd\030\t \001(\t\022\023\n\013C"
      "onnectTime\030\n \001(\005\022\023\n\013ReceiveTime\030\013 \001(\005\022\033\n"
      "\023EPollThreadQuantity\030\014 \001(\005\"\232\001\n\tDB_CONFIG"
      "\022\025\n\rServerAddress\030\001 \001(\t\022\022\n\nServerPort\030\002 "
      "\001(\005\022\014\n\004User\030\003 \001(\t\022\016\n\006Passwd\030\004 \001(\t\022\020\n\010Dat"
      "abase\030\005 \001(\t\0222\n\014ServerConfig\030\006 \001(\0132\034.Mess"
      "ageConfig.GLOBAL_CONFIG\"<\n\013DATA_CONFIG\022\027"
      "\n\017DataReceivePort\030\001 \001(\005\022\024\n\014DataRecvTime\030"
      "\002 \001(\005\"\221\001\n\014PROXY_CONFIG\022\027\n\017ClientCheckTim"
      "e\030\001 \001(\005\022\026\n\016ClientCheckKey\030\002 \001(\t\022\034\n\024Timeo"
      "utCheckInterval\030\003 \001(\005\0222\n\014ServerConfig\030\004 "
      "\001(\0132\034.MessageConfig.GLOBAL_CONFIG\"\345\001\n\016PR"
      "OCESS_CONFIG\022\032\n\022LuaContextQuantity\030\001 \001(\t"
      "\022\027\n\017LuaScriptFolder\030\002 \001(\t\022\024\n\014LuaEntryFil"
      "e\030\003 \001(\t\022\030\n\020LuaEntryFunction\030\004 \001(\t\022\032\n\022Lua"
      "ProcessFunction\030\005 \001(\t\022\036\n\026LuaSocketCloseF"
      "unction\030\006 \001(\t\0222\n\014ServerConfig\030\007 \001(\0132\034.Me"
      "ssageConfig.GLOBAL_CONFIGb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 913);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fconfig_2eproto
namespace MessageConfig {

// ===================================================================

void GLOBAL_CONFIG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLOBAL_CONFIG::kListenPortFieldNumber;
const int GLOBAL_CONFIG::kLogPathFieldNumber;
const int GLOBAL_CONFIG::kLogLevelFieldNumber;
const int GLOBAL_CONFIG::kDebugModeFieldNumber;
const int GLOBAL_CONFIG::kMQThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kEnableSSLFieldNumber;
const int GLOBAL_CONFIG::kCertFilePathFieldNumber;
const int GLOBAL_CONFIG::kKeyFilePathFieldNumber;
const int GLOBAL_CONFIG::kCertPasswdFieldNumber;
const int GLOBAL_CONFIG::kConnectTimeFieldNumber;
const int GLOBAL_CONFIG::kReceiveTimeFieldNumber;
const int GLOBAL_CONFIG::kEPollThreadQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLOBAL_CONFIG::GLOBAL_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fconfig_2eproto::scc_info_GLOBAL_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageConfig.GLOBAL_CONFIG)
}
GLOBAL_CONFIG::GLOBAL_CONFIG(const GLOBAL_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logpath().size() > 0) {
    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certfilepath().size() > 0) {
    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyfilepath().size() > 0) {
    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certpasswd().size() > 0) {
    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  ::memcpy(&listenport_, &from.listenport_,
    static_cast<size_t>(reinterpret_cast<char*>(&epollthreadquantity_) -
    reinterpret_cast<char*>(&listenport_)) + sizeof(epollthreadquantity_));
  // @@protoc_insertion_point(copy_constructor:MessageConfig.GLOBAL_CONFIG)
}

void GLOBAL_CONFIG::SharedCtor() {
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epollthreadquantity_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(epollthreadquantity_));
}

GLOBAL_CONFIG::~GLOBAL_CONFIG() {
  // @@protoc_insertion_point(destructor:MessageConfig.GLOBAL_CONFIG)
  SharedDtor();
}

void GLOBAL_CONFIG::SharedDtor() {
  logpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GLOBAL_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GLOBAL_CONFIG::descriptor() {
  ::protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GLOBAL_CONFIG& GLOBAL_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fconfig_2eproto::scc_info_GLOBAL_CONFIG.base);
  return *internal_default_instance();
}


void GLOBAL_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageConfig.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epollthreadquantity_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(epollthreadquantity_));
  _internal_metadata_.Clear();
}

bool GLOBAL_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageConfig.GLOBAL_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ListenPort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listenport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LogPath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logpath().data(), static_cast<int>(this->logpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.GLOBAL_CONFIG.LogPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LogLevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loglevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DebugMode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debugmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MQThreadQuantity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool EnableSSL = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablessl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertFilePath = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.GLOBAL_CONFIG.CertFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyFilePath = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.GLOBAL_CONFIG.KeyFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertPasswd = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.GLOBAL_CONFIG.CertPasswd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ConnectTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connecttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ReceiveTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EPollThreadQuantity = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epollthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageConfig.GLOBAL_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageConfig.GLOBAL_CONFIG)
  return false;
#undef DO_
}

void GLOBAL_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageConfig.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->listenport(), output);
  }

  // string LogPath = 2;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.LogPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->logpath(), output);
  }

  // int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loglevel(), output);
  }

  // bool DebugMode = 4;
  if (this->debugmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->debugmode(), output);
  }

  // int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mqthreadquantity(), output);
  }

  // bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enablessl(), output);
  }

  // string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.CertFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->certfilepath(), output);
  }

  // string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.KeyFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->keyfilepath(), output);
  }

  // string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.CertPasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->certpasswd(), output);
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->connecttime(), output);
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->receivetime(), output);
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->epollthreadquantity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageConfig.GLOBAL_CONFIG)
}

::google::protobuf::uint8* GLOBAL_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageConfig.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->listenport(), target);
  }

  // string LogPath = 2;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.LogPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->logpath(), target);
  }

  // int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loglevel(), target);
  }

  // bool DebugMode = 4;
  if (this->debugmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->debugmode(), target);
  }

  // int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mqthreadquantity(), target);
  }

  // bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enablessl(), target);
  }

  // string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.CertFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->certfilepath(), target);
  }

  // string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.KeyFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->keyfilepath(), target);
  }

  // string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.GLOBAL_CONFIG.CertPasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->certpasswd(), target);
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->connecttime(), target);
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->receivetime(), target);
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->epollthreadquantity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageConfig.GLOBAL_CONFIG)
  return target;
}

size_t GLOBAL_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageConfig.GLOBAL_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string LogPath = 2;
  if (this->logpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logpath());
  }

  // string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certfilepath());
  }

  // string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyfilepath());
  }

  // string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certpasswd());
  }

  // int32 ListenPort = 1;
  if (this->listenport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listenport());
  }

  // int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loglevel());
  }

  // int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqthreadquantity());
  }

  // bool DebugMode = 4;
  if (this->debugmode() != 0) {
    total_size += 1 + 1;
  }

  // bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    total_size += 1 + 1;
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connecttime());
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivetime());
  }

  // int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epollthreadquantity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GLOBAL_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageConfig.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const GLOBAL_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GLOBAL_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageConfig.GLOBAL_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageConfig.GLOBAL_CONFIG)
    MergeFrom(*source);
  }
}

void GLOBAL_CONFIG::MergeFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageConfig.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.logpath().size() > 0) {

    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  if (from.certfilepath().size() > 0) {

    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  if (from.keyfilepath().size() > 0) {

    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  if (from.certpasswd().size() > 0) {

    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  if (from.listenport() != 0) {
    set_listenport(from.listenport());
  }
  if (from.loglevel() != 0) {
    set_loglevel(from.loglevel());
  }
  if (from.mqthreadquantity() != 0) {
    set_mqthreadquantity(from.mqthreadquantity());
  }
  if (from.debugmode() != 0) {
    set_debugmode(from.debugmode());
  }
  if (from.enablessl() != 0) {
    set_enablessl(from.enablessl());
  }
  if (from.connecttime() != 0) {
    set_connecttime(from.connecttime());
  }
  if (from.receivetime() != 0) {
    set_receivetime(from.receivetime());
  }
  if (from.epollthreadquantity() != 0) {
    set_epollthreadquantity(from.epollthreadquantity());
  }
}

void GLOBAL_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageConfig.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GLOBAL_CONFIG::CopyFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageConfig.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GLOBAL_CONFIG::IsInitialized() const {
  return true;
}

void GLOBAL_CONFIG::Swap(GLOBAL_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLOBAL_CONFIG::InternalSwap(GLOBAL_CONFIG* other) {
  using std::swap;
  logpath_.Swap(&other->logpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certfilepath_.Swap(&other->certfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  keyfilepath_.Swap(&other->keyfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certpasswd_.Swap(&other->certpasswd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(listenport_, other->listenport_);
  swap(loglevel_, other->loglevel_);
  swap(mqthreadquantity_, other->mqthreadquantity_);
  swap(debugmode_, other->debugmode_);
  swap(enablessl_, other->enablessl_);
  swap(connecttime_, other->connecttime_);
  swap(receivetime_, other->receivetime_);
  swap(epollthreadquantity_, other->epollthreadquantity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GLOBAL_CONFIG::GetMetadata() const {
  protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DB_CONFIG::InitAsDefaultInstance() {
  ::MessageConfig::_DB_CONFIG_default_instance_._instance.get_mutable()->serverconfig_ = const_cast< ::MessageConfig::GLOBAL_CONFIG*>(
      ::MessageConfig::GLOBAL_CONFIG::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DB_CONFIG::kServerAddressFieldNumber;
const int DB_CONFIG::kServerPortFieldNumber;
const int DB_CONFIG::kUserFieldNumber;
const int DB_CONFIG::kPasswdFieldNumber;
const int DB_CONFIG::kDatabaseFieldNumber;
const int DB_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DB_CONFIG::DB_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fconfig_2eproto::scc_info_DB_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageConfig.DB_CONFIG)
}
DB_CONFIG::DB_CONFIG(const DB_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serveraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serveraddress().size() > 0) {
    serveraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddress_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  database_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.database().size() > 0) {
    database_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.has_serverconfig()) {
    serverconfig_ = new ::MessageConfig::GLOBAL_CONFIG(*from.serverconfig_);
  } else {
    serverconfig_ = NULL;
  }
  serverport_ = from.serverport_;
  // @@protoc_insertion_point(copy_constructor:MessageConfig.DB_CONFIG)
}

void DB_CONFIG::SharedCtor() {
  serveraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverconfig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverport_) -
      reinterpret_cast<char*>(&serverconfig_)) + sizeof(serverport_));
}

DB_CONFIG::~DB_CONFIG() {
  // @@protoc_insertion_point(destructor:MessageConfig.DB_CONFIG)
  SharedDtor();
}

void DB_CONFIG::SharedDtor() {
  serveraddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serverconfig_;
}

void DB_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DB_CONFIG::descriptor() {
  ::protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DB_CONFIG& DB_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fconfig_2eproto::scc_info_DB_CONFIG.base);
  return *internal_default_instance();
}


void DB_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageConfig.DB_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serveraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) {
    delete serverconfig_;
  }
  serverconfig_ = NULL;
  serverport_ = 0;
  _internal_metadata_.Clear();
}

bool DB_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageConfig.DB_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ServerAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddress().data(), static_cast<int>(this->serveraddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.DB_CONFIG.ServerAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string User = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.DB_CONFIG.User"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Passwd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.DB_CONFIG.Passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Database = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database().data(), static_cast<int>(this->database().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.DB_CONFIG.Database"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageConfig.GLOBAL_CONFIG ServerConfig = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageConfig.DB_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageConfig.DB_CONFIG)
  return false;
#undef DO_
}

void DB_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageConfig.DB_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddress().data(), static_cast<int>(this->serveraddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.ServerAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->serveraddress(), output);
  }

  // int32 ServerPort = 2;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverport(), output);
  }

  // string User = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.User");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user(), output);
  }

  // string Passwd = 4;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.Passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->passwd(), output);
  }

  // string Database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), static_cast<int>(this->database().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.Database");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->database(), output);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_serverconfig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageConfig.DB_CONFIG)
}

::google::protobuf::uint8* DB_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageConfig.DB_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddress().data(), static_cast<int>(this->serveraddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.ServerAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->serveraddress(), target);
  }

  // int32 ServerPort = 2;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverport(), target);
  }

  // string User = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.User");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user(), target);
  }

  // string Passwd = 4;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.Passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->passwd(), target);
  }

  // string Database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), static_cast<int>(this->database().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.DB_CONFIG.Database");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->database(), target);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_serverconfig(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageConfig.DB_CONFIG)
  return target;
}

size_t DB_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageConfig.DB_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddress());
  }

  // string User = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string Passwd = 4;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // string Database = 5;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database());
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serverconfig_);
  }

  // int32 ServerPort = 2;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DB_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageConfig.DB_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const DB_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DB_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageConfig.DB_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageConfig.DB_CONFIG)
    MergeFrom(*source);
  }
}

void DB_CONFIG::MergeFrom(const DB_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageConfig.DB_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serveraddress().size() > 0) {

    serveraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddress_);
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::MessageConfig::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
}

void DB_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageConfig.DB_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_CONFIG::CopyFrom(const DB_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageConfig.DB_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_CONFIG::IsInitialized() const {
  return true;
}

void DB_CONFIG::Swap(DB_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DB_CONFIG::InternalSwap(DB_CONFIG* other) {
  using std::swap;
  serveraddress_.Swap(&other->serveraddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passwd_.Swap(&other->passwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  database_.Swap(&other->database_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverconfig_, other->serverconfig_);
  swap(serverport_, other->serverport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DB_CONFIG::GetMetadata() const {
  protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DATA_CONFIG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DATA_CONFIG::kDataReceivePortFieldNumber;
const int DATA_CONFIG::kDataRecvTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DATA_CONFIG::DATA_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fconfig_2eproto::scc_info_DATA_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageConfig.DATA_CONFIG)
}
DATA_CONFIG::DATA_CONFIG(const DATA_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&datareceiveport_, &from.datareceiveport_,
    static_cast<size_t>(reinterpret_cast<char*>(&datarecvtime_) -
    reinterpret_cast<char*>(&datareceiveport_)) + sizeof(datarecvtime_));
  // @@protoc_insertion_point(copy_constructor:MessageConfig.DATA_CONFIG)
}

void DATA_CONFIG::SharedCtor() {
  ::memset(&datareceiveport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datarecvtime_) -
      reinterpret_cast<char*>(&datareceiveport_)) + sizeof(datarecvtime_));
}

DATA_CONFIG::~DATA_CONFIG() {
  // @@protoc_insertion_point(destructor:MessageConfig.DATA_CONFIG)
  SharedDtor();
}

void DATA_CONFIG::SharedDtor() {
}

void DATA_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DATA_CONFIG::descriptor() {
  ::protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DATA_CONFIG& DATA_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fconfig_2eproto::scc_info_DATA_CONFIG.base);
  return *internal_default_instance();
}


void DATA_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageConfig.DATA_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&datareceiveport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datarecvtime_) -
      reinterpret_cast<char*>(&datareceiveport_)) + sizeof(datarecvtime_));
  _internal_metadata_.Clear();
}

bool DATA_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageConfig.DATA_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 DataReceivePort = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datareceiveport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DataRecvTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datarecvtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageConfig.DATA_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageConfig.DATA_CONFIG)
  return false;
#undef DO_
}

void DATA_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageConfig.DATA_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->datareceiveport(), output);
  }

  // int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->datarecvtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageConfig.DATA_CONFIG)
}

::google::protobuf::uint8* DATA_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageConfig.DATA_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->datareceiveport(), target);
  }

  // int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->datarecvtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageConfig.DATA_CONFIG)
  return target;
}

size_t DATA_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageConfig.DATA_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datareceiveport());
  }

  // int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datarecvtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DATA_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageConfig.DATA_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const DATA_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DATA_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageConfig.DATA_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageConfig.DATA_CONFIG)
    MergeFrom(*source);
  }
}

void DATA_CONFIG::MergeFrom(const DATA_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageConfig.DATA_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datareceiveport() != 0) {
    set_datareceiveport(from.datareceiveport());
  }
  if (from.datarecvtime() != 0) {
    set_datarecvtime(from.datarecvtime());
  }
}

void DATA_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageConfig.DATA_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DATA_CONFIG::CopyFrom(const DATA_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageConfig.DATA_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DATA_CONFIG::IsInitialized() const {
  return true;
}

void DATA_CONFIG::Swap(DATA_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DATA_CONFIG::InternalSwap(DATA_CONFIG* other) {
  using std::swap;
  swap(datareceiveport_, other->datareceiveport_);
  swap(datarecvtime_, other->datarecvtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DATA_CONFIG::GetMetadata() const {
  protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PROXY_CONFIG::InitAsDefaultInstance() {
  ::MessageConfig::_PROXY_CONFIG_default_instance_._instance.get_mutable()->serverconfig_ = const_cast< ::MessageConfig::GLOBAL_CONFIG*>(
      ::MessageConfig::GLOBAL_CONFIG::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PROXY_CONFIG::kClientCheckTimeFieldNumber;
const int PROXY_CONFIG::kClientCheckKeyFieldNumber;
const int PROXY_CONFIG::kTimeoutCheckIntervalFieldNumber;
const int PROXY_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PROXY_CONFIG::PROXY_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fconfig_2eproto::scc_info_PROXY_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageConfig.PROXY_CONFIG)
}
PROXY_CONFIG::PROXY_CONFIG(const PROXY_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientcheckkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientcheckkey().size() > 0) {
    clientcheckkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientcheckkey_);
  }
  if (from.has_serverconfig()) {
    serverconfig_ = new ::MessageConfig::GLOBAL_CONFIG(*from.serverconfig_);
  } else {
    serverconfig_ = NULL;
  }
  ::memcpy(&clientchecktime_, &from.clientchecktime_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeoutcheckinterval_) -
    reinterpret_cast<char*>(&clientchecktime_)) + sizeof(timeoutcheckinterval_));
  // @@protoc_insertion_point(copy_constructor:MessageConfig.PROXY_CONFIG)
}

void PROXY_CONFIG::SharedCtor() {
  clientcheckkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverconfig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeoutcheckinterval_) -
      reinterpret_cast<char*>(&serverconfig_)) + sizeof(timeoutcheckinterval_));
}

PROXY_CONFIG::~PROXY_CONFIG() {
  // @@protoc_insertion_point(destructor:MessageConfig.PROXY_CONFIG)
  SharedDtor();
}

void PROXY_CONFIG::SharedDtor() {
  clientcheckkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serverconfig_;
}

void PROXY_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PROXY_CONFIG::descriptor() {
  ::protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PROXY_CONFIG& PROXY_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fconfig_2eproto::scc_info_PROXY_CONFIG.base);
  return *internal_default_instance();
}


void PROXY_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageConfig.PROXY_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientcheckkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) {
    delete serverconfig_;
  }
  serverconfig_ = NULL;
  ::memset(&clientchecktime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeoutcheckinterval_) -
      reinterpret_cast<char*>(&clientchecktime_)) + sizeof(timeoutcheckinterval_));
  _internal_metadata_.Clear();
}

bool PROXY_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageConfig.PROXY_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ClientCheckTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientchecktime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ClientCheckKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientcheckkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientcheckkey().data(), static_cast<int>(this->clientcheckkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROXY_CONFIG.ClientCheckKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TimeoutCheckInterval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeoutcheckinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageConfig.GLOBAL_CONFIG ServerConfig = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageConfig.PROXY_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageConfig.PROXY_CONFIG)
  return false;
#undef DO_
}

void PROXY_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageConfig.PROXY_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientchecktime(), output);
  }

  // string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientcheckkey().data(), static_cast<int>(this->clientcheckkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROXY_CONFIG.ClientCheckKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientcheckkey(), output);
  }

  // int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeoutcheckinterval(), output);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 4;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_serverconfig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageConfig.PROXY_CONFIG)
}

::google::protobuf::uint8* PROXY_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageConfig.PROXY_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientchecktime(), target);
  }

  // string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientcheckkey().data(), static_cast<int>(this->clientcheckkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROXY_CONFIG.ClientCheckKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientcheckkey(), target);
  }

  // int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeoutcheckinterval(), target);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 4;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_serverconfig(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageConfig.PROXY_CONFIG)
  return target;
}

size_t PROXY_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageConfig.PROXY_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientcheckkey());
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 4;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serverconfig_);
  }

  // int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientchecktime());
  }

  // int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeoutcheckinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROXY_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageConfig.PROXY_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const PROXY_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PROXY_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageConfig.PROXY_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageConfig.PROXY_CONFIG)
    MergeFrom(*source);
  }
}

void PROXY_CONFIG::MergeFrom(const PROXY_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageConfig.PROXY_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientcheckkey().size() > 0) {

    clientcheckkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientcheckkey_);
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::MessageConfig::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
  if (from.clientchecktime() != 0) {
    set_clientchecktime(from.clientchecktime());
  }
  if (from.timeoutcheckinterval() != 0) {
    set_timeoutcheckinterval(from.timeoutcheckinterval());
  }
}

void PROXY_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageConfig.PROXY_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROXY_CONFIG::CopyFrom(const PROXY_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageConfig.PROXY_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROXY_CONFIG::IsInitialized() const {
  return true;
}

void PROXY_CONFIG::Swap(PROXY_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PROXY_CONFIG::InternalSwap(PROXY_CONFIG* other) {
  using std::swap;
  clientcheckkey_.Swap(&other->clientcheckkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverconfig_, other->serverconfig_);
  swap(clientchecktime_, other->clientchecktime_);
  swap(timeoutcheckinterval_, other->timeoutcheckinterval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PROXY_CONFIG::GetMetadata() const {
  protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PROCESS_CONFIG::InitAsDefaultInstance() {
  ::MessageConfig::_PROCESS_CONFIG_default_instance_._instance.get_mutable()->serverconfig_ = const_cast< ::MessageConfig::GLOBAL_CONFIG*>(
      ::MessageConfig::GLOBAL_CONFIG::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PROCESS_CONFIG::kLuaContextQuantityFieldNumber;
const int PROCESS_CONFIG::kLuaScriptFolderFieldNumber;
const int PROCESS_CONFIG::kLuaEntryFileFieldNumber;
const int PROCESS_CONFIG::kLuaEntryFunctionFieldNumber;
const int PROCESS_CONFIG::kLuaProcessFunctionFieldNumber;
const int PROCESS_CONFIG::kLuaSocketCloseFunctionFieldNumber;
const int PROCESS_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PROCESS_CONFIG::PROCESS_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fconfig_2eproto::scc_info_PROCESS_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageConfig.PROCESS_CONFIG)
}
PROCESS_CONFIG::PROCESS_CONFIG(const PROCESS_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  luacontextquantity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luacontextquantity().size() > 0) {
    luacontextquantity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luacontextquantity_);
  }
  luascriptfolder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luascriptfolder().size() > 0) {
    luascriptfolder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luascriptfolder_);
  }
  luaentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luaentryfile().size() > 0) {
    luaentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfile_);
  }
  luaentryfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luaentryfunction().size() > 0) {
    luaentryfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfunction_);
  }
  luaprocessfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luaprocessfunction().size() > 0) {
    luaprocessfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaprocessfunction_);
  }
  luasocketclosefunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luasocketclosefunction().size() > 0) {
    luasocketclosefunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luasocketclosefunction_);
  }
  if (from.has_serverconfig()) {
    serverconfig_ = new ::MessageConfig::GLOBAL_CONFIG(*from.serverconfig_);
  } else {
    serverconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MessageConfig.PROCESS_CONFIG)
}

void PROCESS_CONFIG::SharedCtor() {
  luacontextquantity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverconfig_ = NULL;
}

PROCESS_CONFIG::~PROCESS_CONFIG() {
  // @@protoc_insertion_point(destructor:MessageConfig.PROCESS_CONFIG)
  SharedDtor();
}

void PROCESS_CONFIG::SharedDtor() {
  luacontextquantity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serverconfig_;
}

void PROCESS_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PROCESS_CONFIG::descriptor() {
  ::protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PROCESS_CONFIG& PROCESS_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fconfig_2eproto::scc_info_PROCESS_CONFIG.base);
  return *internal_default_instance();
}


void PROCESS_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageConfig.PROCESS_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  luacontextquantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) {
    delete serverconfig_;
  }
  serverconfig_ = NULL;
  _internal_metadata_.Clear();
}

bool PROCESS_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageConfig.PROCESS_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string LuaContextQuantity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luacontextquantity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luacontextquantity().data(), static_cast<int>(this->luacontextquantity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaContextQuantity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LuaScriptFolder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luascriptfolder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luascriptfolder().data(), static_cast<int>(this->luascriptfolder().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaScriptFolder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LuaEntryFile = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaentryfile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaentryfile().data(), static_cast<int>(this->luaentryfile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaEntryFile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LuaEntryFunction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaentryfunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaentryfunction().data(), static_cast<int>(this->luaentryfunction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaEntryFunction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LuaProcessFunction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaprocessfunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaprocessfunction().data(), static_cast<int>(this->luaprocessfunction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaProcessFunction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LuaSocketCloseFunction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luasocketclosefunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luasocketclosefunction().data(), static_cast<int>(this->luasocketclosefunction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageConfig.PROCESS_CONFIG.LuaSocketCloseFunction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageConfig.GLOBAL_CONFIG ServerConfig = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageConfig.PROCESS_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageConfig.PROCESS_CONFIG)
  return false;
#undef DO_
}

void PROCESS_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageConfig.PROCESS_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luacontextquantity().data(), static_cast<int>(this->luacontextquantity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaContextQuantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->luacontextquantity(), output);
  }

  // string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luascriptfolder().data(), static_cast<int>(this->luascriptfolder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaScriptFolder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->luascriptfolder(), output);
  }

  // string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfile().data(), static_cast<int>(this->luaentryfile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaEntryFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->luaentryfile(), output);
  }

  // string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfunction().data(), static_cast<int>(this->luaentryfunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaEntryFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->luaentryfunction(), output);
  }

  // string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaprocessfunction().data(), static_cast<int>(this->luaprocessfunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaProcessFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->luaprocessfunction(), output);
  }

  // string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luasocketclosefunction().data(), static_cast<int>(this->luasocketclosefunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaSocketCloseFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->luasocketclosefunction(), output);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_serverconfig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageConfig.PROCESS_CONFIG)
}

::google::protobuf::uint8* PROCESS_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageConfig.PROCESS_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luacontextquantity().data(), static_cast<int>(this->luacontextquantity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaContextQuantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->luacontextquantity(), target);
  }

  // string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luascriptfolder().data(), static_cast<int>(this->luascriptfolder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaScriptFolder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->luascriptfolder(), target);
  }

  // string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfile().data(), static_cast<int>(this->luaentryfile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaEntryFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->luaentryfile(), target);
  }

  // string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfunction().data(), static_cast<int>(this->luaentryfunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaEntryFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->luaentryfunction(), target);
  }

  // string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaprocessfunction().data(), static_cast<int>(this->luaprocessfunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaProcessFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->luaprocessfunction(), target);
  }

  // string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luasocketclosefunction().data(), static_cast<int>(this->luasocketclosefunction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageConfig.PROCESS_CONFIG.LuaSocketCloseFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->luasocketclosefunction(), target);
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_serverconfig(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageConfig.PROCESS_CONFIG)
  return target;
}

size_t PROCESS_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageConfig.PROCESS_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luacontextquantity());
  }

  // string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luascriptfolder());
  }

  // string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaentryfile());
  }

  // string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaentryfunction());
  }

  // string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaprocessfunction());
  }

  // string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luasocketclosefunction());
  }

  // .MessageConfig.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serverconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROCESS_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageConfig.PROCESS_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const PROCESS_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PROCESS_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageConfig.PROCESS_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageConfig.PROCESS_CONFIG)
    MergeFrom(*source);
  }
}

void PROCESS_CONFIG::MergeFrom(const PROCESS_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageConfig.PROCESS_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.luacontextquantity().size() > 0) {

    luacontextquantity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luacontextquantity_);
  }
  if (from.luascriptfolder().size() > 0) {

    luascriptfolder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luascriptfolder_);
  }
  if (from.luaentryfile().size() > 0) {

    luaentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfile_);
  }
  if (from.luaentryfunction().size() > 0) {

    luaentryfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfunction_);
  }
  if (from.luaprocessfunction().size() > 0) {

    luaprocessfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaprocessfunction_);
  }
  if (from.luasocketclosefunction().size() > 0) {

    luasocketclosefunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luasocketclosefunction_);
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::MessageConfig::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
}

void PROCESS_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageConfig.PROCESS_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROCESS_CONFIG::CopyFrom(const PROCESS_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageConfig.PROCESS_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROCESS_CONFIG::IsInitialized() const {
  return true;
}

void PROCESS_CONFIG::Swap(PROCESS_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PROCESS_CONFIG::InternalSwap(PROCESS_CONFIG* other) {
  using std::swap;
  luacontextquantity_.Swap(&other->luacontextquantity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luascriptfolder_.Swap(&other->luascriptfolder_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luaentryfile_.Swap(&other->luaentryfile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luaentryfunction_.Swap(&other->luaentryfunction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luaprocessfunction_.Swap(&other->luaprocessfunction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luasocketclosefunction_.Swap(&other->luasocketclosefunction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverconfig_, other->serverconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PROCESS_CONFIG::GetMetadata() const {
  protobuf_proto_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MessageConfig
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageConfig::GLOBAL_CONFIG* Arena::CreateMaybeMessage< ::MessageConfig::GLOBAL_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::MessageConfig::GLOBAL_CONFIG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageConfig::DB_CONFIG* Arena::CreateMaybeMessage< ::MessageConfig::DB_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::MessageConfig::DB_CONFIG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageConfig::DATA_CONFIG* Arena::CreateMaybeMessage< ::MessageConfig::DATA_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::MessageConfig::DATA_CONFIG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageConfig::PROXY_CONFIG* Arena::CreateMaybeMessage< ::MessageConfig::PROXY_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::MessageConfig::PROXY_CONFIG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageConfig::PROCESS_CONFIG* Arena::CreateMaybeMessage< ::MessageConfig::PROCESS_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::MessageConfig::PROCESS_CONFIG >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
