// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtobufMessage {

namespace {

const ::google::protobuf::Descriptor* MessagePackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessagePackage_reflection_ = NULL;
const ::google::protobuf::Descriptor* GLOBAL_CONFIG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GLOBAL_CONFIG_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_CONFIG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_CONFIG_reflection_ = NULL;
const ::google::protobuf::Descriptor* DATA_CONFIG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DATA_CONFIG_reflection_ = NULL;
const ::google::protobuf::Descriptor* PROXY_CONFIG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PROXY_CONFIG_reflection_ = NULL;
const ::google::protobuf::Descriptor* PROCESS_CONFIG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PROCESS_CONFIG_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_config_2eproto() {
  protobuf_AddDesc_config_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config.proto");
  GOOGLE_CHECK(file != NULL);
  MessagePackage_descriptor_ = file->message_type(0);
  static const int MessagePackage_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, serailnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, checkstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, extenddata_),
  };
  MessagePackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessagePackage_descriptor_,
      MessagePackage::default_instance_,
      MessagePackage_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessagePackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePackage, _is_default_instance_));
  GLOBAL_CONFIG_descriptor_ = file->message_type(1);
  static const int GLOBAL_CONFIG_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, listenport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, logpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, loglevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, debugmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, mqthreadquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, enablessl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, certfilepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, keyfilepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, certpasswd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, connecttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, receivetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, epollthreadquantity_),
  };
  GLOBAL_CONFIG_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GLOBAL_CONFIG_descriptor_,
      GLOBAL_CONFIG::default_instance_,
      GLOBAL_CONFIG_offsets_,
      -1,
      -1,
      -1,
      sizeof(GLOBAL_CONFIG),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLOBAL_CONFIG, _is_default_instance_));
  DB_CONFIG_descriptor_ = file->message_type(2);
  static const int DB_CONFIG_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, serveraddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, database_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, serverconfig_),
  };
  DB_CONFIG_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DB_CONFIG_descriptor_,
      DB_CONFIG::default_instance_,
      DB_CONFIG_offsets_,
      -1,
      -1,
      -1,
      sizeof(DB_CONFIG),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_CONFIG, _is_default_instance_));
  DATA_CONFIG_descriptor_ = file->message_type(3);
  static const int DATA_CONFIG_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DATA_CONFIG, datareceiveport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DATA_CONFIG, datarecvtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DATA_CONFIG, serverconfig_),
  };
  DATA_CONFIG_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DATA_CONFIG_descriptor_,
      DATA_CONFIG::default_instance_,
      DATA_CONFIG_offsets_,
      -1,
      -1,
      -1,
      sizeof(DATA_CONFIG),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DATA_CONFIG, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DATA_CONFIG, _is_default_instance_));
  PROXY_CONFIG_descriptor_ = file->message_type(4);
  static const int PROXY_CONFIG_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, clientchecktime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, clientcheckkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, timeoutcheckinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, timeouttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, serverconfig_),
  };
  PROXY_CONFIG_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PROXY_CONFIG_descriptor_,
      PROXY_CONFIG::default_instance_,
      PROXY_CONFIG_offsets_,
      -1,
      -1,
      -1,
      sizeof(PROXY_CONFIG),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROXY_CONFIG, _is_default_instance_));
  PROCESS_CONFIG_descriptor_ = file->message_type(5);
  static const int PROCESS_CONFIG_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luacontextquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luascriptfolder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luaentryfile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luaentryfunction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luaprocessfunction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, luasocketclosefunction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, serverconfig_),
  };
  PROCESS_CONFIG_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PROCESS_CONFIG_descriptor_,
      PROCESS_CONFIG::default_instance_,
      PROCESS_CONFIG_offsets_,
      -1,
      -1,
      -1,
      sizeof(PROCESS_CONFIG),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PROCESS_CONFIG, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessagePackage_descriptor_, &MessagePackage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GLOBAL_CONFIG_descriptor_, &GLOBAL_CONFIG::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DB_CONFIG_descriptor_, &DB_CONFIG::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DATA_CONFIG_descriptor_, &DATA_CONFIG::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PROXY_CONFIG_descriptor_, &PROXY_CONFIG::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PROCESS_CONFIG_descriptor_, &PROCESS_CONFIG::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2eproto() {
  delete MessagePackage::default_instance_;
  delete MessagePackage_reflection_;
  delete GLOBAL_CONFIG::default_instance_;
  delete GLOBAL_CONFIG_reflection_;
  delete DB_CONFIG::default_instance_;
  delete DB_CONFIG_reflection_;
  delete DATA_CONFIG::default_instance_;
  delete DATA_CONFIG_reflection_;
  delete PROXY_CONFIG::default_instance_;
  delete PROXY_CONFIG_reflection_;
  delete PROCESS_CONFIG::default_instance_;
  delete PROCESS_CONFIG_reflection_;
}

void protobuf_AddDesc_config_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_config_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014config.proto\022\017ProtobufMessage\"\224\001\n\016Mess"
    "agePackage\022\020\n\010Function\030\001 \001(\005\022\024\n\014SerailNu"
    "mber\030\002 \001(\005\022\023\n\013CheckString\030\003 \001(\t\022\016\n\006Sende"
    "r\030\004 \001(\005\022\020\n\010Receiver\030\005 \001(\005\022\017\n\007Context\030\006 \001"
    "(\t\022\022\n\nExtendData\030\007 \001(\014\"\214\002\n\rGLOBAL_CONFIG"
    "\022\022\n\nListenPort\030\001 \001(\005\022\017\n\007LogPath\030\002 \001(\t\022\020\n"
    "\010LogLevel\030\003 \001(\005\022\021\n\tDebugMode\030\004 \001(\010\022\030\n\020MQ"
    "ThreadQuantity\030\005 \001(\005\022\021\n\tEnableSSL\030\006 \001(\010\022"
    "\024\n\014CertFilePath\030\007 \001(\t\022\023\n\013KeyFilePath\030\010 \001"
    "(\t\022\022\n\nCertPasswd\030\t \001(\t\022\023\n\013ConnectTime\030\n "
    "\001(\005\022\023\n\013ReceiveTime\030\013 \001(\005\022\033\n\023EPollThreadQ"
    "uantity\030\014 \001(\005\"\234\001\n\tDB_CONFIG\022\025\n\rServerAdd"
    "ress\030\001 \001(\t\022\022\n\nServerPort\030\002 \001(\005\022\014\n\004User\030\003"
    " \001(\t\022\016\n\006Passwd\030\004 \001(\t\022\020\n\010Database\030\005 \001(\t\0224"
    "\n\014ServerConfig\030\006 \001(\0132\036.ProtobufMessage.G"
    "LOBAL_CONFIG\"r\n\013DATA_CONFIG\022\027\n\017DataRecei"
    "vePort\030\001 \001(\005\022\024\n\014DataRecvTime\030\002 \001(\005\0224\n\014Se"
    "rverConfig\030\003 \001(\0132\036.ProtobufMessage.GLOBA"
    "L_CONFIG\"\250\001\n\014PROXY_CONFIG\022\027\n\017ClientCheck"
    "Time\030\001 \001(\005\022\026\n\016ClientCheckKey\030\002 \001(\t\022\034\n\024Ti"
    "meoutCheckInterval\030\003 \001(\005\022\023\n\013TimeoutTime\030"
    "\004 \001(\005\0224\n\014ServerConfig\030\005 \001(\0132\036.ProtobufMe"
    "ssage.GLOBAL_CONFIG\"\347\001\n\016PROCESS_CONFIG\022\032"
    "\n\022LuaContextQuantity\030\001 \001(\t\022\027\n\017LuaScriptF"
    "older\030\002 \001(\t\022\024\n\014LuaEntryFile\030\003 \001(\t\022\030\n\020Lua"
    "EntryFunction\030\004 \001(\t\022\032\n\022LuaProcessFunctio"
    "n\030\005 \001(\t\022\036\n\026LuaSocketCloseFunction\030\006 \001(\t\022"
    "4\n\014ServerConfig\030\007 \001(\0132\036.ProtobufMessage."
    "GLOBAL_CONFIGb\006proto3", 1141);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config.proto", &protobuf_RegisterTypes);
  MessagePackage::default_instance_ = new MessagePackage();
  GLOBAL_CONFIG::default_instance_ = new GLOBAL_CONFIG();
  DB_CONFIG::default_instance_ = new DB_CONFIG();
  DATA_CONFIG::default_instance_ = new DATA_CONFIG();
  PROXY_CONFIG::default_instance_ = new PROXY_CONFIG();
  PROCESS_CONFIG::default_instance_ = new PROCESS_CONFIG();
  MessagePackage::default_instance_->InitAsDefaultInstance();
  GLOBAL_CONFIG::default_instance_->InitAsDefaultInstance();
  DB_CONFIG::default_instance_->InitAsDefaultInstance();
  DATA_CONFIG::default_instance_->InitAsDefaultInstance();
  PROXY_CONFIG::default_instance_->InitAsDefaultInstance();
  PROCESS_CONFIG::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2eproto {
  StaticDescriptorInitializer_config_2eproto() {
    protobuf_AddDesc_config_2eproto();
  }
} static_descriptor_initializer_config_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePackage::kFunctionFieldNumber;
const int MessagePackage::kSerailNumberFieldNumber;
const int MessagePackage::kCheckStringFieldNumber;
const int MessagePackage::kSenderFieldNumber;
const int MessagePackage::kReceiverFieldNumber;
const int MessagePackage::kContextFieldNumber;
const int MessagePackage::kExtendDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePackage::MessagePackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.MessagePackage)
}

void MessagePackage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessagePackage::MessagePackage(const MessagePackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.MessagePackage)
}

void MessagePackage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  function_ = 0;
  serailnumber_ = 0;
  checkstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_ = 0;
  receiver_ = 0;
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extenddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessagePackage::~MessagePackage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.MessagePackage)
  SharedDtor();
}

void MessagePackage::SharedDtor() {
  checkstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extenddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessagePackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessagePackage_descriptor_;
}

const MessagePackage& MessagePackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

MessagePackage* MessagePackage::default_instance_ = NULL;

MessagePackage* MessagePackage::New(::google::protobuf::Arena* arena) const {
  MessagePackage* n = new MessagePackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagePackage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.MessagePackage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessagePackage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessagePackage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(function_, serailnumber_);
  ZR_(sender_, receiver_);
  checkstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extenddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MessagePackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.MessagePackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Function = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &function_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SerailNumber;
        break;
      }

      // optional int32 SerailNumber = 2;
      case 2: {
        if (tag == 16) {
         parse_SerailNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serailnumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CheckString;
        break;
      }

      // optional string CheckString = 3;
      case 3: {
        if (tag == 26) {
         parse_CheckString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checkstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checkstring().data(), this->checkstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.MessagePackage.CheckString"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Sender;
        break;
      }

      // optional int32 Sender = 4;
      case 4: {
        if (tag == 32) {
         parse_Sender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Receiver;
        break;
      }

      // optional int32 Receiver = 5;
      case 5: {
        if (tag == 40) {
         parse_Receiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receiver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Context;
        break;
      }

      // optional string Context = 6;
      case 6: {
        if (tag == 50) {
         parse_Context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.MessagePackage.Context"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ExtendData;
        break;
      }

      // optional bytes ExtendData = 7;
      case 7: {
        if (tag == 58) {
         parse_ExtendData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extenddata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.MessagePackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.MessagePackage)
  return false;
#undef DO_
}

void MessagePackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.MessagePackage)
  // optional int32 Function = 1;
  if (this->function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->function(), output);
  }

  // optional int32 SerailNumber = 2;
  if (this->serailnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serailnumber(), output);
  }

  // optional string CheckString = 3;
  if (this->checkstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkstring().data(), this->checkstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.MessagePackage.CheckString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->checkstring(), output);
  }

  // optional int32 Sender = 4;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sender(), output);
  }

  // optional int32 Receiver = 5;
  if (this->receiver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->receiver(), output);
  }

  // optional string Context = 6;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.MessagePackage.Context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->context(), output);
  }

  // optional bytes ExtendData = 7;
  if (this->extenddata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->extenddata(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.MessagePackage)
}

::google::protobuf::uint8* MessagePackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.MessagePackage)
  // optional int32 Function = 1;
  if (this->function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->function(), target);
  }

  // optional int32 SerailNumber = 2;
  if (this->serailnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serailnumber(), target);
  }

  // optional string CheckString = 3;
  if (this->checkstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkstring().data(), this->checkstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.MessagePackage.CheckString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->checkstring(), target);
  }

  // optional int32 Sender = 4;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sender(), target);
  }

  // optional int32 Receiver = 5;
  if (this->receiver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->receiver(), target);
  }

  // optional string Context = 6;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.MessagePackage.Context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->context(), target);
  }

  // optional bytes ExtendData = 7;
  if (this->extenddata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->extenddata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.MessagePackage)
  return target;
}

int MessagePackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.MessagePackage)
  int total_size = 0;

  // optional int32 Function = 1;
  if (this->function() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->function());
  }

  // optional int32 SerailNumber = 2;
  if (this->serailnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serailnumber());
  }

  // optional string CheckString = 3;
  if (this->checkstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checkstring());
  }

  // optional int32 Sender = 4;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sender());
  }

  // optional int32 Receiver = 5;
  if (this->receiver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receiver());
  }

  // optional string Context = 6;
  if (this->context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context());
  }

  // optional bytes ExtendData = 7;
  if (this->extenddata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extenddata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.MessagePackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessagePackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.MessagePackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.MessagePackage)
    MergeFrom(*source);
  }
}

void MessagePackage::MergeFrom(const MessagePackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.MessagePackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.function() != 0) {
    set_function(from.function());
  }
  if (from.serailnumber() != 0) {
    set_serailnumber(from.serailnumber());
  }
  if (from.checkstring().size() > 0) {

    checkstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkstring_);
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.receiver() != 0) {
    set_receiver(from.receiver());
  }
  if (from.context().size() > 0) {

    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.extenddata().size() > 0) {

    extenddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extenddata_);
  }
}

void MessagePackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.MessagePackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePackage::CopyFrom(const MessagePackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.MessagePackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePackage::IsInitialized() const {

  return true;
}

void MessagePackage::Swap(MessagePackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePackage::InternalSwap(MessagePackage* other) {
  std::swap(function_, other->function_);
  std::swap(serailnumber_, other->serailnumber_);
  checkstring_.Swap(&other->checkstring_);
  std::swap(sender_, other->sender_);
  std::swap(receiver_, other->receiver_);
  context_.Swap(&other->context_);
  extenddata_.Swap(&other->extenddata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessagePackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessagePackage_descriptor_;
  metadata.reflection = MessagePackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessagePackage

// optional int32 Function = 1;
void MessagePackage::clear_function() {
  function_ = 0;
}
 ::google::protobuf::int32 MessagePackage::function() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.Function)
  return function_;
}
 void MessagePackage::set_function(::google::protobuf::int32 value) {
  
  function_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.Function)
}

// optional int32 SerailNumber = 2;
void MessagePackage::clear_serailnumber() {
  serailnumber_ = 0;
}
 ::google::protobuf::int32 MessagePackage::serailnumber() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.SerailNumber)
  return serailnumber_;
}
 void MessagePackage::set_serailnumber(::google::protobuf::int32 value) {
  
  serailnumber_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.SerailNumber)
}

// optional string CheckString = 3;
void MessagePackage::clear_checkstring() {
  checkstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessagePackage::checkstring() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.CheckString)
  return checkstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_checkstring(const ::std::string& value) {
  
  checkstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.CheckString)
}
 void MessagePackage::set_checkstring(const char* value) {
  
  checkstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.MessagePackage.CheckString)
}
 void MessagePackage::set_checkstring(const char* value, size_t size) {
  
  checkstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.MessagePackage.CheckString)
}
 ::std::string* MessagePackage::mutable_checkstring() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.MessagePackage.CheckString)
  return checkstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessagePackage::release_checkstring() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.MessagePackage.CheckString)
  
  return checkstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_allocated_checkstring(::std::string* checkstring) {
  if (checkstring != NULL) {
    
  } else {
    
  }
  checkstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checkstring);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.MessagePackage.CheckString)
}

// optional int32 Sender = 4;
void MessagePackage::clear_sender() {
  sender_ = 0;
}
 ::google::protobuf::int32 MessagePackage::sender() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.Sender)
  return sender_;
}
 void MessagePackage::set_sender(::google::protobuf::int32 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.Sender)
}

// optional int32 Receiver = 5;
void MessagePackage::clear_receiver() {
  receiver_ = 0;
}
 ::google::protobuf::int32 MessagePackage::receiver() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.Receiver)
  return receiver_;
}
 void MessagePackage::set_receiver(::google::protobuf::int32 value) {
  
  receiver_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.Receiver)
}

// optional string Context = 6;
void MessagePackage::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessagePackage::context() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.Context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_context(const ::std::string& value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.Context)
}
 void MessagePackage::set_context(const char* value) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.MessagePackage.Context)
}
 void MessagePackage::set_context(const char* value, size_t size) {
  
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.MessagePackage.Context)
}
 ::std::string* MessagePackage::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.MessagePackage.Context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessagePackage::release_context() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.MessagePackage.Context)
  
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.MessagePackage.Context)
}

// optional bytes ExtendData = 7;
void MessagePackage::clear_extenddata() {
  extenddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessagePackage::extenddata() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.MessagePackage.ExtendData)
  return extenddata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_extenddata(const ::std::string& value) {
  
  extenddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.MessagePackage.ExtendData)
}
 void MessagePackage::set_extenddata(const char* value) {
  
  extenddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.MessagePackage.ExtendData)
}
 void MessagePackage::set_extenddata(const void* value, size_t size) {
  
  extenddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.MessagePackage.ExtendData)
}
 ::std::string* MessagePackage::mutable_extenddata() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.MessagePackage.ExtendData)
  return extenddata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessagePackage::release_extenddata() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.MessagePackage.ExtendData)
  
  return extenddata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessagePackage::set_allocated_extenddata(::std::string* extenddata) {
  if (extenddata != NULL) {
    
  } else {
    
  }
  extenddata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extenddata);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.MessagePackage.ExtendData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLOBAL_CONFIG::kListenPortFieldNumber;
const int GLOBAL_CONFIG::kLogPathFieldNumber;
const int GLOBAL_CONFIG::kLogLevelFieldNumber;
const int GLOBAL_CONFIG::kDebugModeFieldNumber;
const int GLOBAL_CONFIG::kMQThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kEnableSSLFieldNumber;
const int GLOBAL_CONFIG::kCertFilePathFieldNumber;
const int GLOBAL_CONFIG::kKeyFilePathFieldNumber;
const int GLOBAL_CONFIG::kCertPasswdFieldNumber;
const int GLOBAL_CONFIG::kConnectTimeFieldNumber;
const int GLOBAL_CONFIG::kReceiveTimeFieldNumber;
const int GLOBAL_CONFIG::kEPollThreadQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLOBAL_CONFIG::GLOBAL_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.GLOBAL_CONFIG)
}

void GLOBAL_CONFIG::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GLOBAL_CONFIG::GLOBAL_CONFIG(const GLOBAL_CONFIG& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.GLOBAL_CONFIG)
}

void GLOBAL_CONFIG::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  listenport_ = 0;
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loglevel_ = 0;
  debugmode_ = false;
  mqthreadquantity_ = 0;
  enablessl_ = false;
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connecttime_ = 0;
  receivetime_ = 0;
  epollthreadquantity_ = 0;
}

GLOBAL_CONFIG::~GLOBAL_CONFIG() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.GLOBAL_CONFIG)
  SharedDtor();
}

void GLOBAL_CONFIG::SharedDtor() {
  logpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GLOBAL_CONFIG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GLOBAL_CONFIG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GLOBAL_CONFIG_descriptor_;
}

const GLOBAL_CONFIG& GLOBAL_CONFIG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

GLOBAL_CONFIG* GLOBAL_CONFIG::default_instance_ = NULL;

GLOBAL_CONFIG* GLOBAL_CONFIG::New(::google::protobuf::Arena* arena) const {
  GLOBAL_CONFIG* n = new GLOBAL_CONFIG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GLOBAL_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.GLOBAL_CONFIG)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GLOBAL_CONFIG, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GLOBAL_CONFIG*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(listenport_, enablessl_);
  logpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(connecttime_, epollthreadquantity_);
  certpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GLOBAL_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.GLOBAL_CONFIG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ListenPort = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listenport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LogPath;
        break;
      }

      // optional string LogPath = 2;
      case 2: {
        if (tag == 18) {
         parse_LogPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logpath().data(), this->logpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.GLOBAL_CONFIG.LogPath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LogLevel;
        break;
      }

      // optional int32 LogLevel = 3;
      case 3: {
        if (tag == 24) {
         parse_LogLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loglevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DebugMode;
        break;
      }

      // optional bool DebugMode = 4;
      case 4: {
        if (tag == 32) {
         parse_DebugMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debugmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MQThreadQuantity;
        break;
      }

      // optional int32 MQThreadQuantity = 5;
      case 5: {
        if (tag == 40) {
         parse_MQThreadQuantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqthreadquantity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_EnableSSL;
        break;
      }

      // optional bool EnableSSL = 6;
      case 6: {
        if (tag == 48) {
         parse_EnableSSL:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablessl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_CertFilePath;
        break;
      }

      // optional string CertFilePath = 7;
      case 7: {
        if (tag == 58) {
         parse_CertFilePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certfilepath().data(), this->certfilepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.GLOBAL_CONFIG.CertFilePath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_KeyFilePath;
        break;
      }

      // optional string KeyFilePath = 8;
      case 8: {
        if (tag == 66) {
         parse_KeyFilePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyfilepath().data(), this->keyfilepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.GLOBAL_CONFIG.KeyFilePath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CertPasswd;
        break;
      }

      // optional string CertPasswd = 9;
      case 9: {
        if (tag == 74) {
         parse_CertPasswd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certpasswd().data(), this->certpasswd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.GLOBAL_CONFIG.CertPasswd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_ConnectTime;
        break;
      }

      // optional int32 ConnectTime = 10;
      case 10: {
        if (tag == 80) {
         parse_ConnectTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connecttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_ReceiveTime;
        break;
      }

      // optional int32 ReceiveTime = 11;
      case 11: {
        if (tag == 88) {
         parse_ReceiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivetime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_EPollThreadQuantity;
        break;
      }

      // optional int32 EPollThreadQuantity = 12;
      case 12: {
        if (tag == 96) {
         parse_EPollThreadQuantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epollthreadquantity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.GLOBAL_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.GLOBAL_CONFIG)
  return false;
#undef DO_
}

void GLOBAL_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.GLOBAL_CONFIG)
  // optional int32 ListenPort = 1;
  if (this->listenport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->listenport(), output);
  }

  // optional string LogPath = 2;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), this->logpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.LogPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->logpath(), output);
  }

  // optional int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loglevel(), output);
  }

  // optional bool DebugMode = 4;
  if (this->debugmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->debugmode(), output);
  }

  // optional int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mqthreadquantity(), output);
  }

  // optional bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enablessl(), output);
  }

  // optional string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), this->certfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.CertFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->certfilepath(), output);
  }

  // optional string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), this->keyfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.KeyFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->keyfilepath(), output);
  }

  // optional string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), this->certpasswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.CertPasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->certpasswd(), output);
  }

  // optional int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->connecttime(), output);
  }

  // optional int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->receivetime(), output);
  }

  // optional int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->epollthreadquantity(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.GLOBAL_CONFIG)
}

::google::protobuf::uint8* GLOBAL_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.GLOBAL_CONFIG)
  // optional int32 ListenPort = 1;
  if (this->listenport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->listenport(), target);
  }

  // optional string LogPath = 2;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), this->logpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.LogPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->logpath(), target);
  }

  // optional int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loglevel(), target);
  }

  // optional bool DebugMode = 4;
  if (this->debugmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->debugmode(), target);
  }

  // optional int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mqthreadquantity(), target);
  }

  // optional bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enablessl(), target);
  }

  // optional string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), this->certfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.CertFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->certfilepath(), target);
  }

  // optional string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), this->keyfilepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.KeyFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->keyfilepath(), target);
  }

  // optional string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), this->certpasswd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.GLOBAL_CONFIG.CertPasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->certpasswd(), target);
  }

  // optional int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->connecttime(), target);
  }

  // optional int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->receivetime(), target);
  }

  // optional int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->epollthreadquantity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.GLOBAL_CONFIG)
  return target;
}

int GLOBAL_CONFIG::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.GLOBAL_CONFIG)
  int total_size = 0;

  // optional int32 ListenPort = 1;
  if (this->listenport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listenport());
  }

  // optional string LogPath = 2;
  if (this->logpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logpath());
  }

  // optional int32 LogLevel = 3;
  if (this->loglevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loglevel());
  }

  // optional bool DebugMode = 4;
  if (this->debugmode() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 MQThreadQuantity = 5;
  if (this->mqthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqthreadquantity());
  }

  // optional bool EnableSSL = 6;
  if (this->enablessl() != 0) {
    total_size += 1 + 1;
  }

  // optional string CertFilePath = 7;
  if (this->certfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certfilepath());
  }

  // optional string KeyFilePath = 8;
  if (this->keyfilepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyfilepath());
  }

  // optional string CertPasswd = 9;
  if (this->certpasswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certpasswd());
  }

  // optional int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connecttime());
  }

  // optional int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivetime());
  }

  // optional int32 EPollThreadQuantity = 12;
  if (this->epollthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epollthreadquantity());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GLOBAL_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.GLOBAL_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GLOBAL_CONFIG* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GLOBAL_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.GLOBAL_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.GLOBAL_CONFIG)
    MergeFrom(*source);
  }
}

void GLOBAL_CONFIG::MergeFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.GLOBAL_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.listenport() != 0) {
    set_listenport(from.listenport());
  }
  if (from.logpath().size() > 0) {

    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  if (from.loglevel() != 0) {
    set_loglevel(from.loglevel());
  }
  if (from.debugmode() != 0) {
    set_debugmode(from.debugmode());
  }
  if (from.mqthreadquantity() != 0) {
    set_mqthreadquantity(from.mqthreadquantity());
  }
  if (from.enablessl() != 0) {
    set_enablessl(from.enablessl());
  }
  if (from.certfilepath().size() > 0) {

    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  if (from.keyfilepath().size() > 0) {

    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  if (from.certpasswd().size() > 0) {

    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  if (from.connecttime() != 0) {
    set_connecttime(from.connecttime());
  }
  if (from.receivetime() != 0) {
    set_receivetime(from.receivetime());
  }
  if (from.epollthreadquantity() != 0) {
    set_epollthreadquantity(from.epollthreadquantity());
  }
}

void GLOBAL_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GLOBAL_CONFIG::CopyFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GLOBAL_CONFIG::IsInitialized() const {

  return true;
}

void GLOBAL_CONFIG::Swap(GLOBAL_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLOBAL_CONFIG::InternalSwap(GLOBAL_CONFIG* other) {
  std::swap(listenport_, other->listenport_);
  logpath_.Swap(&other->logpath_);
  std::swap(loglevel_, other->loglevel_);
  std::swap(debugmode_, other->debugmode_);
  std::swap(mqthreadquantity_, other->mqthreadquantity_);
  std::swap(enablessl_, other->enablessl_);
  certfilepath_.Swap(&other->certfilepath_);
  keyfilepath_.Swap(&other->keyfilepath_);
  certpasswd_.Swap(&other->certpasswd_);
  std::swap(connecttime_, other->connecttime_);
  std::swap(receivetime_, other->receivetime_);
  std::swap(epollthreadquantity_, other->epollthreadquantity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GLOBAL_CONFIG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GLOBAL_CONFIG_descriptor_;
  metadata.reflection = GLOBAL_CONFIG_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GLOBAL_CONFIG

// optional int32 ListenPort = 1;
void GLOBAL_CONFIG::clear_listenport() {
  listenport_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::listenport() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.ListenPort)
  return listenport_;
}
 void GLOBAL_CONFIG::set_listenport(::google::protobuf::int32 value) {
  
  listenport_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.ListenPort)
}

// optional string LogPath = 2;
void GLOBAL_CONFIG::clear_logpath() {
  logpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GLOBAL_CONFIG::logpath() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.LogPath)
  return logpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_logpath(const ::std::string& value) {
  
  logpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.LogPath)
}
 void GLOBAL_CONFIG::set_logpath(const char* value) {
  
  logpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.GLOBAL_CONFIG.LogPath)
}
 void GLOBAL_CONFIG::set_logpath(const char* value, size_t size) {
  
  logpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.GLOBAL_CONFIG.LogPath)
}
 ::std::string* GLOBAL_CONFIG::mutable_logpath() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.GLOBAL_CONFIG.LogPath)
  return logpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GLOBAL_CONFIG::release_logpath() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.GLOBAL_CONFIG.LogPath)
  
  return logpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_allocated_logpath(::std::string* logpath) {
  if (logpath != NULL) {
    
  } else {
    
  }
  logpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logpath);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.GLOBAL_CONFIG.LogPath)
}

// optional int32 LogLevel = 3;
void GLOBAL_CONFIG::clear_loglevel() {
  loglevel_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::loglevel() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.LogLevel)
  return loglevel_;
}
 void GLOBAL_CONFIG::set_loglevel(::google::protobuf::int32 value) {
  
  loglevel_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.LogLevel)
}

// optional bool DebugMode = 4;
void GLOBAL_CONFIG::clear_debugmode() {
  debugmode_ = false;
}
 bool GLOBAL_CONFIG::debugmode() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.DebugMode)
  return debugmode_;
}
 void GLOBAL_CONFIG::set_debugmode(bool value) {
  
  debugmode_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.DebugMode)
}

// optional int32 MQThreadQuantity = 5;
void GLOBAL_CONFIG::clear_mqthreadquantity() {
  mqthreadquantity_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::mqthreadquantity() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.MQThreadQuantity)
  return mqthreadquantity_;
}
 void GLOBAL_CONFIG::set_mqthreadquantity(::google::protobuf::int32 value) {
  
  mqthreadquantity_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.MQThreadQuantity)
}

// optional bool EnableSSL = 6;
void GLOBAL_CONFIG::clear_enablessl() {
  enablessl_ = false;
}
 bool GLOBAL_CONFIG::enablessl() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.EnableSSL)
  return enablessl_;
}
 void GLOBAL_CONFIG::set_enablessl(bool value) {
  
  enablessl_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.EnableSSL)
}

// optional string CertFilePath = 7;
void GLOBAL_CONFIG::clear_certfilepath() {
  certfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GLOBAL_CONFIG::certfilepath() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
  return certfilepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_certfilepath(const ::std::string& value) {
  
  certfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
}
 void GLOBAL_CONFIG::set_certfilepath(const char* value) {
  
  certfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
}
 void GLOBAL_CONFIG::set_certfilepath(const char* value, size_t size) {
  
  certfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
}
 ::std::string* GLOBAL_CONFIG::mutable_certfilepath() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
  return certfilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GLOBAL_CONFIG::release_certfilepath() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
  
  return certfilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_allocated_certfilepath(::std::string* certfilepath) {
  if (certfilepath != NULL) {
    
  } else {
    
  }
  certfilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), certfilepath);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.GLOBAL_CONFIG.CertFilePath)
}

// optional string KeyFilePath = 8;
void GLOBAL_CONFIG::clear_keyfilepath() {
  keyfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GLOBAL_CONFIG::keyfilepath() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
  return keyfilepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_keyfilepath(const ::std::string& value) {
  
  keyfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
}
 void GLOBAL_CONFIG::set_keyfilepath(const char* value) {
  
  keyfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
}
 void GLOBAL_CONFIG::set_keyfilepath(const char* value, size_t size) {
  
  keyfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
}
 ::std::string* GLOBAL_CONFIG::mutable_keyfilepath() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
  return keyfilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GLOBAL_CONFIG::release_keyfilepath() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
  
  return keyfilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_allocated_keyfilepath(::std::string* keyfilepath) {
  if (keyfilepath != NULL) {
    
  } else {
    
  }
  keyfilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyfilepath);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.GLOBAL_CONFIG.KeyFilePath)
}

// optional string CertPasswd = 9;
void GLOBAL_CONFIG::clear_certpasswd() {
  certpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GLOBAL_CONFIG::certpasswd() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
  return certpasswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_certpasswd(const ::std::string& value) {
  
  certpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
}
 void GLOBAL_CONFIG::set_certpasswd(const char* value) {
  
  certpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
}
 void GLOBAL_CONFIG::set_certpasswd(const char* value, size_t size) {
  
  certpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
}
 ::std::string* GLOBAL_CONFIG::mutable_certpasswd() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
  return certpasswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GLOBAL_CONFIG::release_certpasswd() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
  
  return certpasswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GLOBAL_CONFIG::set_allocated_certpasswd(::std::string* certpasswd) {
  if (certpasswd != NULL) {
    
  } else {
    
  }
  certpasswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), certpasswd);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.GLOBAL_CONFIG.CertPasswd)
}

// optional int32 ConnectTime = 10;
void GLOBAL_CONFIG::clear_connecttime() {
  connecttime_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::connecttime() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.ConnectTime)
  return connecttime_;
}
 void GLOBAL_CONFIG::set_connecttime(::google::protobuf::int32 value) {
  
  connecttime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.ConnectTime)
}

// optional int32 ReceiveTime = 11;
void GLOBAL_CONFIG::clear_receivetime() {
  receivetime_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::receivetime() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.ReceiveTime)
  return receivetime_;
}
 void GLOBAL_CONFIG::set_receivetime(::google::protobuf::int32 value) {
  
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.ReceiveTime)
}

// optional int32 EPollThreadQuantity = 12;
void GLOBAL_CONFIG::clear_epollthreadquantity() {
  epollthreadquantity_ = 0;
}
 ::google::protobuf::int32 GLOBAL_CONFIG::epollthreadquantity() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.GLOBAL_CONFIG.EPollThreadQuantity)
  return epollthreadquantity_;
}
 void GLOBAL_CONFIG::set_epollthreadquantity(::google::protobuf::int32 value) {
  
  epollthreadquantity_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.GLOBAL_CONFIG.EPollThreadQuantity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DB_CONFIG::kServerAddressFieldNumber;
const int DB_CONFIG::kServerPortFieldNumber;
const int DB_CONFIG::kUserFieldNumber;
const int DB_CONFIG::kPasswdFieldNumber;
const int DB_CONFIG::kDatabaseFieldNumber;
const int DB_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DB_CONFIG::DB_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.DB_CONFIG)
}

void DB_CONFIG::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  serverconfig_ = const_cast< ::ProtobufMessage::GLOBAL_CONFIG*>(&::ProtobufMessage::GLOBAL_CONFIG::default_instance());
}

DB_CONFIG::DB_CONFIG(const DB_CONFIG& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.DB_CONFIG)
}

void DB_CONFIG::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serveraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverconfig_ = NULL;
}

DB_CONFIG::~DB_CONFIG() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.DB_CONFIG)
  SharedDtor();
}

void DB_CONFIG::SharedDtor() {
  serveraddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete serverconfig_;
  }
}

void DB_CONFIG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_CONFIG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_CONFIG_descriptor_;
}

const DB_CONFIG& DB_CONFIG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

DB_CONFIG* DB_CONFIG::default_instance_ = NULL;

DB_CONFIG* DB_CONFIG::New(::google::protobuf::Arena* arena) const {
  DB_CONFIG* n = new DB_CONFIG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DB_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.DB_CONFIG)
  serveraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}

bool DB_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.DB_CONFIG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ServerAddress = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddress().data(), this->serveraddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.DB_CONFIG.ServerAddress"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 2;
      case 2: {
        if (tag == 16) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_User;
        break;
      }

      // optional string User = 3;
      case 3: {
        if (tag == 26) {
         parse_User:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.DB_CONFIG.User"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Passwd;
        break;
      }

      // optional string Passwd = 4;
      case 4: {
        if (tag == 34) {
         parse_Passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.DB_CONFIG.Passwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Database;
        break;
      }

      // optional string Database = 5;
      case 5: {
        if (tag == 42) {
         parse_Database:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database().data(), this->database().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.DB_CONFIG.Database"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ServerConfig;
        break;
      }

      // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 6;
      case 6: {
        if (tag == 50) {
         parse_ServerConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.DB_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.DB_CONFIG)
  return false;
#undef DO_
}

void DB_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.DB_CONFIG)
  // optional string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddress().data(), this->serveraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.ServerAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->serveraddress(), output);
  }

  // optional int32 ServerPort = 2;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverport(), output);
  }

  // optional string User = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.User");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user(), output);
  }

  // optional string Passwd = 4;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.Passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->passwd(), output);
  }

  // optional string Database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), this->database().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.Database");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->database(), output);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->serverconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.DB_CONFIG)
}

::google::protobuf::uint8* DB_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.DB_CONFIG)
  // optional string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddress().data(), this->serveraddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.ServerAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->serveraddress(), target);
  }

  // optional int32 ServerPort = 2;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverport(), target);
  }

  // optional string User = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.User");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user(), target);
  }

  // optional string Passwd = 4;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.Passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->passwd(), target);
  }

  // optional string Database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), this->database().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.DB_CONFIG.Database");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->database(), target);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->serverconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.DB_CONFIG)
  return target;
}

int DB_CONFIG::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.DB_CONFIG)
  int total_size = 0;

  // optional string ServerAddress = 1;
  if (this->serveraddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddress());
  }

  // optional int32 ServerPort = 2;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional string User = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // optional string Passwd = 4;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // optional string Database = 5;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database());
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 6;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->serverconfig_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.DB_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DB_CONFIG* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DB_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.DB_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.DB_CONFIG)
    MergeFrom(*source);
  }
}

void DB_CONFIG::MergeFrom(const DB_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.DB_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.serveraddress().size() > 0) {

    serveraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddress_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::ProtobufMessage::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
}

void DB_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.DB_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_CONFIG::CopyFrom(const DB_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.DB_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_CONFIG::IsInitialized() const {

  return true;
}

void DB_CONFIG::Swap(DB_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DB_CONFIG::InternalSwap(DB_CONFIG* other) {
  serveraddress_.Swap(&other->serveraddress_);
  std::swap(serverport_, other->serverport_);
  user_.Swap(&other->user_);
  passwd_.Swap(&other->passwd_);
  database_.Swap(&other->database_);
  std::swap(serverconfig_, other->serverconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DB_CONFIG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_CONFIG_descriptor_;
  metadata.reflection = DB_CONFIG_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DB_CONFIG

// optional string ServerAddress = 1;
void DB_CONFIG::clear_serveraddress() {
  serveraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DB_CONFIG::serveraddress() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.ServerAddress)
  return serveraddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_serveraddress(const ::std::string& value) {
  
  serveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.DB_CONFIG.ServerAddress)
}
 void DB_CONFIG::set_serveraddress(const char* value) {
  
  serveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.DB_CONFIG.ServerAddress)
}
 void DB_CONFIG::set_serveraddress(const char* value, size_t size) {
  
  serveraddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.DB_CONFIG.ServerAddress)
}
 ::std::string* DB_CONFIG::mutable_serveraddress() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DB_CONFIG.ServerAddress)
  return serveraddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DB_CONFIG::release_serveraddress() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DB_CONFIG.ServerAddress)
  
  return serveraddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_allocated_serveraddress(::std::string* serveraddress) {
  if (serveraddress != NULL) {
    
  } else {
    
  }
  serveraddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serveraddress);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DB_CONFIG.ServerAddress)
}

// optional int32 ServerPort = 2;
void DB_CONFIG::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 DB_CONFIG::serverport() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.ServerPort)
  return serverport_;
}
 void DB_CONFIG::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.DB_CONFIG.ServerPort)
}

// optional string User = 3;
void DB_CONFIG::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DB_CONFIG::user() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.User)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.DB_CONFIG.User)
}
 void DB_CONFIG::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.DB_CONFIG.User)
}
 void DB_CONFIG::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.DB_CONFIG.User)
}
 ::std::string* DB_CONFIG::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DB_CONFIG.User)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DB_CONFIG::release_user() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DB_CONFIG.User)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DB_CONFIG.User)
}

// optional string Passwd = 4;
void DB_CONFIG::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DB_CONFIG::passwd() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.Passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.DB_CONFIG.Passwd)
}
 void DB_CONFIG::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.DB_CONFIG.Passwd)
}
 void DB_CONFIG::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.DB_CONFIG.Passwd)
}
 ::std::string* DB_CONFIG::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DB_CONFIG.Passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DB_CONFIG::release_passwd() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DB_CONFIG.Passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DB_CONFIG.Passwd)
}

// optional string Database = 5;
void DB_CONFIG::clear_database() {
  database_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DB_CONFIG::database() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.Database)
  return database_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_database(const ::std::string& value) {
  
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.DB_CONFIG.Database)
}
 void DB_CONFIG::set_database(const char* value) {
  
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.DB_CONFIG.Database)
}
 void DB_CONFIG::set_database(const char* value, size_t size) {
  
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.DB_CONFIG.Database)
}
 ::std::string* DB_CONFIG::mutable_database() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DB_CONFIG.Database)
  return database_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DB_CONFIG::release_database() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DB_CONFIG.Database)
  
  return database_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DB_CONFIG::set_allocated_database(::std::string* database) {
  if (database != NULL) {
    
  } else {
    
  }
  database_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DB_CONFIG.Database)
}

// optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 6;
bool DB_CONFIG::has_serverconfig() const {
  return !_is_default_instance_ && serverconfig_ != NULL;
}
void DB_CONFIG::clear_serverconfig() {
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}
const ::ProtobufMessage::GLOBAL_CONFIG& DB_CONFIG::serverconfig() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DB_CONFIG.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_ : *default_instance_->serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* DB_CONFIG::mutable_serverconfig() {
  
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::ProtobufMessage::GLOBAL_CONFIG;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DB_CONFIG.ServerConfig)
  return serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* DB_CONFIG::release_serverconfig() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DB_CONFIG.ServerConfig)
  
  ::ProtobufMessage::GLOBAL_CONFIG* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
void DB_CONFIG::set_allocated_serverconfig(::ProtobufMessage::GLOBAL_CONFIG* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DB_CONFIG.ServerConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DATA_CONFIG::kDataReceivePortFieldNumber;
const int DATA_CONFIG::kDataRecvTimeFieldNumber;
const int DATA_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DATA_CONFIG::DATA_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.DATA_CONFIG)
}

void DATA_CONFIG::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  serverconfig_ = const_cast< ::ProtobufMessage::GLOBAL_CONFIG*>(&::ProtobufMessage::GLOBAL_CONFIG::default_instance());
}

DATA_CONFIG::DATA_CONFIG(const DATA_CONFIG& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.DATA_CONFIG)
}

void DATA_CONFIG::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  datareceiveport_ = 0;
  datarecvtime_ = 0;
  serverconfig_ = NULL;
}

DATA_CONFIG::~DATA_CONFIG() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.DATA_CONFIG)
  SharedDtor();
}

void DATA_CONFIG::SharedDtor() {
  if (this != default_instance_) {
    delete serverconfig_;
  }
}

void DATA_CONFIG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DATA_CONFIG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DATA_CONFIG_descriptor_;
}

const DATA_CONFIG& DATA_CONFIG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

DATA_CONFIG* DATA_CONFIG::default_instance_ = NULL;

DATA_CONFIG* DATA_CONFIG::New(::google::protobuf::Arena* arena) const {
  DATA_CONFIG* n = new DATA_CONFIG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DATA_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.DATA_CONFIG)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DATA_CONFIG, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DATA_CONFIG*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(datareceiveport_, datarecvtime_);
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool DATA_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.DATA_CONFIG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 DataReceivePort = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datareceiveport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DataRecvTime;
        break;
      }

      // optional int32 DataRecvTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DataRecvTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &datarecvtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ServerConfig;
        break;
      }

      // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 3;
      case 3: {
        if (tag == 26) {
         parse_ServerConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.DATA_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.DATA_CONFIG)
  return false;
#undef DO_
}

void DATA_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.DATA_CONFIG)
  // optional int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->datareceiveport(), output);
  }

  // optional int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->datarecvtime(), output);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 3;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->serverconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.DATA_CONFIG)
}

::google::protobuf::uint8* DATA_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.DATA_CONFIG)
  // optional int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->datareceiveport(), target);
  }

  // optional int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->datarecvtime(), target);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 3;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->serverconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.DATA_CONFIG)
  return target;
}

int DATA_CONFIG::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.DATA_CONFIG)
  int total_size = 0;

  // optional int32 DataReceivePort = 1;
  if (this->datareceiveport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datareceiveport());
  }

  // optional int32 DataRecvTime = 2;
  if (this->datarecvtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->datarecvtime());
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 3;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->serverconfig_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DATA_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.DATA_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DATA_CONFIG* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DATA_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.DATA_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.DATA_CONFIG)
    MergeFrom(*source);
  }
}

void DATA_CONFIG::MergeFrom(const DATA_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.DATA_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.datareceiveport() != 0) {
    set_datareceiveport(from.datareceiveport());
  }
  if (from.datarecvtime() != 0) {
    set_datarecvtime(from.datarecvtime());
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::ProtobufMessage::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
}

void DATA_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.DATA_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DATA_CONFIG::CopyFrom(const DATA_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.DATA_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DATA_CONFIG::IsInitialized() const {

  return true;
}

void DATA_CONFIG::Swap(DATA_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DATA_CONFIG::InternalSwap(DATA_CONFIG* other) {
  std::swap(datareceiveport_, other->datareceiveport_);
  std::swap(datarecvtime_, other->datarecvtime_);
  std::swap(serverconfig_, other->serverconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DATA_CONFIG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DATA_CONFIG_descriptor_;
  metadata.reflection = DATA_CONFIG_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DATA_CONFIG

// optional int32 DataReceivePort = 1;
void DATA_CONFIG::clear_datareceiveport() {
  datareceiveport_ = 0;
}
 ::google::protobuf::int32 DATA_CONFIG::datareceiveport() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DATA_CONFIG.DataReceivePort)
  return datareceiveport_;
}
 void DATA_CONFIG::set_datareceiveport(::google::protobuf::int32 value) {
  
  datareceiveport_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.DATA_CONFIG.DataReceivePort)
}

// optional int32 DataRecvTime = 2;
void DATA_CONFIG::clear_datarecvtime() {
  datarecvtime_ = 0;
}
 ::google::protobuf::int32 DATA_CONFIG::datarecvtime() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DATA_CONFIG.DataRecvTime)
  return datarecvtime_;
}
 void DATA_CONFIG::set_datarecvtime(::google::protobuf::int32 value) {
  
  datarecvtime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.DATA_CONFIG.DataRecvTime)
}

// optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 3;
bool DATA_CONFIG::has_serverconfig() const {
  return !_is_default_instance_ && serverconfig_ != NULL;
}
void DATA_CONFIG::clear_serverconfig() {
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}
const ::ProtobufMessage::GLOBAL_CONFIG& DATA_CONFIG::serverconfig() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.DATA_CONFIG.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_ : *default_instance_->serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* DATA_CONFIG::mutable_serverconfig() {
  
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::ProtobufMessage::GLOBAL_CONFIG;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.DATA_CONFIG.ServerConfig)
  return serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* DATA_CONFIG::release_serverconfig() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.DATA_CONFIG.ServerConfig)
  
  ::ProtobufMessage::GLOBAL_CONFIG* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
void DATA_CONFIG::set_allocated_serverconfig(::ProtobufMessage::GLOBAL_CONFIG* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.DATA_CONFIG.ServerConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PROXY_CONFIG::kClientCheckTimeFieldNumber;
const int PROXY_CONFIG::kClientCheckKeyFieldNumber;
const int PROXY_CONFIG::kTimeoutCheckIntervalFieldNumber;
const int PROXY_CONFIG::kTimeoutTimeFieldNumber;
const int PROXY_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PROXY_CONFIG::PROXY_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PROXY_CONFIG)
}

void PROXY_CONFIG::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  serverconfig_ = const_cast< ::ProtobufMessage::GLOBAL_CONFIG*>(&::ProtobufMessage::GLOBAL_CONFIG::default_instance());
}

PROXY_CONFIG::PROXY_CONFIG(const PROXY_CONFIG& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PROXY_CONFIG)
}

void PROXY_CONFIG::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clientchecktime_ = 0;
  clientcheckkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeoutcheckinterval_ = 0;
  timeouttime_ = 0;
  serverconfig_ = NULL;
}

PROXY_CONFIG::~PROXY_CONFIG() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PROXY_CONFIG)
  SharedDtor();
}

void PROXY_CONFIG::SharedDtor() {
  clientcheckkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete serverconfig_;
  }
}

void PROXY_CONFIG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PROXY_CONFIG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PROXY_CONFIG_descriptor_;
}

const PROXY_CONFIG& PROXY_CONFIG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

PROXY_CONFIG* PROXY_CONFIG::default_instance_ = NULL;

PROXY_CONFIG* PROXY_CONFIG::New(::google::protobuf::Arena* arena) const {
  PROXY_CONFIG* n = new PROXY_CONFIG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PROXY_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PROXY_CONFIG)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PROXY_CONFIG, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PROXY_CONFIG*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(clientchecktime_, timeoutcheckinterval_);
  clientcheckkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeouttime_ = 0;
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PROXY_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PROXY_CONFIG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ClientCheckTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientchecktime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ClientCheckKey;
        break;
      }

      // optional string ClientCheckKey = 2;
      case 2: {
        if (tag == 18) {
         parse_ClientCheckKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientcheckkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientcheckkey().data(), this->clientcheckkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROXY_CONFIG.ClientCheckKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TimeoutCheckInterval;
        break;
      }

      // optional int32 TimeoutCheckInterval = 3;
      case 3: {
        if (tag == 24) {
         parse_TimeoutCheckInterval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeoutcheckinterval_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_TimeoutTime;
        break;
      }

      // optional int32 TimeoutTime = 4;
      case 4: {
        if (tag == 32) {
         parse_TimeoutTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeouttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ServerConfig;
        break;
      }

      // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 5;
      case 5: {
        if (tag == 42) {
         parse_ServerConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PROXY_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PROXY_CONFIG)
  return false;
#undef DO_
}

void PROXY_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PROXY_CONFIG)
  // optional int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientchecktime(), output);
  }

  // optional string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientcheckkey().data(), this->clientcheckkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROXY_CONFIG.ClientCheckKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientcheckkey(), output);
  }

  // optional int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeoutcheckinterval(), output);
  }

  // optional int32 TimeoutTime = 4;
  if (this->timeouttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timeouttime(), output);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 5;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->serverconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PROXY_CONFIG)
}

::google::protobuf::uint8* PROXY_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PROXY_CONFIG)
  // optional int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientchecktime(), target);
  }

  // optional string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientcheckkey().data(), this->clientcheckkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROXY_CONFIG.ClientCheckKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientcheckkey(), target);
  }

  // optional int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeoutcheckinterval(), target);
  }

  // optional int32 TimeoutTime = 4;
  if (this->timeouttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timeouttime(), target);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 5;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->serverconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PROXY_CONFIG)
  return target;
}

int PROXY_CONFIG::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PROXY_CONFIG)
  int total_size = 0;

  // optional int32 ClientCheckTime = 1;
  if (this->clientchecktime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientchecktime());
  }

  // optional string ClientCheckKey = 2;
  if (this->clientcheckkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientcheckkey());
  }

  // optional int32 TimeoutCheckInterval = 3;
  if (this->timeoutcheckinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeoutcheckinterval());
  }

  // optional int32 TimeoutTime = 4;
  if (this->timeouttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeouttime());
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 5;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->serverconfig_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PROXY_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PROXY_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PROXY_CONFIG* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PROXY_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PROXY_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PROXY_CONFIG)
    MergeFrom(*source);
  }
}

void PROXY_CONFIG::MergeFrom(const PROXY_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PROXY_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.clientchecktime() != 0) {
    set_clientchecktime(from.clientchecktime());
  }
  if (from.clientcheckkey().size() > 0) {

    clientcheckkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientcheckkey_);
  }
  if (from.timeoutcheckinterval() != 0) {
    set_timeoutcheckinterval(from.timeoutcheckinterval());
  }
  if (from.timeouttime() != 0) {
    set_timeouttime(from.timeouttime());
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::ProtobufMessage::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
}

void PROXY_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PROXY_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROXY_CONFIG::CopyFrom(const PROXY_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PROXY_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROXY_CONFIG::IsInitialized() const {

  return true;
}

void PROXY_CONFIG::Swap(PROXY_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PROXY_CONFIG::InternalSwap(PROXY_CONFIG* other) {
  std::swap(clientchecktime_, other->clientchecktime_);
  clientcheckkey_.Swap(&other->clientcheckkey_);
  std::swap(timeoutcheckinterval_, other->timeoutcheckinterval_);
  std::swap(timeouttime_, other->timeouttime_);
  std::swap(serverconfig_, other->serverconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PROXY_CONFIG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PROXY_CONFIG_descriptor_;
  metadata.reflection = PROXY_CONFIG_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PROXY_CONFIG

// optional int32 ClientCheckTime = 1;
void PROXY_CONFIG::clear_clientchecktime() {
  clientchecktime_ = 0;
}
 ::google::protobuf::int32 PROXY_CONFIG::clientchecktime() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROXY_CONFIG.ClientCheckTime)
  return clientchecktime_;
}
 void PROXY_CONFIG::set_clientchecktime(::google::protobuf::int32 value) {
  
  clientchecktime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROXY_CONFIG.ClientCheckTime)
}

// optional string ClientCheckKey = 2;
void PROXY_CONFIG::clear_clientcheckkey() {
  clientcheckkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROXY_CONFIG::clientcheckkey() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
  return clientcheckkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROXY_CONFIG::set_clientcheckkey(const ::std::string& value) {
  
  clientcheckkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
}
 void PROXY_CONFIG::set_clientcheckkey(const char* value) {
  
  clientcheckkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
}
 void PROXY_CONFIG::set_clientcheckkey(const char* value, size_t size) {
  
  clientcheckkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
}
 ::std::string* PROXY_CONFIG::mutable_clientcheckkey() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
  return clientcheckkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROXY_CONFIG::release_clientcheckkey() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
  
  return clientcheckkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROXY_CONFIG::set_allocated_clientcheckkey(::std::string* clientcheckkey) {
  if (clientcheckkey != NULL) {
    
  } else {
    
  }
  clientcheckkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientcheckkey);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROXY_CONFIG.ClientCheckKey)
}

// optional int32 TimeoutCheckInterval = 3;
void PROXY_CONFIG::clear_timeoutcheckinterval() {
  timeoutcheckinterval_ = 0;
}
 ::google::protobuf::int32 PROXY_CONFIG::timeoutcheckinterval() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROXY_CONFIG.TimeoutCheckInterval)
  return timeoutcheckinterval_;
}
 void PROXY_CONFIG::set_timeoutcheckinterval(::google::protobuf::int32 value) {
  
  timeoutcheckinterval_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROXY_CONFIG.TimeoutCheckInterval)
}

// optional int32 TimeoutTime = 4;
void PROXY_CONFIG::clear_timeouttime() {
  timeouttime_ = 0;
}
 ::google::protobuf::int32 PROXY_CONFIG::timeouttime() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROXY_CONFIG.TimeoutTime)
  return timeouttime_;
}
 void PROXY_CONFIG::set_timeouttime(::google::protobuf::int32 value) {
  
  timeouttime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROXY_CONFIG.TimeoutTime)
}

// optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 5;
bool PROXY_CONFIG::has_serverconfig() const {
  return !_is_default_instance_ && serverconfig_ != NULL;
}
void PROXY_CONFIG::clear_serverconfig() {
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}
const ::ProtobufMessage::GLOBAL_CONFIG& PROXY_CONFIG::serverconfig() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROXY_CONFIG.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_ : *default_instance_->serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* PROXY_CONFIG::mutable_serverconfig() {
  
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::ProtobufMessage::GLOBAL_CONFIG;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROXY_CONFIG.ServerConfig)
  return serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* PROXY_CONFIG::release_serverconfig() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROXY_CONFIG.ServerConfig)
  
  ::ProtobufMessage::GLOBAL_CONFIG* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
void PROXY_CONFIG::set_allocated_serverconfig(::ProtobufMessage::GLOBAL_CONFIG* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROXY_CONFIG.ServerConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PROCESS_CONFIG::kLuaContextQuantityFieldNumber;
const int PROCESS_CONFIG::kLuaScriptFolderFieldNumber;
const int PROCESS_CONFIG::kLuaEntryFileFieldNumber;
const int PROCESS_CONFIG::kLuaEntryFunctionFieldNumber;
const int PROCESS_CONFIG::kLuaProcessFunctionFieldNumber;
const int PROCESS_CONFIG::kLuaSocketCloseFunctionFieldNumber;
const int PROCESS_CONFIG::kServerConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PROCESS_CONFIG::PROCESS_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PROCESS_CONFIG)
}

void PROCESS_CONFIG::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  serverconfig_ = const_cast< ::ProtobufMessage::GLOBAL_CONFIG*>(&::ProtobufMessage::GLOBAL_CONFIG::default_instance());
}

PROCESS_CONFIG::PROCESS_CONFIG(const PROCESS_CONFIG& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PROCESS_CONFIG)
}

void PROCESS_CONFIG::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  luacontextquantity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverconfig_ = NULL;
}

PROCESS_CONFIG::~PROCESS_CONFIG() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PROCESS_CONFIG)
  SharedDtor();
}

void PROCESS_CONFIG::SharedDtor() {
  luacontextquantity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete serverconfig_;
  }
}

void PROCESS_CONFIG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PROCESS_CONFIG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PROCESS_CONFIG_descriptor_;
}

const PROCESS_CONFIG& PROCESS_CONFIG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

PROCESS_CONFIG* PROCESS_CONFIG::default_instance_ = NULL;

PROCESS_CONFIG* PROCESS_CONFIG::New(::google::protobuf::Arena* arena) const {
  PROCESS_CONFIG* n = new PROCESS_CONFIG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PROCESS_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PROCESS_CONFIG)
  luacontextquantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luascriptfolder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaentryfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luaprocessfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luasocketclosefunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}

bool PROCESS_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PROCESS_CONFIG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string LuaContextQuantity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luacontextquantity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luacontextquantity().data(), this->luacontextquantity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LuaScriptFolder;
        break;
      }

      // optional string LuaScriptFolder = 2;
      case 2: {
        if (tag == 18) {
         parse_LuaScriptFolder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luascriptfolder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luascriptfolder().data(), this->luascriptfolder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_LuaEntryFile;
        break;
      }

      // optional string LuaEntryFile = 3;
      case 3: {
        if (tag == 26) {
         parse_LuaEntryFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaentryfile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaentryfile().data(), this->luaentryfile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaEntryFile"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_LuaEntryFunction;
        break;
      }

      // optional string LuaEntryFunction = 4;
      case 4: {
        if (tag == 34) {
         parse_LuaEntryFunction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaentryfunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaentryfunction().data(), this->luaentryfunction().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_LuaProcessFunction;
        break;
      }

      // optional string LuaProcessFunction = 5;
      case 5: {
        if (tag == 42) {
         parse_LuaProcessFunction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luaprocessfunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luaprocessfunction().data(), this->luaprocessfunction().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_LuaSocketCloseFunction;
        break;
      }

      // optional string LuaSocketCloseFunction = 6;
      case 6: {
        if (tag == 50) {
         parse_LuaSocketCloseFunction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luasocketclosefunction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luasocketclosefunction().data(), this->luasocketclosefunction().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ServerConfig;
        break;
      }

      // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 7;
      case 7: {
        if (tag == 58) {
         parse_ServerConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PROCESS_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PROCESS_CONFIG)
  return false;
#undef DO_
}

void PROCESS_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PROCESS_CONFIG)
  // optional string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luacontextquantity().data(), this->luacontextquantity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->luacontextquantity(), output);
  }

  // optional string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luascriptfolder().data(), this->luascriptfolder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->luascriptfolder(), output);
  }

  // optional string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfile().data(), this->luaentryfile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaEntryFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->luaentryfile(), output);
  }

  // optional string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfunction().data(), this->luaentryfunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->luaentryfunction(), output);
  }

  // optional string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaprocessfunction().data(), this->luaprocessfunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->luaprocessfunction(), output);
  }

  // optional string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luasocketclosefunction().data(), this->luasocketclosefunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->luasocketclosefunction(), output);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->serverconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PROCESS_CONFIG)
}

::google::protobuf::uint8* PROCESS_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PROCESS_CONFIG)
  // optional string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luacontextquantity().data(), this->luacontextquantity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->luacontextquantity(), target);
  }

  // optional string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luascriptfolder().data(), this->luascriptfolder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->luascriptfolder(), target);
  }

  // optional string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfile().data(), this->luaentryfile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaEntryFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->luaentryfile(), target);
  }

  // optional string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaentryfunction().data(), this->luaentryfunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->luaentryfunction(), target);
  }

  // optional string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luaprocessfunction().data(), this->luaprocessfunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->luaprocessfunction(), target);
  }

  // optional string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luasocketclosefunction().data(), this->luasocketclosefunction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->luasocketclosefunction(), target);
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->serverconfig_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PROCESS_CONFIG)
  return target;
}

int PROCESS_CONFIG::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PROCESS_CONFIG)
  int total_size = 0;

  // optional string LuaContextQuantity = 1;
  if (this->luacontextquantity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luacontextquantity());
  }

  // optional string LuaScriptFolder = 2;
  if (this->luascriptfolder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luascriptfolder());
  }

  // optional string LuaEntryFile = 3;
  if (this->luaentryfile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaentryfile());
  }

  // optional string LuaEntryFunction = 4;
  if (this->luaentryfunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaentryfunction());
  }

  // optional string LuaProcessFunction = 5;
  if (this->luaprocessfunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luaprocessfunction());
  }

  // optional string LuaSocketCloseFunction = 6;
  if (this->luasocketclosefunction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luasocketclosefunction());
  }

  // optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 7;
  if (this->has_serverconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->serverconfig_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PROCESS_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PROCESS_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PROCESS_CONFIG* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PROCESS_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PROCESS_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PROCESS_CONFIG)
    MergeFrom(*source);
  }
}

void PROCESS_CONFIG::MergeFrom(const PROCESS_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PROCESS_CONFIG)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.luacontextquantity().size() > 0) {

    luacontextquantity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luacontextquantity_);
  }
  if (from.luascriptfolder().size() > 0) {

    luascriptfolder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luascriptfolder_);
  }
  if (from.luaentryfile().size() > 0) {

    luaentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfile_);
  }
  if (from.luaentryfunction().size() > 0) {

    luaentryfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaentryfunction_);
  }
  if (from.luaprocessfunction().size() > 0) {

    luaprocessfunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luaprocessfunction_);
  }
  if (from.luasocketclosefunction().size() > 0) {

    luasocketclosefunction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luasocketclosefunction_);
  }
  if (from.has_serverconfig()) {
    mutable_serverconfig()->::ProtobufMessage::GLOBAL_CONFIG::MergeFrom(from.serverconfig());
  }
}

void PROCESS_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PROCESS_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROCESS_CONFIG::CopyFrom(const PROCESS_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PROCESS_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROCESS_CONFIG::IsInitialized() const {

  return true;
}

void PROCESS_CONFIG::Swap(PROCESS_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PROCESS_CONFIG::InternalSwap(PROCESS_CONFIG* other) {
  luacontextquantity_.Swap(&other->luacontextquantity_);
  luascriptfolder_.Swap(&other->luascriptfolder_);
  luaentryfile_.Swap(&other->luaentryfile_);
  luaentryfunction_.Swap(&other->luaentryfunction_);
  luaprocessfunction_.Swap(&other->luaprocessfunction_);
  luasocketclosefunction_.Swap(&other->luasocketclosefunction_);
  std::swap(serverconfig_, other->serverconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PROCESS_CONFIG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PROCESS_CONFIG_descriptor_;
  metadata.reflection = PROCESS_CONFIG_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PROCESS_CONFIG

// optional string LuaContextQuantity = 1;
void PROCESS_CONFIG::clear_luacontextquantity() {
  luacontextquantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luacontextquantity() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
  return luacontextquantity_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luacontextquantity(const ::std::string& value) {
  
  luacontextquantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
}
 void PROCESS_CONFIG::set_luacontextquantity(const char* value) {
  
  luacontextquantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
}
 void PROCESS_CONFIG::set_luacontextquantity(const char* value, size_t size) {
  
  luacontextquantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
}
 ::std::string* PROCESS_CONFIG::mutable_luacontextquantity() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
  return luacontextquantity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luacontextquantity() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
  
  return luacontextquantity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luacontextquantity(::std::string* luacontextquantity) {
  if (luacontextquantity != NULL) {
    
  } else {
    
  }
  luacontextquantity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luacontextquantity);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaContextQuantity)
}

// optional string LuaScriptFolder = 2;
void PROCESS_CONFIG::clear_luascriptfolder() {
  luascriptfolder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luascriptfolder() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
  return luascriptfolder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luascriptfolder(const ::std::string& value) {
  
  luascriptfolder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
}
 void PROCESS_CONFIG::set_luascriptfolder(const char* value) {
  
  luascriptfolder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
}
 void PROCESS_CONFIG::set_luascriptfolder(const char* value, size_t size) {
  
  luascriptfolder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
}
 ::std::string* PROCESS_CONFIG::mutable_luascriptfolder() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
  return luascriptfolder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luascriptfolder() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
  
  return luascriptfolder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luascriptfolder(::std::string* luascriptfolder) {
  if (luascriptfolder != NULL) {
    
  } else {
    
  }
  luascriptfolder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luascriptfolder);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaScriptFolder)
}

// optional string LuaEntryFile = 3;
void PROCESS_CONFIG::clear_luaentryfile() {
  luaentryfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luaentryfile() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
  return luaentryfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luaentryfile(const ::std::string& value) {
  
  luaentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
}
 void PROCESS_CONFIG::set_luaentryfile(const char* value) {
  
  luaentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
}
 void PROCESS_CONFIG::set_luaentryfile(const char* value, size_t size) {
  
  luaentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
}
 ::std::string* PROCESS_CONFIG::mutable_luaentryfile() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
  return luaentryfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luaentryfile() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
  
  return luaentryfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luaentryfile(::std::string* luaentryfile) {
  if (luaentryfile != NULL) {
    
  } else {
    
  }
  luaentryfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luaentryfile);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaEntryFile)
}

// optional string LuaEntryFunction = 4;
void PROCESS_CONFIG::clear_luaentryfunction() {
  luaentryfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luaentryfunction() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
  return luaentryfunction_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luaentryfunction(const ::std::string& value) {
  
  luaentryfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
}
 void PROCESS_CONFIG::set_luaentryfunction(const char* value) {
  
  luaentryfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
}
 void PROCESS_CONFIG::set_luaentryfunction(const char* value, size_t size) {
  
  luaentryfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
}
 ::std::string* PROCESS_CONFIG::mutable_luaentryfunction() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
  return luaentryfunction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luaentryfunction() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
  
  return luaentryfunction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luaentryfunction(::std::string* luaentryfunction) {
  if (luaentryfunction != NULL) {
    
  } else {
    
  }
  luaentryfunction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luaentryfunction);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaEntryFunction)
}

// optional string LuaProcessFunction = 5;
void PROCESS_CONFIG::clear_luaprocessfunction() {
  luaprocessfunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luaprocessfunction() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
  return luaprocessfunction_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luaprocessfunction(const ::std::string& value) {
  
  luaprocessfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
}
 void PROCESS_CONFIG::set_luaprocessfunction(const char* value) {
  
  luaprocessfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
}
 void PROCESS_CONFIG::set_luaprocessfunction(const char* value, size_t size) {
  
  luaprocessfunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
}
 ::std::string* PROCESS_CONFIG::mutable_luaprocessfunction() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
  return luaprocessfunction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luaprocessfunction() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
  
  return luaprocessfunction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luaprocessfunction(::std::string* luaprocessfunction) {
  if (luaprocessfunction != NULL) {
    
  } else {
    
  }
  luaprocessfunction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luaprocessfunction);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaProcessFunction)
}

// optional string LuaSocketCloseFunction = 6;
void PROCESS_CONFIG::clear_luasocketclosefunction() {
  luasocketclosefunction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PROCESS_CONFIG::luasocketclosefunction() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
  return luasocketclosefunction_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_luasocketclosefunction(const ::std::string& value) {
  
  luasocketclosefunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
}
 void PROCESS_CONFIG::set_luasocketclosefunction(const char* value) {
  
  luasocketclosefunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
}
 void PROCESS_CONFIG::set_luasocketclosefunction(const char* value, size_t size) {
  
  luasocketclosefunction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
}
 ::std::string* PROCESS_CONFIG::mutable_luasocketclosefunction() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
  return luasocketclosefunction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PROCESS_CONFIG::release_luasocketclosefunction() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
  
  return luasocketclosefunction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PROCESS_CONFIG::set_allocated_luasocketclosefunction(::std::string* luasocketclosefunction) {
  if (luasocketclosefunction != NULL) {
    
  } else {
    
  }
  luasocketclosefunction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luasocketclosefunction);
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.LuaSocketCloseFunction)
}

// optional .ProtobufMessage.GLOBAL_CONFIG ServerConfig = 7;
bool PROCESS_CONFIG::has_serverconfig() const {
  return !_is_default_instance_ && serverconfig_ != NULL;
}
void PROCESS_CONFIG::clear_serverconfig() {
  if (GetArenaNoVirtual() == NULL && serverconfig_ != NULL) delete serverconfig_;
  serverconfig_ = NULL;
}
const ::ProtobufMessage::GLOBAL_CONFIG& PROCESS_CONFIG::serverconfig() const {
  // @@protoc_insertion_point(field_get:ProtobufMessage.PROCESS_CONFIG.ServerConfig)
  return serverconfig_ != NULL ? *serverconfig_ : *default_instance_->serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* PROCESS_CONFIG::mutable_serverconfig() {
  
  if (serverconfig_ == NULL) {
    serverconfig_ = new ::ProtobufMessage::GLOBAL_CONFIG;
  }
  // @@protoc_insertion_point(field_mutable:ProtobufMessage.PROCESS_CONFIG.ServerConfig)
  return serverconfig_;
}
::ProtobufMessage::GLOBAL_CONFIG* PROCESS_CONFIG::release_serverconfig() {
  // @@protoc_insertion_point(field_release:ProtobufMessage.PROCESS_CONFIG.ServerConfig)
  
  ::ProtobufMessage::GLOBAL_CONFIG* temp = serverconfig_;
  serverconfig_ = NULL;
  return temp;
}
void PROCESS_CONFIG::set_allocated_serverconfig(::ProtobufMessage::GLOBAL_CONFIG* serverconfig) {
  delete serverconfig_;
  serverconfig_ = serverconfig;
  if (serverconfig) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.PROCESS_CONFIG.ServerConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufMessage

// @@protoc_insertion_point(global_scope)
