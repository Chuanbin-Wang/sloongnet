// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: filecenter.proto

#include "filecenter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_filecenter_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_filecenter_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfoItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_filecenter_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse;
}  // namespace protobuf_filecenter_2eproto
namespace FileCenter {
class FileInfoItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfoItem>
      _instance;
} _FileInfoItem_default_instance_;
class PrepareUploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareUploadRequest>
      _instance;
} _PrepareUploadRequest_default_instance_;
class PrepareUploadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareUploadResponse>
      _instance;
} _PrepareUploadResponse_default_instance_;
class UploadingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadingRequest>
      _instance;
} _UploadingRequest_default_instance_;
class UploadedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadedRequest>
      _instance;
} _UploadedRequest_default_instance_;
class PrepareDownloadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareDownloadRequest>
      _instance;
} _PrepareDownloadRequest_default_instance_;
class PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse>
      _instance;
} _PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse_default_instance_;
class PrepareDownloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrepareDownloadResponse>
      _instance;
} _PrepareDownloadResponse_default_instance_;
class DownloadingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadingRequest>
      _instance;
} _DownloadingRequest_default_instance_;
class DownloadingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadingResponse>
      _instance;
} _DownloadingResponse_default_instance_;
class DownloadedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadedRequest>
      _instance;
} _DownloadedRequest_default_instance_;
}  // namespace FileCenter
namespace protobuf_filecenter_2eproto {
static void InitDefaultsFileInfoItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_FileInfoItem_default_instance_;
    new (ptr) ::FileCenter::FileInfoItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::FileInfoItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileInfoItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileInfoItem}, {}};

static void InitDefaultsPrepareUploadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_PrepareUploadRequest_default_instance_;
    new (ptr) ::FileCenter::PrepareUploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::PrepareUploadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrepareUploadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrepareUploadRequest}, {
      &protobuf_filecenter_2eproto::scc_info_FileInfoItem.base,}};

static void InitDefaultsPrepareUploadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_PrepareUploadResponse_default_instance_;
    new (ptr) ::FileCenter::PrepareUploadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::PrepareUploadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrepareUploadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrepareUploadResponse}, {}};

static void InitDefaultsUploadingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_UploadingRequest_default_instance_;
    new (ptr) ::FileCenter::UploadingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::UploadingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadingRequest}, {}};

static void InitDefaultsUploadedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_UploadedRequest_default_instance_;
    new (ptr) ::FileCenter::UploadedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::UploadedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadedRequest}, {}};

static void InitDefaultsPrepareDownloadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_PrepareDownloadRequest_default_instance_;
    new (ptr) ::FileCenter::PrepareDownloadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::PrepareDownloadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrepareDownloadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrepareDownloadRequest}, {}};

static void InitDefaultsPrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse_default_instance_;
    new (ptr) ::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse();
  }
  ::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse}, {}};

static void InitDefaultsPrepareDownloadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_PrepareDownloadResponse_default_instance_;
    new (ptr) ::FileCenter::PrepareDownloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::PrepareDownloadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrepareDownloadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrepareDownloadResponse}, {
      &protobuf_filecenter_2eproto::scc_info_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse.base,}};

static void InitDefaultsDownloadingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_DownloadingRequest_default_instance_;
    new (ptr) ::FileCenter::DownloadingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::DownloadingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadingRequest}, {}};

static void InitDefaultsDownloadingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_DownloadingResponse_default_instance_;
    new (ptr) ::FileCenter::DownloadingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::DownloadingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadingResponse}, {}};

static void InitDefaultsDownloadedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileCenter::_DownloadedRequest_default_instance_;
    new (ptr) ::FileCenter::DownloadedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileCenter::DownloadedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadedRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfoItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareUploadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareUploadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareDownloadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrepareDownloadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadedRequest.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::FileInfoItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::FileInfoItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::FileInfoItem, hash_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::FileInfoItem, filesize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareUploadRequest, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareUploadResponse, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadingRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadingRequest, splitpackageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadingRequest, hash_md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::UploadedRequest, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadRequest, hash_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::PrepareDownloadResponse, splitpackageinfos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadingRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadingRequest, splitpackageid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadingResponse, hash_md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FileCenter::DownloadedRequest, token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FileCenter::FileInfoItem)},
  { 8, -1, sizeof(::FileCenter::PrepareUploadRequest)},
  { 14, -1, sizeof(::FileCenter::PrepareUploadResponse)},
  { 20, -1, sizeof(::FileCenter::UploadingRequest)},
  { 28, -1, sizeof(::FileCenter::UploadedRequest)},
  { 34, -1, sizeof(::FileCenter::PrepareDownloadRequest)},
  { 40, 47, sizeof(::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse)},
  { 49, -1, sizeof(::FileCenter::PrepareDownloadResponse)},
  { 57, -1, sizeof(::FileCenter::DownloadingRequest)},
  { 64, -1, sizeof(::FileCenter::DownloadingResponse)},
  { 70, -1, sizeof(::FileCenter::DownloadedRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_FileInfoItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_PrepareUploadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_PrepareUploadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_UploadingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_UploadedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_PrepareDownloadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_PrepareDownloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_DownloadingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_DownloadingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileCenter::_DownloadedRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "filecenter.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020filecenter.proto\022\nFileCenter\"@\n\014FileIn"
      "foItem\022\014\n\004Name\030\001 \001(\t\022\020\n\010Hash_MD5\030\002 \001(\t\022\020"
      "\n\010FileSize\030\003 \001(\005\">\n\024PrepareUploadRequest"
      "\022&\n\004info\030\001 \001(\0132\030.FileCenter.FileInfoItem"
      "\"&\n\025PrepareUploadResponse\022\r\n\005Token\030\001 \001(\t"
      "\"K\n\020UploadingRequest\022\r\n\005Token\030\001 \001(\t\022\026\n\016S"
      "plitPackageID\030\002 \001(\005\022\020\n\010Hash_MD5\030\003 \001(\t\" \n"
      "\017UploadedRequest\022\r\n\005Token\030\001 \001(\t\"*\n\026Prepa"
      "reDownloadRequest\022\020\n\010Hash_MD5\030\001 \001(\t\"\313\001\n\027"
      "PrepareDownloadResponse\022\r\n\005Token\030\001 \001(\t\022\020"
      "\n\010FileSize\030\002 \001(\005\022U\n\021SplitPackageInfos\030\003 "
      "\003(\0132:.FileCenter.PrepareDownloadResponse"
      ".SplitPackageInfosEntry\0328\n\026SplitPackageI"
      "nfosEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\";\n\022DownloadingRequest\022\r\n\005Token\030\001 \001(\t\022\026"
      "\n\016SplitPackageID\030\002 \001(\005\"\'\n\023DownloadingRes"
      "ponse\022\020\n\010Hash_MD5\030\001 \001(\t\"\"\n\021DownloadedReq"
      "uest\022\r\n\005Token\030\001 \001(\t*\246\001\n\tFunctions\022\013\n\007Inv"
      "alid\020\000\022\016\n\tTestSpeed\020\255\002\022\022\n\rPrepareUpload\020"
      "\256\002\022\016\n\tUploading\020\257\002\022\r\n\010Uploaded\020\260\002\022\024\n\017Pre"
      "pareDownload\020\261\002\022\020\n\013Downloading\020\262\002\022\017\n\nDow"
      "nloaded\020\263\002\"\005\010\001\020\254\002\"\t\010\220\003\020\377\377\377\377\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 876);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "filecenter.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_filecenter_2eproto
namespace FileCenter {
const ::google::protobuf::EnumDescriptor* Functions_descriptor() {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_filecenter_2eproto::file_level_enum_descriptors[0];
}
bool Functions_IsValid(int value) {
  switch (value) {
    case 0:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FileInfoItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoItem::kNameFieldNumber;
const int FileInfoItem::kHashMD5FieldNumber;
const int FileInfoItem::kFileSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoItem::FileInfoItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_FileInfoItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.FileInfoItem)
}
FileInfoItem::FileInfoItem(const FileInfoItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_md5().size() > 0) {
    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:FileCenter.FileInfoItem)
}

void FileInfoItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = 0;
}

FileInfoItem::~FileInfoItem() {
  // @@protoc_insertion_point(destructor:FileCenter.FileInfoItem)
  SharedDtor();
}

void FileInfoItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfoItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileInfoItem::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileInfoItem& FileInfoItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_FileInfoItem.base);
  return *internal_default_instance();
}


void FileInfoItem::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.FileInfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = 0;
  _internal_metadata_.Clear();
}

bool FileInfoItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.FileInfoItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.FileInfoItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Hash_MD5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.FileInfoItem.Hash_MD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FileSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.FileInfoItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.FileInfoItem)
  return false;
#undef DO_
}

void FileInfoItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.FileInfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.FileInfoItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Hash_MD5 = 2;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.FileInfoItem.Hash_MD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hash_md5(), output);
  }

  // int32 FileSize = 3;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->filesize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.FileInfoItem)
}

::google::protobuf::uint8* FileInfoItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.FileInfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.FileInfoItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Hash_MD5 = 2;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.FileInfoItem.Hash_MD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hash_md5(), target);
  }

  // int32 FileSize = 3;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->filesize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.FileInfoItem)
  return target;
}

size_t FileInfoItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.FileInfoItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Hash_MD5 = 2;
  if (this->hash_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_md5());
  }

  // int32 FileSize = 3;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileInfoItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.FileInfoItem)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.FileInfoItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.FileInfoItem)
    MergeFrom(*source);
  }
}

void FileInfoItem::MergeFrom(const FileInfoItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.FileInfoItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.hash_md5().size() > 0) {

    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
}

void FileInfoItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.FileInfoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoItem::CopyFrom(const FileInfoItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.FileInfoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoItem::IsInitialized() const {
  return true;
}

void FileInfoItem::Swap(FileInfoItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoItem::InternalSwap(FileInfoItem* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_md5_.Swap(&other->hash_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filesize_, other->filesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileInfoItem::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrepareUploadRequest::InitAsDefaultInstance() {
  ::FileCenter::_PrepareUploadRequest_default_instance_._instance.get_mutable()->info_ = const_cast< ::FileCenter::FileInfoItem*>(
      ::FileCenter::FileInfoItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareUploadRequest::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareUploadRequest::PrepareUploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_PrepareUploadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.PrepareUploadRequest)
}
PrepareUploadRequest::PrepareUploadRequest(const PrepareUploadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::FileCenter::FileInfoItem(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.PrepareUploadRequest)
}

void PrepareUploadRequest::SharedCtor() {
  info_ = NULL;
}

PrepareUploadRequest::~PrepareUploadRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.PrepareUploadRequest)
  SharedDtor();
}

void PrepareUploadRequest::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void PrepareUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareUploadRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareUploadRequest& PrepareUploadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_PrepareUploadRequest.base);
  return *internal_default_instance();
}


void PrepareUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.PrepareUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool PrepareUploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.PrepareUploadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .FileCenter.FileInfoItem info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.PrepareUploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.PrepareUploadRequest)
  return false;
#undef DO_
}

void PrepareUploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.PrepareUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FileCenter.FileInfoItem info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.PrepareUploadRequest)
}

::google::protobuf::uint8* PrepareUploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.PrepareUploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FileCenter.FileInfoItem info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.PrepareUploadRequest)
  return target;
}

size_t PrepareUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.PrepareUploadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FileCenter.FileInfoItem info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareUploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.PrepareUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareUploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareUploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.PrepareUploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.PrepareUploadRequest)
    MergeFrom(*source);
  }
}

void PrepareUploadRequest::MergeFrom(const PrepareUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.PrepareUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::FileCenter::FileInfoItem::MergeFrom(from.info());
  }
}

void PrepareUploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.PrepareUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareUploadRequest::CopyFrom(const PrepareUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.PrepareUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareUploadRequest::IsInitialized() const {
  return true;
}

void PrepareUploadRequest::Swap(PrepareUploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareUploadRequest::InternalSwap(PrepareUploadRequest* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareUploadRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrepareUploadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareUploadResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareUploadResponse::PrepareUploadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_PrepareUploadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.PrepareUploadResponse)
}
PrepareUploadResponse::PrepareUploadResponse(const PrepareUploadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.PrepareUploadResponse)
}

void PrepareUploadResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PrepareUploadResponse::~PrepareUploadResponse() {
  // @@protoc_insertion_point(destructor:FileCenter.PrepareUploadResponse)
  SharedDtor();
}

void PrepareUploadResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrepareUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareUploadResponse::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareUploadResponse& PrepareUploadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_PrepareUploadResponse.base);
  return *internal_default_instance();
}


void PrepareUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.PrepareUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PrepareUploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.PrepareUploadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.PrepareUploadResponse.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.PrepareUploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.PrepareUploadResponse)
  return false;
#undef DO_
}

void PrepareUploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.PrepareUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareUploadResponse.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.PrepareUploadResponse)
}

::google::protobuf::uint8* PrepareUploadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.PrepareUploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareUploadResponse.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.PrepareUploadResponse)
  return target;
}

size_t PrepareUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.PrepareUploadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareUploadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.PrepareUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareUploadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareUploadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.PrepareUploadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.PrepareUploadResponse)
    MergeFrom(*source);
  }
}

void PrepareUploadResponse::MergeFrom(const PrepareUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.PrepareUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void PrepareUploadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.PrepareUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareUploadResponse::CopyFrom(const PrepareUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.PrepareUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareUploadResponse::IsInitialized() const {
  return true;
}

void PrepareUploadResponse::Swap(PrepareUploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareUploadResponse::InternalSwap(PrepareUploadResponse* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareUploadResponse::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadingRequest::kTokenFieldNumber;
const int UploadingRequest::kSplitPackageIDFieldNumber;
const int UploadingRequest::kHashMD5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadingRequest::UploadingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_UploadingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.UploadingRequest)
}
UploadingRequest::UploadingRequest(const UploadingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_md5().size() > 0) {
    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  splitpackageid_ = from.splitpackageid_;
  // @@protoc_insertion_point(copy_constructor:FileCenter.UploadingRequest)
}

void UploadingRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  splitpackageid_ = 0;
}

UploadingRequest::~UploadingRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.UploadingRequest)
  SharedDtor();
}

void UploadingRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadingRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadingRequest& UploadingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_UploadingRequest.base);
  return *internal_default_instance();
}


void UploadingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.UploadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  splitpackageid_ = 0;
  _internal_metadata_.Clear();
}

bool UploadingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.UploadingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.UploadingRequest.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SplitPackageID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &splitpackageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Hash_MD5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.UploadingRequest.Hash_MD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.UploadingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.UploadingRequest)
  return false;
#undef DO_
}

void UploadingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.UploadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadingRequest.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->splitpackageid(), output);
  }

  // string Hash_MD5 = 3;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadingRequest.Hash_MD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hash_md5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.UploadingRequest)
}

::google::protobuf::uint8* UploadingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.UploadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadingRequest.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->splitpackageid(), target);
  }

  // string Hash_MD5 = 3;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadingRequest.Hash_MD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hash_md5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.UploadingRequest)
  return target;
}

size_t UploadingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.UploadingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string Hash_MD5 = 3;
  if (this->hash_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_md5());
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->splitpackageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.UploadingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.UploadingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.UploadingRequest)
    MergeFrom(*source);
  }
}

void UploadingRequest::MergeFrom(const UploadingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.UploadingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.hash_md5().size() > 0) {

    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  if (from.splitpackageid() != 0) {
    set_splitpackageid(from.splitpackageid());
  }
}

void UploadingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.UploadingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadingRequest::CopyFrom(const UploadingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.UploadingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadingRequest::IsInitialized() const {
  return true;
}

void UploadingRequest::Swap(UploadingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadingRequest::InternalSwap(UploadingRequest* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_md5_.Swap(&other->hash_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(splitpackageid_, other->splitpackageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadingRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadedRequest::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadedRequest::UploadedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_UploadedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.UploadedRequest)
}
UploadedRequest::UploadedRequest(const UploadedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.UploadedRequest)
}

void UploadedRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UploadedRequest::~UploadedRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.UploadedRequest)
  SharedDtor();
}

void UploadedRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadedRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadedRequest& UploadedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_UploadedRequest.base);
  return *internal_default_instance();
}


void UploadedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.UploadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UploadedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.UploadedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.UploadedRequest.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.UploadedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.UploadedRequest)
  return false;
#undef DO_
}

void UploadedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.UploadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadedRequest.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.UploadedRequest)
}

::google::protobuf::uint8* UploadedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.UploadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.UploadedRequest.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.UploadedRequest)
  return target;
}

size_t UploadedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.UploadedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.UploadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.UploadedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.UploadedRequest)
    MergeFrom(*source);
  }
}

void UploadedRequest::MergeFrom(const UploadedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.UploadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void UploadedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.UploadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadedRequest::CopyFrom(const UploadedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.UploadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadedRequest::IsInitialized() const {
  return true;
}

void UploadedRequest::Swap(UploadedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadedRequest::InternalSwap(UploadedRequest* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadedRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrepareDownloadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareDownloadRequest::kHashMD5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareDownloadRequest::PrepareDownloadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_PrepareDownloadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.PrepareDownloadRequest)
}
PrepareDownloadRequest::PrepareDownloadRequest(const PrepareDownloadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_md5().size() > 0) {
    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.PrepareDownloadRequest)
}

void PrepareDownloadRequest::SharedCtor() {
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PrepareDownloadRequest::~PrepareDownloadRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.PrepareDownloadRequest)
  SharedDtor();
}

void PrepareDownloadRequest::SharedDtor() {
  hash_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrepareDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareDownloadRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareDownloadRequest& PrepareDownloadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_PrepareDownloadRequest.base);
  return *internal_default_instance();
}


void PrepareDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.PrepareDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PrepareDownloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.PrepareDownloadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Hash_MD5 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.PrepareDownloadRequest.Hash_MD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.PrepareDownloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.PrepareDownloadRequest)
  return false;
#undef DO_
}

void PrepareDownloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.PrepareDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareDownloadRequest.Hash_MD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash_md5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.PrepareDownloadRequest)
}

::google::protobuf::uint8* PrepareDownloadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.PrepareDownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareDownloadRequest.Hash_MD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash_md5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.PrepareDownloadRequest)
  return target;
}

size_t PrepareDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.PrepareDownloadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareDownloadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.PrepareDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareDownloadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareDownloadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.PrepareDownloadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.PrepareDownloadRequest)
    MergeFrom(*source);
  }
}

void PrepareDownloadRequest::MergeFrom(const PrepareDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.PrepareDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash_md5().size() > 0) {

    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
}

void PrepareDownloadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.PrepareDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareDownloadRequest::CopyFrom(const PrepareDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.PrepareDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareDownloadRequest::IsInitialized() const {
  return true;
}

void PrepareDownloadRequest::Swap(PrepareDownloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareDownloadRequest::InternalSwap(PrepareDownloadRequest* other) {
  using std::swap;
  hash_md5_.Swap(&other->hash_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareDownloadRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse() {}
PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::MergeFrom(const PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::GetMetadata() const {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[6];
}
void PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PrepareDownloadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareDownloadResponse::kTokenFieldNumber;
const int PrepareDownloadResponse::kFileSizeFieldNumber;
const int PrepareDownloadResponse::kSplitPackageInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareDownloadResponse::PrepareDownloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_PrepareDownloadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.PrepareDownloadResponse)
}
PrepareDownloadResponse::PrepareDownloadResponse(const PrepareDownloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  splitpackageinfos_.MergeFrom(from.splitpackageinfos_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:FileCenter.PrepareDownloadResponse)
}

void PrepareDownloadResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = 0;
}

PrepareDownloadResponse::~PrepareDownloadResponse() {
  // @@protoc_insertion_point(destructor:FileCenter.PrepareDownloadResponse)
  SharedDtor();
}

void PrepareDownloadResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrepareDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrepareDownloadResponse::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrepareDownloadResponse& PrepareDownloadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_PrepareDownloadResponse.base);
  return *internal_default_instance();
}


void PrepareDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.PrepareDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  splitpackageinfos_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = 0;
  _internal_metadata_.Clear();
}

bool PrepareDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.PrepareDownloadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.PrepareDownloadResponse.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FileSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, string> SplitPackageInfos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&splitpackageinfos_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.PrepareDownloadResponse.SplitPackageInfosEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.PrepareDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.PrepareDownloadResponse)
  return false;
#undef DO_
}

void PrepareDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.PrepareDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareDownloadResponse.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 FileSize = 2;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->filesize(), output);
  }

  // map<int32, string> SplitPackageInfos = 3;
  if (!this->splitpackageinfos().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "FileCenter.PrepareDownloadResponse.SplitPackageInfosEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->splitpackageinfos().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->splitpackageinfos().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->splitpackageinfos().begin();
          it != this->splitpackageinfos().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(splitpackageinfos_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->splitpackageinfos().begin();
          it != this->splitpackageinfos().end(); ++it) {
        entry.reset(splitpackageinfos_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.PrepareDownloadResponse)
}

::google::protobuf::uint8* PrepareDownloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.PrepareDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.PrepareDownloadResponse.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 FileSize = 2;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->filesize(), target);
  }

  // map<int32, string> SplitPackageInfos = 3;
  if (!this->splitpackageinfos().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "FileCenter.PrepareDownloadResponse.SplitPackageInfosEntry.value");
      }
    };

    if (deterministic &&
        this->splitpackageinfos().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->splitpackageinfos().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->splitpackageinfos().begin();
          it != this->splitpackageinfos().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(splitpackageinfos_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->splitpackageinfos().begin();
          it != this->splitpackageinfos().end(); ++it) {
        entry.reset(splitpackageinfos_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.PrepareDownloadResponse)
  return target;
}

size_t PrepareDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.PrepareDownloadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, string> SplitPackageInfos = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->splitpackageinfos_size());
  {
    ::std::unique_ptr<PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->splitpackageinfos().begin();
        it != this->splitpackageinfos().end(); ++it) {
      entry.reset(splitpackageinfos_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // int32 FileSize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrepareDownloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.PrepareDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PrepareDownloadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareDownloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.PrepareDownloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.PrepareDownloadResponse)
    MergeFrom(*source);
  }
}

void PrepareDownloadResponse::MergeFrom(const PrepareDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.PrepareDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  splitpackageinfos_.MergeFrom(from.splitpackageinfos_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
}

void PrepareDownloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.PrepareDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareDownloadResponse::CopyFrom(const PrepareDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.PrepareDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareDownloadResponse::IsInitialized() const {
  return true;
}

void PrepareDownloadResponse::Swap(PrepareDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareDownloadResponse::InternalSwap(PrepareDownloadResponse* other) {
  using std::swap;
  splitpackageinfos_.Swap(&other->splitpackageinfos_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filesize_, other->filesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrepareDownloadResponse::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadingRequest::kTokenFieldNumber;
const int DownloadingRequest::kSplitPackageIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadingRequest::DownloadingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_DownloadingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.DownloadingRequest)
}
DownloadingRequest::DownloadingRequest(const DownloadingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  splitpackageid_ = from.splitpackageid_;
  // @@protoc_insertion_point(copy_constructor:FileCenter.DownloadingRequest)
}

void DownloadingRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  splitpackageid_ = 0;
}

DownloadingRequest::~DownloadingRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.DownloadingRequest)
  SharedDtor();
}

void DownloadingRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadingRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadingRequest& DownloadingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_DownloadingRequest.base);
  return *internal_default_instance();
}


void DownloadingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.DownloadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  splitpackageid_ = 0;
  _internal_metadata_.Clear();
}

bool DownloadingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.DownloadingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.DownloadingRequest.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SplitPackageID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &splitpackageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.DownloadingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.DownloadingRequest)
  return false;
#undef DO_
}

void DownloadingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.DownloadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadingRequest.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->splitpackageid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.DownloadingRequest)
}

::google::protobuf::uint8* DownloadingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.DownloadingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadingRequest.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->splitpackageid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.DownloadingRequest)
  return target;
}

size_t DownloadingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.DownloadingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // int32 SplitPackageID = 2;
  if (this->splitpackageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->splitpackageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.DownloadingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.DownloadingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.DownloadingRequest)
    MergeFrom(*source);
  }
}

void DownloadingRequest::MergeFrom(const DownloadingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.DownloadingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.splitpackageid() != 0) {
    set_splitpackageid(from.splitpackageid());
  }
}

void DownloadingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.DownloadingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadingRequest::CopyFrom(const DownloadingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.DownloadingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadingRequest::IsInitialized() const {
  return true;
}

void DownloadingRequest::Swap(DownloadingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadingRequest::InternalSwap(DownloadingRequest* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(splitpackageid_, other->splitpackageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadingRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadingResponse::kHashMD5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadingResponse::DownloadingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_DownloadingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.DownloadingResponse)
}
DownloadingResponse::DownloadingResponse(const DownloadingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_md5().size() > 0) {
    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.DownloadingResponse)
}

void DownloadingResponse::SharedCtor() {
  hash_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DownloadingResponse::~DownloadingResponse() {
  // @@protoc_insertion_point(destructor:FileCenter.DownloadingResponse)
  SharedDtor();
}

void DownloadingResponse::SharedDtor() {
  hash_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadingResponse::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadingResponse& DownloadingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_DownloadingResponse.base);
  return *internal_default_instance();
}


void DownloadingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.DownloadingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DownloadingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.DownloadingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Hash_MD5 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.DownloadingResponse.Hash_MD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.DownloadingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.DownloadingResponse)
  return false;
#undef DO_
}

void DownloadingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.DownloadingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadingResponse.Hash_MD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash_md5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.DownloadingResponse)
}

::google::protobuf::uint8* DownloadingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.DownloadingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_md5().data(), static_cast<int>(this->hash_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadingResponse.Hash_MD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash_md5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.DownloadingResponse)
  return target;
}

size_t DownloadingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.DownloadingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Hash_MD5 = 1;
  if (this->hash_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.DownloadingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.DownloadingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.DownloadingResponse)
    MergeFrom(*source);
  }
}

void DownloadingResponse::MergeFrom(const DownloadingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.DownloadingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash_md5().size() > 0) {

    hash_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_md5_);
  }
}

void DownloadingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.DownloadingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadingResponse::CopyFrom(const DownloadingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.DownloadingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadingResponse::IsInitialized() const {
  return true;
}

void DownloadingResponse::Swap(DownloadingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadingResponse::InternalSwap(DownloadingResponse* other) {
  using std::swap;
  hash_md5_.Swap(&other->hash_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadingResponse::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadedRequest::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadedRequest::DownloadedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_filecenter_2eproto::scc_info_DownloadedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileCenter.DownloadedRequest)
}
DownloadedRequest::DownloadedRequest(const DownloadedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:FileCenter.DownloadedRequest)
}

void DownloadedRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DownloadedRequest::~DownloadedRequest() {
  // @@protoc_insertion_point(destructor:FileCenter.DownloadedRequest)
  SharedDtor();
}

void DownloadedRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadedRequest::descriptor() {
  ::protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadedRequest& DownloadedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_filecenter_2eproto::scc_info_DownloadedRequest.base);
  return *internal_default_instance();
}


void DownloadedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileCenter.DownloadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DownloadedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileCenter.DownloadedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileCenter.DownloadedRequest.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileCenter.DownloadedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileCenter.DownloadedRequest)
  return false;
#undef DO_
}

void DownloadedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileCenter.DownloadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadedRequest.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FileCenter.DownloadedRequest)
}

::google::protobuf::uint8* DownloadedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileCenter.DownloadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileCenter.DownloadedRequest.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileCenter.DownloadedRequest)
  return target;
}

size_t DownloadedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileCenter.DownloadedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileCenter.DownloadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileCenter.DownloadedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileCenter.DownloadedRequest)
    MergeFrom(*source);
  }
}

void DownloadedRequest::MergeFrom(const DownloadedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileCenter.DownloadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void DownloadedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileCenter.DownloadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadedRequest::CopyFrom(const DownloadedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileCenter.DownloadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadedRequest::IsInitialized() const {
  return true;
}

void DownloadedRequest::Swap(DownloadedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadedRequest::InternalSwap(DownloadedRequest* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadedRequest::GetMetadata() const {
  protobuf_filecenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_filecenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FileCenter
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::FileInfoItem* Arena::CreateMaybeMessage< ::FileCenter::FileInfoItem >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::FileInfoItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::PrepareUploadRequest* Arena::CreateMaybeMessage< ::FileCenter::PrepareUploadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::PrepareUploadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::PrepareUploadResponse* Arena::CreateMaybeMessage< ::FileCenter::PrepareUploadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::PrepareUploadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::UploadingRequest* Arena::CreateMaybeMessage< ::FileCenter::UploadingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::UploadingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::UploadedRequest* Arena::CreateMaybeMessage< ::FileCenter::UploadedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::UploadedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::PrepareDownloadRequest* Arena::CreateMaybeMessage< ::FileCenter::PrepareDownloadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::PrepareDownloadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse* Arena::CreateMaybeMessage< ::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::PrepareDownloadResponse_SplitPackageInfosEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::PrepareDownloadResponse* Arena::CreateMaybeMessage< ::FileCenter::PrepareDownloadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::PrepareDownloadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::DownloadingRequest* Arena::CreateMaybeMessage< ::FileCenter::DownloadingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::DownloadingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::DownloadingResponse* Arena::CreateMaybeMessage< ::FileCenter::DownloadingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::DownloadingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FileCenter::DownloadedRequest* Arena::CreateMaybeMessage< ::FileCenter::DownloadedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::FileCenter::DownloadedRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
