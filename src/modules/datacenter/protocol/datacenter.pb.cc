// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datacenter.proto

#include "datacenter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace DataCenter {
class RunSQLRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunSQLRequest>
      _instance;
} _RunSQLRequest_default_instance_;
class RunSQLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunSQLResponse>
      _instance;
} _RunSQLResponse_default_instance_;
}  // namespace DataCenter
namespace protobuf_datacenter_2eproto {
static void InitDefaultsRunSQLRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataCenter::_RunSQLRequest_default_instance_;
    new (ptr) ::DataCenter::RunSQLRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataCenter::RunSQLRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunSQLRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunSQLRequest}, {}};

static void InitDefaultsRunSQLResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataCenter::_RunSQLResponse_default_instance_;
    new (ptr) ::DataCenter::RunSQLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataCenter::RunSQLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunSQLResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunSQLResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RunSQLRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunSQLResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataCenter::RunSQLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataCenter::RunSQLRequest, sqlcmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataCenter::RunSQLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataCenter::RunSQLResponse, affectedrows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataCenter::RunSQLResponse, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DataCenter::RunSQLRequest)},
  { 6, -1, sizeof(::DataCenter::RunSQLResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataCenter::_RunSQLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataCenter::_RunSQLResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "datacenter.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020datacenter.proto\022\nDataCenter\"\037\n\rRunSQL"
      "Request\022\016\n\006SQLCMD\030\001 \001(\t\"7\n\016RunSQLRespons"
      "e\022\024\n\014AffectedRows\030\001 \001(\005\022\017\n\007Results\030\002 \003(\t"
      "*7\n\tFunctions\022\013\n\007Invalid\020\000\022\013\n\006RunSQL\020\311\001\""
      "\005\010\001\020\310\001\"\t\010\254\002\020\377\377\377\377\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 185);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datacenter.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datacenter_2eproto
namespace DataCenter {
const ::google::protobuf::EnumDescriptor* Functions_descriptor() {
  protobuf_datacenter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_datacenter_2eproto::file_level_enum_descriptors[0];
}
bool Functions_IsValid(int value) {
  switch (value) {
    case 0:
    case 201:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RunSQLRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunSQLRequest::kSQLCMDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunSQLRequest::RunSQLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datacenter_2eproto::scc_info_RunSQLRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataCenter.RunSQLRequest)
}
RunSQLRequest::RunSQLRequest(const RunSQLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sqlcmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sqlcmd().size() > 0) {
    sqlcmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sqlcmd_);
  }
  // @@protoc_insertion_point(copy_constructor:DataCenter.RunSQLRequest)
}

void RunSQLRequest::SharedCtor() {
  sqlcmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RunSQLRequest::~RunSQLRequest() {
  // @@protoc_insertion_point(destructor:DataCenter.RunSQLRequest)
  SharedDtor();
}

void RunSQLRequest::SharedDtor() {
  sqlcmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunSQLRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunSQLRequest::descriptor() {
  ::protobuf_datacenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datacenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunSQLRequest& RunSQLRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datacenter_2eproto::scc_info_RunSQLRequest.base);
  return *internal_default_instance();
}


void RunSQLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataCenter.RunSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sqlcmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RunSQLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataCenter.RunSQLRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string SQLCMD = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sqlcmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sqlcmd().data(), static_cast<int>(this->sqlcmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataCenter.RunSQLRequest.SQLCMD"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataCenter.RunSQLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataCenter.RunSQLRequest)
  return false;
#undef DO_
}

void RunSQLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataCenter.RunSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SQLCMD = 1;
  if (this->sqlcmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sqlcmd().data(), static_cast<int>(this->sqlcmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataCenter.RunSQLRequest.SQLCMD");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sqlcmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataCenter.RunSQLRequest)
}

::google::protobuf::uint8* RunSQLRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataCenter.RunSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SQLCMD = 1;
  if (this->sqlcmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sqlcmd().data(), static_cast<int>(this->sqlcmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataCenter.RunSQLRequest.SQLCMD");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sqlcmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataCenter.RunSQLRequest)
  return target;
}

size_t RunSQLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataCenter.RunSQLRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SQLCMD = 1;
  if (this->sqlcmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sqlcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunSQLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataCenter.RunSQLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunSQLRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunSQLRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataCenter.RunSQLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataCenter.RunSQLRequest)
    MergeFrom(*source);
  }
}

void RunSQLRequest::MergeFrom(const RunSQLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataCenter.RunSQLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sqlcmd().size() > 0) {

    sqlcmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sqlcmd_);
  }
}

void RunSQLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataCenter.RunSQLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunSQLRequest::CopyFrom(const RunSQLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataCenter.RunSQLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunSQLRequest::IsInitialized() const {
  return true;
}

void RunSQLRequest::Swap(RunSQLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunSQLRequest::InternalSwap(RunSQLRequest* other) {
  using std::swap;
  sqlcmd_.Swap(&other->sqlcmd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunSQLRequest::GetMetadata() const {
  protobuf_datacenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datacenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunSQLResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunSQLResponse::kAffectedRowsFieldNumber;
const int RunSQLResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunSQLResponse::RunSQLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datacenter_2eproto::scc_info_RunSQLResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataCenter.RunSQLResponse)
}
RunSQLResponse::RunSQLResponse(const RunSQLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  affectedrows_ = from.affectedrows_;
  // @@protoc_insertion_point(copy_constructor:DataCenter.RunSQLResponse)
}

void RunSQLResponse::SharedCtor() {
  affectedrows_ = 0;
}

RunSQLResponse::~RunSQLResponse() {
  // @@protoc_insertion_point(destructor:DataCenter.RunSQLResponse)
  SharedDtor();
}

void RunSQLResponse::SharedDtor() {
}

void RunSQLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunSQLResponse::descriptor() {
  ::protobuf_datacenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datacenter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunSQLResponse& RunSQLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datacenter_2eproto::scc_info_RunSQLResponse.base);
  return *internal_default_instance();
}


void RunSQLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DataCenter.RunSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  affectedrows_ = 0;
  _internal_metadata_.Clear();
}

bool RunSQLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataCenter.RunSQLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 AffectedRows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &affectedrows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_results()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results(this->results_size() - 1).data(),
            static_cast<int>(this->results(this->results_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataCenter.RunSQLResponse.Results"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataCenter.RunSQLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataCenter.RunSQLResponse)
  return false;
#undef DO_
}

void RunSQLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataCenter.RunSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 AffectedRows = 1;
  if (this->affectedrows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->affectedrows(), output);
  }

  // repeated string Results = 2;
  for (int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results(i).data(), static_cast<int>(this->results(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataCenter.RunSQLResponse.Results");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->results(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataCenter.RunSQLResponse)
}

::google::protobuf::uint8* RunSQLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataCenter.RunSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 AffectedRows = 1;
  if (this->affectedrows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->affectedrows(), target);
  }

  // repeated string Results = 2;
  for (int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results(i).data(), static_cast<int>(this->results(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataCenter.RunSQLResponse.Results");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->results(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataCenter.RunSQLResponse)
  return target;
}

size_t RunSQLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataCenter.RunSQLResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Results = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->results_size());
  for (int i = 0, n = this->results_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->results(i));
  }

  // int32 AffectedRows = 1;
  if (this->affectedrows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affectedrows());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunSQLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataCenter.RunSQLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunSQLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunSQLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataCenter.RunSQLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataCenter.RunSQLResponse)
    MergeFrom(*source);
  }
}

void RunSQLResponse::MergeFrom(const RunSQLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataCenter.RunSQLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.affectedrows() != 0) {
    set_affectedrows(from.affectedrows());
  }
}

void RunSQLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataCenter.RunSQLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunSQLResponse::CopyFrom(const RunSQLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataCenter.RunSQLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunSQLResponse::IsInitialized() const {
  return true;
}

void RunSQLResponse::Swap(RunSQLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunSQLResponse::InternalSwap(RunSQLResponse* other) {
  using std::swap;
  results_.InternalSwap(CastToBase(&other->results_));
  swap(affectedrows_, other->affectedrows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunSQLResponse::GetMetadata() const {
  protobuf_datacenter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datacenter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DataCenter
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataCenter::RunSQLRequest* Arena::CreateMaybeMessage< ::DataCenter::RunSQLRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DataCenter::RunSQLRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataCenter::RunSQLResponse* Arena::CreateMaybeMessage< ::DataCenter::RunSQLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DataCenter::RunSQLResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
