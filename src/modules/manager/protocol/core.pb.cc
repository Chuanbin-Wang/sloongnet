// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#include "core.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_core_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_core_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GLOBAL_CONFIG;
}  // namespace protobuf_core_2eproto
namespace Core {
class GLOBAL_CONFIGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GLOBAL_CONFIG>
      _instance;
} _GLOBAL_CONFIG_default_instance_;
class RuntimeDataPackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeDataPackage>
      _instance;
} _RuntimeDataPackage_default_instance_;
}  // namespace Core
namespace protobuf_core_2eproto {
static void InitDefaultsGLOBAL_CONFIG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Core::_GLOBAL_CONFIG_default_instance_;
    new (ptr) ::Core::GLOBAL_CONFIG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Core::GLOBAL_CONFIG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GLOBAL_CONFIG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGLOBAL_CONFIG}, {}};

static void InitDefaultsRuntimeDataPackage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Core::_RuntimeDataPackage_default_instance_;
    new (ptr) ::Core::RuntimeDataPackage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Core::RuntimeDataPackage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RuntimeDataPackage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRuntimeDataPackage}, {
      &protobuf_core_2eproto::scc_info_GLOBAL_CONFIG.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GLOBAL_CONFIG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RuntimeDataPackage.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, listenaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, listenport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, logpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, loglevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, logoperation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, mqthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, epollthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, processthreadquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, prioritysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, connecttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, receivetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, modulename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, moduletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, modulepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, moduleconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, modulereference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, modulefunctoins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, enablessl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, certfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, keyfilepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::GLOBAL_CONFIG, certpasswd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, manageraddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, managerport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, nodeuuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Core::RuntimeDataPackage, templateconfig_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Core::GLOBAL_CONFIG)},
  { 26, -1, sizeof(::Core::RuntimeDataPackage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Core::_GLOBAL_CONFIG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Core::_RuntimeDataPackage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "core.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ncore.proto\022\004Core\"\206\005\n\rGLOBAL_CONFIG\022\025\n\r"
      "ListenAddress\030\001 \001(\t\022\022\n\nListenPort\030\002 \001(\005\022"
      "\017\n\007LogPath\030\003 \001(\t\022 \n\010LogLevel\030\004 \001(\0162\016.Cor"
      "e.LogLevel\022\024\n\014LogOperation\030\005 \001(\005\022\030\n\020MQTh"
      "readQuantity\030\006 \001(\005\022\033\n\023EPollThreadQuantit"
      "y\030\007 \001(\005\022\035\n\025ProcessThreadQuantity\030\010 \001(\005\022\024"
      "\n\014PrioritySize\030\t \001(\005\022\023\n\013ConnectTime\030\n \001("
      "\005\022\023\n\013ReceiveTime\030\013 \001(\005\022\022\n\nModuleName\030\014 \001"
      "(\t\0223\n\nModuleType\030\r \001(\0162\037.Core.GLOBAL_CON"
      "FIG.MODULE_TYPE\022\022\n\nModulePath\030\016 \001(\t\022\024\n\014M"
      "oduleConfig\030\017 \001(\014\022\027\n\017ModuleReference\030\020 \001"
      "(\t\022\027\n\017ModuleFunctoins\030\021 \001(\t\022\021\n\tEnableSSL"
      "\030\022 \001(\010\022\024\n\014CertFilePath\030\023 \001(\t\022\023\n\013KeyFileP"
      "ath\030\024 \001(\t\022\022\n\nCertPasswd\030\025 \001(\t\"t\n\013MODULE_"
      "TYPE\022\013\n\007Manager\020\000\022\016\n\nAuthCenter\020\001\022\016\n\nDat"
      "aCenter\020\002\022\016\n\nFileCenter\020\003\022\014\n\010Firewall\020\004\022"
      "\013\n\007Gateway\020\005\022\r\n\tProcesser\020\006\"\224\001\n\022RuntimeD"
      "ataPackage\022\026\n\016ManagerAddress\030\001 \001(\t\022\023\n\013Ma"
      "nagerPort\030\002 \001(\005\022\022\n\nTemplateID\030\003 \001(\005\022\020\n\010N"
      "odeUUID\030\004 \001(\006\022+\n\016TemplateConfig\030\005 \001(\0132\023."
      "Core.GLOBAL_CONFIG*^\n\010LogLevel\022\007\n\003All\020\000\022"
      "\n\n\006Verbos\020\001\022\t\n\005Debug\020\002\022\010\n\004Info\020\003\022\010\n\004Warn"
      "\020\004\022\007\n\003Err\020\005\022\n\n\006Assert\020\006\022\t\n\005Fatal\020\007*s\n\tDA"
      "TA_ITEM\022\026\n\022ServerConfiguation\020\000\022\026\n\022Modul"
      "eConfiguation\020\001\022\n\n\006Logger\020\002\022\017\n\013RuntimeDa"
      "ta\020\003\022\031\n\025ReferenceTemplateInfo\020\004*\330\001\n\nEVEN"
      "T_TYPE\022\020\n\014ProgramStart\020\000\022\017\n\013ProgramStop\020"
      "\001\022\022\n\016ProgramRestart\020\002\022\017\n\013SocketClose\020\003\022\017"
      "\n\013SendPackage\020\004\022\025\n\021MonitorSendStatus\020\005\022\026"
      "\n\022EnableTimeoutCheck\020\006\022\025\n\021EnableClientCh"
      "eck\020\007\022\024\n\020ReloadLuaContext\020\010\022\025\n\021RegisteCo"
      "nnection\020\t*C\n\016PRIORITY_LEVEL\022\020\n\014HEIGHT_L"
      "EVEL\020\000\022\020\n\014NORMAL_LEVEL\020\001\022\r\n\tLOW_LEVEL\020\002*"
      "7\n\014ControlEvent\022\020\n\014InvalidEvent\020\000\022\013\n\007Res"
      "tart\020\001\022\010\n\004Stop\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1384);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "core.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_core_2eproto
namespace Core {
const ::google::protobuf::EnumDescriptor* GLOBAL_CONFIG_MODULE_TYPE_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[0];
}
bool GLOBAL_CONFIG_MODULE_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::Manager;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::AuthCenter;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::DataCenter;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::FileCenter;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::Firewall;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::Gateway;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::Processer;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::MODULE_TYPE_MIN;
const GLOBAL_CONFIG_MODULE_TYPE GLOBAL_CONFIG::MODULE_TYPE_MAX;
const int GLOBAL_CONFIG::MODULE_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogLevel_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[1];
}
bool LogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DATA_ITEM_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[2];
}
bool DATA_ITEM_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EVENT_TYPE_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[3];
}
bool EVENT_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PRIORITY_LEVEL_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[4];
}
bool PRIORITY_LEVEL_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ControlEvent_descriptor() {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_core_2eproto::file_level_enum_descriptors[5];
}
bool ControlEvent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GLOBAL_CONFIG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GLOBAL_CONFIG::kListenAddressFieldNumber;
const int GLOBAL_CONFIG::kListenPortFieldNumber;
const int GLOBAL_CONFIG::kLogPathFieldNumber;
const int GLOBAL_CONFIG::kLogLevelFieldNumber;
const int GLOBAL_CONFIG::kLogOperationFieldNumber;
const int GLOBAL_CONFIG::kMQThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kEPollThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kProcessThreadQuantityFieldNumber;
const int GLOBAL_CONFIG::kPrioritySizeFieldNumber;
const int GLOBAL_CONFIG::kConnectTimeFieldNumber;
const int GLOBAL_CONFIG::kReceiveTimeFieldNumber;
const int GLOBAL_CONFIG::kModuleNameFieldNumber;
const int GLOBAL_CONFIG::kModuleTypeFieldNumber;
const int GLOBAL_CONFIG::kModulePathFieldNumber;
const int GLOBAL_CONFIG::kModuleConfigFieldNumber;
const int GLOBAL_CONFIG::kModuleReferenceFieldNumber;
const int GLOBAL_CONFIG::kModuleFunctoinsFieldNumber;
const int GLOBAL_CONFIG::kEnableSSLFieldNumber;
const int GLOBAL_CONFIG::kCertFilePathFieldNumber;
const int GLOBAL_CONFIG::kKeyFilePathFieldNumber;
const int GLOBAL_CONFIG::kCertPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GLOBAL_CONFIG::GLOBAL_CONFIG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_core_2eproto::scc_info_GLOBAL_CONFIG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Core.GLOBAL_CONFIG)
}
GLOBAL_CONFIG::GLOBAL_CONFIG(const GLOBAL_CONFIG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  listenaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.listenaddress().size() > 0) {
    listenaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listenaddress_);
  }
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logpath().size() > 0) {
    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  modulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulename().size() > 0) {
    modulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulename_);
  }
  modulepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulepath().size() > 0) {
    modulepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulepath_);
  }
  moduleconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.moduleconfig().size() > 0) {
    moduleconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleconfig_);
  }
  modulereference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulereference().size() > 0) {
    modulereference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulereference_);
  }
  modulefunctoins_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modulefunctoins().size() > 0) {
    modulefunctoins_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulefunctoins_);
  }
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certfilepath().size() > 0) {
    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyfilepath().size() > 0) {
    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certpasswd().size() > 0) {
    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  ::memcpy(&listenport_, &from.listenport_,
    static_cast<size_t>(reinterpret_cast<char*>(&enablessl_) -
    reinterpret_cast<char*>(&listenport_)) + sizeof(enablessl_));
  // @@protoc_insertion_point(copy_constructor:Core.GLOBAL_CONFIG)
}

void GLOBAL_CONFIG::SharedCtor() {
  listenaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulefunctoins_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enablessl_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(enablessl_));
}

GLOBAL_CONFIG::~GLOBAL_CONFIG() {
  // @@protoc_insertion_point(destructor:Core.GLOBAL_CONFIG)
  SharedDtor();
}

void GLOBAL_CONFIG::SharedDtor() {
  listenaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulefunctoins_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GLOBAL_CONFIG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GLOBAL_CONFIG::descriptor() {
  ::protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GLOBAL_CONFIG& GLOBAL_CONFIG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_core_2eproto::scc_info_GLOBAL_CONFIG.base);
  return *internal_default_instance();
}


void GLOBAL_CONFIG::Clear() {
// @@protoc_insertion_point(message_clear_start:Core.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listenaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduleconfig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulereference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modulefunctoins_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listenport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enablessl_) -
      reinterpret_cast<char*>(&listenport_)) + sizeof(enablessl_));
  _internal_metadata_.Clear();
}

bool GLOBAL_CONFIG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Core.GLOBAL_CONFIG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ListenAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listenaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listenaddress().data(), static_cast<int>(this->listenaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.ListenAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ListenPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listenport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LogPath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logpath().data(), static_cast<int>(this->logpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.LogPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Core.LogLevel LogLevel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loglevel(static_cast< ::Core::LogLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LogOperation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logoperation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MQThreadQuantity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EPollThreadQuantity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epollthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ProcessThreadQuantity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processthreadquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PrioritySize = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prioritysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ConnectTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connecttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ReceiveTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModuleName = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulename().data(), static_cast<int>(this->modulename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.ModuleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Core.GLOBAL_CONFIG.MODULE_TYPE ModuleType = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_moduletype(static_cast< ::Core::GLOBAL_CONFIG_MODULE_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModulePath = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulepath().data(), static_cast<int>(this->modulepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.ModulePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ModuleConfig = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_moduleconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModuleReference = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulereference()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulereference().data(), static_cast<int>(this->modulereference().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.ModuleReference"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ModuleFunctoins = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modulefunctoins()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modulefunctoins().data(), static_cast<int>(this->modulefunctoins().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.ModuleFunctoins"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool EnableSSL = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablessl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertFilePath = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.CertFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyFilePath = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyfilepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.KeyFilePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CertPasswd = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.GLOBAL_CONFIG.CertPasswd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Core.GLOBAL_CONFIG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Core.GLOBAL_CONFIG)
  return false;
#undef DO_
}

void GLOBAL_CONFIG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Core.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ListenAddress = 1;
  if (this->listenaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listenaddress().data(), static_cast<int>(this->listenaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ListenAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->listenaddress(), output);
  }

  // int32 ListenPort = 2;
  if (this->listenport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->listenport(), output);
  }

  // string LogPath = 3;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.LogPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logpath(), output);
  }

  // .Core.LogLevel LogLevel = 4;
  if (this->loglevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->loglevel(), output);
  }

  // int32 LogOperation = 5;
  if (this->logoperation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->logoperation(), output);
  }

  // int32 MQThreadQuantity = 6;
  if (this->mqthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mqthreadquantity(), output);
  }

  // int32 EPollThreadQuantity = 7;
  if (this->epollthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->epollthreadquantity(), output);
  }

  // int32 ProcessThreadQuantity = 8;
  if (this->processthreadquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->processthreadquantity(), output);
  }

  // int32 PrioritySize = 9;
  if (this->prioritysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->prioritysize(), output);
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->connecttime(), output);
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->receivetime(), output);
  }

  // string ModuleName = 12;
  if (this->modulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulename().data(), static_cast<int>(this->modulename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->modulename(), output);
  }

  // .Core.GLOBAL_CONFIG.MODULE_TYPE ModuleType = 13;
  if (this->moduletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->moduletype(), output);
  }

  // string ModulePath = 14;
  if (this->modulepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulepath().data(), static_cast<int>(this->modulepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModulePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->modulepath(), output);
  }

  // bytes ModuleConfig = 15;
  if (this->moduleconfig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->moduleconfig(), output);
  }

  // string ModuleReference = 16;
  if (this->modulereference().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulereference().data(), static_cast<int>(this->modulereference().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleReference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->modulereference(), output);
  }

  // string ModuleFunctoins = 17;
  if (this->modulefunctoins().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulefunctoins().data(), static_cast<int>(this->modulefunctoins().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleFunctoins");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->modulefunctoins(), output);
  }

  // bool EnableSSL = 18;
  if (this->enablessl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->enablessl(), output);
  }

  // string CertFilePath = 19;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.CertFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->certfilepath(), output);
  }

  // string KeyFilePath = 20;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.KeyFilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->keyfilepath(), output);
  }

  // string CertPasswd = 21;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.CertPasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->certpasswd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Core.GLOBAL_CONFIG)
}

::google::protobuf::uint8* GLOBAL_CONFIG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Core.GLOBAL_CONFIG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ListenAddress = 1;
  if (this->listenaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listenaddress().data(), static_cast<int>(this->listenaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ListenAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->listenaddress(), target);
  }

  // int32 ListenPort = 2;
  if (this->listenport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->listenport(), target);
  }

  // string LogPath = 3;
  if (this->logpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logpath().data(), static_cast<int>(this->logpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.LogPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logpath(), target);
  }

  // .Core.LogLevel LogLevel = 4;
  if (this->loglevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->loglevel(), target);
  }

  // int32 LogOperation = 5;
  if (this->logoperation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->logoperation(), target);
  }

  // int32 MQThreadQuantity = 6;
  if (this->mqthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mqthreadquantity(), target);
  }

  // int32 EPollThreadQuantity = 7;
  if (this->epollthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->epollthreadquantity(), target);
  }

  // int32 ProcessThreadQuantity = 8;
  if (this->processthreadquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->processthreadquantity(), target);
  }

  // int32 PrioritySize = 9;
  if (this->prioritysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->prioritysize(), target);
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->connecttime(), target);
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->receivetime(), target);
  }

  // string ModuleName = 12;
  if (this->modulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulename().data(), static_cast<int>(this->modulename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->modulename(), target);
  }

  // .Core.GLOBAL_CONFIG.MODULE_TYPE ModuleType = 13;
  if (this->moduletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->moduletype(), target);
  }

  // string ModulePath = 14;
  if (this->modulepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulepath().data(), static_cast<int>(this->modulepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModulePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->modulepath(), target);
  }

  // bytes ModuleConfig = 15;
  if (this->moduleconfig().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->moduleconfig(), target);
  }

  // string ModuleReference = 16;
  if (this->modulereference().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulereference().data(), static_cast<int>(this->modulereference().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleReference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->modulereference(), target);
  }

  // string ModuleFunctoins = 17;
  if (this->modulefunctoins().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modulefunctoins().data(), static_cast<int>(this->modulefunctoins().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.ModuleFunctoins");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->modulefunctoins(), target);
  }

  // bool EnableSSL = 18;
  if (this->enablessl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->enablessl(), target);
  }

  // string CertFilePath = 19;
  if (this->certfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certfilepath().data(), static_cast<int>(this->certfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.CertFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->certfilepath(), target);
  }

  // string KeyFilePath = 20;
  if (this->keyfilepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyfilepath().data(), static_cast<int>(this->keyfilepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.KeyFilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->keyfilepath(), target);
  }

  // string CertPasswd = 21;
  if (this->certpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certpasswd().data(), static_cast<int>(this->certpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.GLOBAL_CONFIG.CertPasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->certpasswd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Core.GLOBAL_CONFIG)
  return target;
}

size_t GLOBAL_CONFIG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Core.GLOBAL_CONFIG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ListenAddress = 1;
  if (this->listenaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listenaddress());
  }

  // string LogPath = 3;
  if (this->logpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logpath());
  }

  // string ModuleName = 12;
  if (this->modulename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulename());
  }

  // string ModulePath = 14;
  if (this->modulepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulepath());
  }

  // bytes ModuleConfig = 15;
  if (this->moduleconfig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->moduleconfig());
  }

  // string ModuleReference = 16;
  if (this->modulereference().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulereference());
  }

  // string ModuleFunctoins = 17;
  if (this->modulefunctoins().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modulefunctoins());
  }

  // string CertFilePath = 19;
  if (this->certfilepath().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certfilepath());
  }

  // string KeyFilePath = 20;
  if (this->keyfilepath().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyfilepath());
  }

  // string CertPasswd = 21;
  if (this->certpasswd().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certpasswd());
  }

  // int32 ListenPort = 2;
  if (this->listenport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listenport());
  }

  // .Core.LogLevel LogLevel = 4;
  if (this->loglevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loglevel());
  }

  // int32 LogOperation = 5;
  if (this->logoperation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logoperation());
  }

  // int32 MQThreadQuantity = 6;
  if (this->mqthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqthreadquantity());
  }

  // int32 EPollThreadQuantity = 7;
  if (this->epollthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epollthreadquantity());
  }

  // int32 ProcessThreadQuantity = 8;
  if (this->processthreadquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->processthreadquantity());
  }

  // int32 PrioritySize = 9;
  if (this->prioritysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prioritysize());
  }

  // int32 ConnectTime = 10;
  if (this->connecttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connecttime());
  }

  // int32 ReceiveTime = 11;
  if (this->receivetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivetime());
  }

  // .Core.GLOBAL_CONFIG.MODULE_TYPE ModuleType = 13;
  if (this->moduletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->moduletype());
  }

  // bool EnableSSL = 18;
  if (this->enablessl() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GLOBAL_CONFIG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Core.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  const GLOBAL_CONFIG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GLOBAL_CONFIG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Core.GLOBAL_CONFIG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Core.GLOBAL_CONFIG)
    MergeFrom(*source);
  }
}

void GLOBAL_CONFIG::MergeFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Core.GLOBAL_CONFIG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.listenaddress().size() > 0) {

    listenaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listenaddress_);
  }
  if (from.logpath().size() > 0) {

    logpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logpath_);
  }
  if (from.modulename().size() > 0) {

    modulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulename_);
  }
  if (from.modulepath().size() > 0) {

    modulepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulepath_);
  }
  if (from.moduleconfig().size() > 0) {

    moduleconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduleconfig_);
  }
  if (from.modulereference().size() > 0) {

    modulereference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulereference_);
  }
  if (from.modulefunctoins().size() > 0) {

    modulefunctoins_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modulefunctoins_);
  }
  if (from.certfilepath().size() > 0) {

    certfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certfilepath_);
  }
  if (from.keyfilepath().size() > 0) {

    keyfilepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfilepath_);
  }
  if (from.certpasswd().size() > 0) {

    certpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certpasswd_);
  }
  if (from.listenport() != 0) {
    set_listenport(from.listenport());
  }
  if (from.loglevel() != 0) {
    set_loglevel(from.loglevel());
  }
  if (from.logoperation() != 0) {
    set_logoperation(from.logoperation());
  }
  if (from.mqthreadquantity() != 0) {
    set_mqthreadquantity(from.mqthreadquantity());
  }
  if (from.epollthreadquantity() != 0) {
    set_epollthreadquantity(from.epollthreadquantity());
  }
  if (from.processthreadquantity() != 0) {
    set_processthreadquantity(from.processthreadquantity());
  }
  if (from.prioritysize() != 0) {
    set_prioritysize(from.prioritysize());
  }
  if (from.connecttime() != 0) {
    set_connecttime(from.connecttime());
  }
  if (from.receivetime() != 0) {
    set_receivetime(from.receivetime());
  }
  if (from.moduletype() != 0) {
    set_moduletype(from.moduletype());
  }
  if (from.enablessl() != 0) {
    set_enablessl(from.enablessl());
  }
}

void GLOBAL_CONFIG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Core.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GLOBAL_CONFIG::CopyFrom(const GLOBAL_CONFIG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Core.GLOBAL_CONFIG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GLOBAL_CONFIG::IsInitialized() const {
  return true;
}

void GLOBAL_CONFIG::Swap(GLOBAL_CONFIG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLOBAL_CONFIG::InternalSwap(GLOBAL_CONFIG* other) {
  using std::swap;
  listenaddress_.Swap(&other->listenaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logpath_.Swap(&other->logpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulename_.Swap(&other->modulename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulepath_.Swap(&other->modulepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  moduleconfig_.Swap(&other->moduleconfig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulereference_.Swap(&other->modulereference_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modulefunctoins_.Swap(&other->modulefunctoins_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certfilepath_.Swap(&other->certfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  keyfilepath_.Swap(&other->keyfilepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certpasswd_.Swap(&other->certpasswd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(listenport_, other->listenport_);
  swap(loglevel_, other->loglevel_);
  swap(logoperation_, other->logoperation_);
  swap(mqthreadquantity_, other->mqthreadquantity_);
  swap(epollthreadquantity_, other->epollthreadquantity_);
  swap(processthreadquantity_, other->processthreadquantity_);
  swap(prioritysize_, other->prioritysize_);
  swap(connecttime_, other->connecttime_);
  swap(receivetime_, other->receivetime_);
  swap(moduletype_, other->moduletype_);
  swap(enablessl_, other->enablessl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GLOBAL_CONFIG::GetMetadata() const {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeDataPackage::InitAsDefaultInstance() {
  ::Core::_RuntimeDataPackage_default_instance_._instance.get_mutable()->templateconfig_ = const_cast< ::Core::GLOBAL_CONFIG*>(
      ::Core::GLOBAL_CONFIG::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeDataPackage::kManagerAddressFieldNumber;
const int RuntimeDataPackage::kManagerPortFieldNumber;
const int RuntimeDataPackage::kTemplateIDFieldNumber;
const int RuntimeDataPackage::kNodeUUIDFieldNumber;
const int RuntimeDataPackage::kTemplateConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeDataPackage::RuntimeDataPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_core_2eproto::scc_info_RuntimeDataPackage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Core.RuntimeDataPackage)
}
RuntimeDataPackage::RuntimeDataPackage(const RuntimeDataPackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manageraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manageraddress().size() > 0) {
    manageraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manageraddress_);
  }
  if (from.has_templateconfig()) {
    templateconfig_ = new ::Core::GLOBAL_CONFIG(*from.templateconfig_);
  } else {
    templateconfig_ = NULL;
  }
  ::memcpy(&managerport_, &from.managerport_,
    static_cast<size_t>(reinterpret_cast<char*>(&nodeuuid_) -
    reinterpret_cast<char*>(&managerport_)) + sizeof(nodeuuid_));
  // @@protoc_insertion_point(copy_constructor:Core.RuntimeDataPackage)
}

void RuntimeDataPackage::SharedCtor() {
  manageraddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&templateconfig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodeuuid_) -
      reinterpret_cast<char*>(&templateconfig_)) + sizeof(nodeuuid_));
}

RuntimeDataPackage::~RuntimeDataPackage() {
  // @@protoc_insertion_point(destructor:Core.RuntimeDataPackage)
  SharedDtor();
}

void RuntimeDataPackage::SharedDtor() {
  manageraddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete templateconfig_;
}

void RuntimeDataPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RuntimeDataPackage::descriptor() {
  ::protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeDataPackage& RuntimeDataPackage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_core_2eproto::scc_info_RuntimeDataPackage.base);
  return *internal_default_instance();
}


void RuntimeDataPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:Core.RuntimeDataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  manageraddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && templateconfig_ != NULL) {
    delete templateconfig_;
  }
  templateconfig_ = NULL;
  ::memset(&managerport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodeuuid_) -
      reinterpret_cast<char*>(&managerport_)) + sizeof(nodeuuid_));
  _internal_metadata_.Clear();
}

bool RuntimeDataPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Core.RuntimeDataPackage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ManagerAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manageraddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manageraddress().data(), static_cast<int>(this->manageraddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Core.RuntimeDataPackage.ManagerAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ManagerPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &managerport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TemplateID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 NodeUUID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &nodeuuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Core.GLOBAL_CONFIG TemplateConfig = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_templateconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Core.RuntimeDataPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Core.RuntimeDataPackage)
  return false;
#undef DO_
}

void RuntimeDataPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Core.RuntimeDataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ManagerAddress = 1;
  if (this->manageraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manageraddress().data(), static_cast<int>(this->manageraddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.RuntimeDataPackage.ManagerAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->manageraddress(), output);
  }

  // int32 ManagerPort = 2;
  if (this->managerport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->managerport(), output);
  }

  // int32 TemplateID = 3;
  if (this->templateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->templateid(), output);
  }

  // fixed64 NodeUUID = 4;
  if (this->nodeuuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->nodeuuid(), output);
  }

  // .Core.GLOBAL_CONFIG TemplateConfig = 5;
  if (this->has_templateconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_templateconfig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Core.RuntimeDataPackage)
}

::google::protobuf::uint8* RuntimeDataPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Core.RuntimeDataPackage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ManagerAddress = 1;
  if (this->manageraddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manageraddress().data(), static_cast<int>(this->manageraddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Core.RuntimeDataPackage.ManagerAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->manageraddress(), target);
  }

  // int32 ManagerPort = 2;
  if (this->managerport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->managerport(), target);
  }

  // int32 TemplateID = 3;
  if (this->templateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->templateid(), target);
  }

  // fixed64 NodeUUID = 4;
  if (this->nodeuuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->nodeuuid(), target);
  }

  // .Core.GLOBAL_CONFIG TemplateConfig = 5;
  if (this->has_templateconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_templateconfig(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Core.RuntimeDataPackage)
  return target;
}

size_t RuntimeDataPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Core.RuntimeDataPackage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ManagerAddress = 1;
  if (this->manageraddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manageraddress());
  }

  // .Core.GLOBAL_CONFIG TemplateConfig = 5;
  if (this->has_templateconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *templateconfig_);
  }

  // int32 ManagerPort = 2;
  if (this->managerport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->managerport());
  }

  // int32 TemplateID = 3;
  if (this->templateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->templateid());
  }

  // fixed64 NodeUUID = 4;
  if (this->nodeuuid() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RuntimeDataPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Core.RuntimeDataPackage)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeDataPackage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeDataPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Core.RuntimeDataPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Core.RuntimeDataPackage)
    MergeFrom(*source);
  }
}

void RuntimeDataPackage::MergeFrom(const RuntimeDataPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Core.RuntimeDataPackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.manageraddress().size() > 0) {

    manageraddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manageraddress_);
  }
  if (from.has_templateconfig()) {
    mutable_templateconfig()->::Core::GLOBAL_CONFIG::MergeFrom(from.templateconfig());
  }
  if (from.managerport() != 0) {
    set_managerport(from.managerport());
  }
  if (from.templateid() != 0) {
    set_templateid(from.templateid());
  }
  if (from.nodeuuid() != 0) {
    set_nodeuuid(from.nodeuuid());
  }
}

void RuntimeDataPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Core.RuntimeDataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeDataPackage::CopyFrom(const RuntimeDataPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Core.RuntimeDataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeDataPackage::IsInitialized() const {
  return true;
}

void RuntimeDataPackage::Swap(RuntimeDataPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeDataPackage::InternalSwap(RuntimeDataPackage* other) {
  using std::swap;
  manageraddress_.Swap(&other->manageraddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(templateconfig_, other->templateconfig_);
  swap(managerport_, other->managerport_);
  swap(templateid_, other->templateid_);
  swap(nodeuuid_, other->nodeuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RuntimeDataPackage::GetMetadata() const {
  protobuf_core_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Core
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Core::GLOBAL_CONFIG* Arena::CreateMaybeMessage< ::Core::GLOBAL_CONFIG >(Arena* arena) {
  return Arena::CreateInternal< ::Core::GLOBAL_CONFIG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Core::RuntimeDataPackage* Arena::CreateMaybeMessage< ::Core::RuntimeDataPackage >(Arena* arena) {
  return Arena::CreateInternal< ::Core::RuntimeDataPackage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
