// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: processer.proto

#ifndef PROTOBUF_INCLUDED_processer_2eproto
#define PROTOBUF_INCLUDED_processer_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_processer_2eproto 

namespace protobuf_processer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_processer_2eproto
namespace Processer {
class GetTextMessageRequest;
class GetTextMessageRequestDefaultTypeInternal;
extern GetTextMessageRequestDefaultTypeInternal _GetTextMessageRequest_default_instance_;
class GetTextMessageResponse;
class GetTextMessageResponseDefaultTypeInternal;
extern GetTextMessageResponseDefaultTypeInternal _GetTextMessageResponse_default_instance_;
}  // namespace Processer
namespace google {
namespace protobuf {
template<> ::Processer::GetTextMessageRequest* Arena::CreateMaybeMessage<::Processer::GetTextMessageRequest>(Arena*);
template<> ::Processer::GetTextMessageResponse* Arena::CreateMaybeMessage<::Processer::GetTextMessageResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Processer {

enum Functions {
  Invalid = 0,
  GetText = 601,
  Reload = 602,
  GetIP = 607,
  Functions_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Functions_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Functions_IsValid(int value);
const Functions Functions_MIN = Invalid;
const Functions Functions_MAX = GetIP;
const int Functions_ARRAYSIZE = Functions_MAX + 1;

const ::google::protobuf::EnumDescriptor* Functions_descriptor();
inline const ::std::string& Functions_Name(Functions value) {
  return ::google::protobuf::internal::NameOfEnum(
    Functions_descriptor(), value);
}
inline bool Functions_Parse(
    const ::std::string& name, Functions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Functions>(
    Functions_descriptor(), name, value);
}
// ===================================================================

class GetTextMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Processer.GetTextMessageRequest) */ {
 public:
  GetTextMessageRequest();
  virtual ~GetTextMessageRequest();

  GetTextMessageRequest(const GetTextMessageRequest& from);

  inline GetTextMessageRequest& operator=(const GetTextMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTextMessageRequest(GetTextMessageRequest&& from) noexcept
    : GetTextMessageRequest() {
    *this = ::std::move(from);
  }

  inline GetTextMessageRequest& operator=(GetTextMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTextMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTextMessageRequest* internal_default_instance() {
    return reinterpret_cast<const GetTextMessageRequest*>(
               &_GetTextMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetTextMessageRequest* other);
  friend void swap(GetTextMessageRequest& a, GetTextMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTextMessageRequest* New() const final {
    return CreateMaybeMessage<GetTextMessageRequest>(NULL);
  }

  GetTextMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTextMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTextMessageRequest& from);
  void MergeFrom(const GetTextMessageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTextMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Processer.GetTextMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_processer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTextMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Processer.GetTextMessageResponse) */ {
 public:
  GetTextMessageResponse();
  virtual ~GetTextMessageResponse();

  GetTextMessageResponse(const GetTextMessageResponse& from);

  inline GetTextMessageResponse& operator=(const GetTextMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTextMessageResponse(GetTextMessageResponse&& from) noexcept
    : GetTextMessageResponse() {
    *this = ::std::move(from);
  }

  inline GetTextMessageResponse& operator=(GetTextMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTextMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTextMessageResponse* internal_default_instance() {
    return reinterpret_cast<const GetTextMessageResponse*>(
               &_GetTextMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetTextMessageResponse* other);
  friend void swap(GetTextMessageResponse& a, GetTextMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTextMessageResponse* New() const final {
    return CreateMaybeMessage<GetTextMessageResponse>(NULL);
  }

  GetTextMessageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTextMessageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTextMessageResponse& from);
  void MergeFrom(const GetTextMessageResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTextMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Processer.GetTextMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_processer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetTextMessageRequest

// string content = 1;
inline void GetTextMessageRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTextMessageRequest::content() const {
  // @@protoc_insertion_point(field_get:Processer.GetTextMessageRequest.content)
  return content_.GetNoArena();
}
inline void GetTextMessageRequest::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Processer.GetTextMessageRequest.content)
}
#if LANG_CXX11
inline void GetTextMessageRequest::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Processer.GetTextMessageRequest.content)
}
#endif
inline void GetTextMessageRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Processer.GetTextMessageRequest.content)
}
inline void GetTextMessageRequest::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Processer.GetTextMessageRequest.content)
}
inline ::std::string* GetTextMessageRequest::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:Processer.GetTextMessageRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTextMessageRequest::release_content() {
  // @@protoc_insertion_point(field_release:Processer.GetTextMessageRequest.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTextMessageRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Processer.GetTextMessageRequest.content)
}

// -------------------------------------------------------------------

// GetTextMessageResponse

// string content = 1;
inline void GetTextMessageResponse::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTextMessageResponse::content() const {
  // @@protoc_insertion_point(field_get:Processer.GetTextMessageResponse.content)
  return content_.GetNoArena();
}
inline void GetTextMessageResponse::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Processer.GetTextMessageResponse.content)
}
#if LANG_CXX11
inline void GetTextMessageResponse::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Processer.GetTextMessageResponse.content)
}
#endif
inline void GetTextMessageResponse::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Processer.GetTextMessageResponse.content)
}
inline void GetTextMessageResponse::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Processer.GetTextMessageResponse.content)
}
inline ::std::string* GetTextMessageResponse::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:Processer.GetTextMessageResponse.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTextMessageResponse::release_content() {
  // @@protoc_insertion_point(field_release:Processer.GetTextMessageResponse.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTextMessageResponse::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Processer.GetTextMessageResponse.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Processer

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Processer::Functions> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Processer::Functions>() {
  return ::Processer::Functions_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_processer_2eproto
