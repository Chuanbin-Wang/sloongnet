// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#ifndef PROTOBUF_INCLUDED_base_2eproto
#define PROTOBUF_INCLUDED_base_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto 

namespace protobuf_base_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_base_2eproto
namespace Base {
class DataPackage;
class DataPackageDefaultTypeInternal;
extern DataPackageDefaultTypeInternal _DataPackage_default_instance_;
}  // namespace Base
namespace google {
namespace protobuf {
template<> ::Base::DataPackage* Arena::CreateMaybeMessage<::Base::DataPackage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Base {

enum DataPackage_PackageType {
  DataPackage_PackageType_RequestPackage = 0,
  DataPackage_PackageType_EventPackage = 1,
  DataPackage_PackageType_DataPackage_PackageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataPackage_PackageType_DataPackage_PackageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataPackage_PackageType_IsValid(int value);
const DataPackage_PackageType DataPackage_PackageType_PackageType_MIN = DataPackage_PackageType_RequestPackage;
const DataPackage_PackageType DataPackage_PackageType_PackageType_MAX = DataPackage_PackageType_EventPackage;
const int DataPackage_PackageType_PackageType_ARRAYSIZE = DataPackage_PackageType_PackageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataPackage_PackageType_descriptor();
inline const ::std::string& DataPackage_PackageType_Name(DataPackage_PackageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataPackage_PackageType_descriptor(), value);
}
inline bool DataPackage_PackageType_Parse(
    const ::std::string& name, DataPackage_PackageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataPackage_PackageType>(
    DataPackage_PackageType_descriptor(), name, value);
}
enum DataPackage_StatusType {
  DataPackage_StatusType_Request = 0,
  DataPackage_StatusType_Response = 1,
  DataPackage_StatusType_DataPackage_StatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataPackage_StatusType_DataPackage_StatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataPackage_StatusType_IsValid(int value);
const DataPackage_StatusType DataPackage_StatusType_StatusType_MIN = DataPackage_StatusType_Request;
const DataPackage_StatusType DataPackage_StatusType_StatusType_MAX = DataPackage_StatusType_Response;
const int DataPackage_StatusType_StatusType_ARRAYSIZE = DataPackage_StatusType_StatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataPackage_StatusType_descriptor();
inline const ::std::string& DataPackage_StatusType_Name(DataPackage_StatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataPackage_StatusType_descriptor(), value);
}
inline bool DataPackage_StatusType_Parse(
    const ::std::string& name, DataPackage_StatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataPackage_StatusType>(
    DataPackage_StatusType_descriptor(), name, value);
}
enum ResultType {
  Invalid = 0,
  Succeed = 1,
  Error = 2,
  Warning = 3,
  Retry = 4,
  Ignore = 5,
  ResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResultType_IsValid(int value);
const ResultType ResultType_MIN = Invalid;
const ResultType ResultType_MAX = Ignore;
const int ResultType_ARRAYSIZE = ResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultType_descriptor();
inline const ::std::string& ResultType_Name(ResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultType_descriptor(), value);
}
inline bool ResultType_Parse(
    const ::std::string& name, ResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultType>(
    ResultType_descriptor(), name, value);
}
// ===================================================================

class DataPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Base.DataPackage) */ {
 public:
  DataPackage();
  virtual ~DataPackage();

  DataPackage(const DataPackage& from);

  inline DataPackage& operator=(const DataPackage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataPackage(DataPackage&& from) noexcept
    : DataPackage() {
    *this = ::std::move(from);
  }

  inline DataPackage& operator=(DataPackage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPackage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataPackage* internal_default_instance() {
    return reinterpret_cast<const DataPackage*>(
               &_DataPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DataPackage* other);
  friend void swap(DataPackage& a, DataPackage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataPackage* New() const final {
    return CreateMaybeMessage<DataPackage>(NULL);
  }

  DataPackage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataPackage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataPackage& from);
  void MergeFrom(const DataPackage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataPackage_PackageType PackageType;
  static const PackageType RequestPackage =
    DataPackage_PackageType_RequestPackage;
  static const PackageType EventPackage =
    DataPackage_PackageType_EventPackage;
  static inline bool PackageType_IsValid(int value) {
    return DataPackage_PackageType_IsValid(value);
  }
  static const PackageType PackageType_MIN =
    DataPackage_PackageType_PackageType_MIN;
  static const PackageType PackageType_MAX =
    DataPackage_PackageType_PackageType_MAX;
  static const int PackageType_ARRAYSIZE =
    DataPackage_PackageType_PackageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PackageType_descriptor() {
    return DataPackage_PackageType_descriptor();
  }
  static inline const ::std::string& PackageType_Name(PackageType value) {
    return DataPackage_PackageType_Name(value);
  }
  static inline bool PackageType_Parse(const ::std::string& name,
      PackageType* value) {
    return DataPackage_PackageType_Parse(name, value);
  }

  typedef DataPackage_StatusType StatusType;
  static const StatusType Request =
    DataPackage_StatusType_Request;
  static const StatusType Response =
    DataPackage_StatusType_Response;
  static inline bool StatusType_IsValid(int value) {
    return DataPackage_StatusType_IsValid(value);
  }
  static const StatusType StatusType_MIN =
    DataPackage_StatusType_StatusType_MIN;
  static const StatusType StatusType_MAX =
    DataPackage_StatusType_StatusType_MAX;
  static const int StatusType_ARRAYSIZE =
    DataPackage_StatusType_StatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusType_descriptor() {
    return DataPackage_StatusType_descriptor();
  }
  static inline const ::std::string& StatusType_Name(StatusType value) {
    return DataPackage_StatusType_Name(value);
  }
  static inline bool StatusType_Parse(const ::std::string& name,
      StatusType* value) {
    return DataPackage_StatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes Hash = 6;
  void clear_hash();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const void* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // bytes Content = 9;
  void clear_content();
  static const int kContentFieldNumber = 9;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // bytes Extend = 10;
  void clear_extend();
  static const int kExtendFieldNumber = 10;
  const ::std::string& extend() const;
  void set_extend(const ::std::string& value);
  #if LANG_CXX11
  void set_extend(::std::string&& value);
  #endif
  void set_extend(const char* value);
  void set_extend(const void* value, size_t size);
  ::std::string* mutable_extend();
  ::std::string* release_extend();
  void set_allocated_extend(::std::string* extend);

  // .Base.DataPackage.PackageType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Base::DataPackage_PackageType type() const;
  void set_type(::Base::DataPackage_PackageType value);

  // .Base.DataPackage.StatusType Status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::Base::DataPackage_StatusType status() const;
  void set_status(::Base::DataPackage_StatusType value);

  // int32 Function = 3;
  void clear_function();
  static const int kFunctionFieldNumber = 3;
  ::google::protobuf::int32 function() const;
  void set_function(::google::protobuf::int32 value);

  // int32 Priority = 4;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // fixed64 ID = 5;
  void clear_id();
  static const int kIDFieldNumber = 5;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // fixed64 Sender = 7;
  void clear_sender();
  static const int kSenderFieldNumber = 7;
  ::google::protobuf::uint64 sender() const;
  void set_sender(::google::protobuf::uint64 value);

  // .Base.ResultType Result = 8;
  void clear_result();
  static const int kResultFieldNumber = 8;
  ::Base::ResultType result() const;
  void set_result(::Base::ResultType value);

  // @@protoc_insertion_point(class_scope:Base.DataPackage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr extend_;
  int type_;
  int status_;
  ::google::protobuf::int32 function_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 sender_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataPackage

// .Base.DataPackage.PackageType Type = 1;
inline void DataPackage::clear_type() {
  type_ = 0;
}
inline ::Base::DataPackage_PackageType DataPackage::type() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Type)
  return static_cast< ::Base::DataPackage_PackageType >(type_);
}
inline void DataPackage::set_type(::Base::DataPackage_PackageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Type)
}

// .Base.DataPackage.StatusType Status = 2;
inline void DataPackage::clear_status() {
  status_ = 0;
}
inline ::Base::DataPackage_StatusType DataPackage::status() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Status)
  return static_cast< ::Base::DataPackage_StatusType >(status_);
}
inline void DataPackage::set_status(::Base::DataPackage_StatusType value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Status)
}

// int32 Function = 3;
inline void DataPackage::clear_function() {
  function_ = 0;
}
inline ::google::protobuf::int32 DataPackage::function() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Function)
  return function_;
}
inline void DataPackage::set_function(::google::protobuf::int32 value) {
  
  function_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Function)
}

// int32 Priority = 4;
inline void DataPackage::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 DataPackage::priority() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Priority)
  return priority_;
}
inline void DataPackage::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Priority)
}

// fixed64 ID = 5;
inline void DataPackage::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DataPackage::id() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.ID)
  return id_;
}
inline void DataPackage::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.ID)
}

// bytes Hash = 6;
inline void DataPackage::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPackage::hash() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Hash)
  return hash_.GetNoArena();
}
inline void DataPackage::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Base.DataPackage.Hash)
}
#if LANG_CXX11
inline void DataPackage::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Base.DataPackage.Hash)
}
#endif
inline void DataPackage::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Base.DataPackage.Hash)
}
inline void DataPackage::set_hash(const void* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Base.DataPackage.Hash)
}
inline ::std::string* DataPackage::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:Base.DataPackage.Hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPackage::release_hash() {
  // @@protoc_insertion_point(field_release:Base.DataPackage.Hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPackage::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:Base.DataPackage.Hash)
}

// fixed64 Sender = 7;
inline void DataPackage::clear_sender() {
  sender_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DataPackage::sender() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Sender)
  return sender_;
}
inline void DataPackage::set_sender(::google::protobuf::uint64 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Sender)
}

// .Base.ResultType Result = 8;
inline void DataPackage::clear_result() {
  result_ = 0;
}
inline ::Base::ResultType DataPackage::result() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Result)
  return static_cast< ::Base::ResultType >(result_);
}
inline void DataPackage::set_result(::Base::ResultType value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:Base.DataPackage.Result)
}

// bytes Content = 9;
inline void DataPackage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPackage::content() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Content)
  return content_.GetNoArena();
}
inline void DataPackage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Base.DataPackage.Content)
}
#if LANG_CXX11
inline void DataPackage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Base.DataPackage.Content)
}
#endif
inline void DataPackage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Base.DataPackage.Content)
}
inline void DataPackage::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Base.DataPackage.Content)
}
inline ::std::string* DataPackage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:Base.DataPackage.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPackage::release_content() {
  // @@protoc_insertion_point(field_release:Base.DataPackage.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPackage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Base.DataPackage.Content)
}

// bytes Extend = 10;
inline void DataPackage::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPackage::extend() const {
  // @@protoc_insertion_point(field_get:Base.DataPackage.Extend)
  return extend_.GetNoArena();
}
inline void DataPackage::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Base.DataPackage.Extend)
}
#if LANG_CXX11
inline void DataPackage::set_extend(::std::string&& value) {
  
  extend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Base.DataPackage.Extend)
}
#endif
inline void DataPackage::set_extend(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Base.DataPackage.Extend)
}
inline void DataPackage::set_extend(const void* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Base.DataPackage.Extend)
}
inline ::std::string* DataPackage::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:Base.DataPackage.Extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPackage::release_extend() {
  // @@protoc_insertion_point(field_release:Base.DataPackage.Extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPackage::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:Base.DataPackage.Extend)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Base

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Base::DataPackage_PackageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Base::DataPackage_PackageType>() {
  return ::Base::DataPackage_PackageType_descriptor();
}
template <> struct is_proto_enum< ::Base::DataPackage_StatusType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Base::DataPackage_StatusType>() {
  return ::Base::DataPackage_StatusType_descriptor();
}
template <> struct is_proto_enum< ::Base::ResultType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Base::ResultType>() {
  return ::Base::ResultType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_base_2eproto
